"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.serializeClientError = exports.deserializeClientError = exports.serializeClientErrorContextInfoField = exports.deserializeClientErrorContextInfoField = exports.serializeClientErrorCodeField = exports.deserializeClientErrorCodeField = exports.serializeClientErrorTypeField = exports.deserializeClientErrorTypeField = exports.serializeSignRequestCreateRequestSignatureColorField = exports.deserializeSignRequestCreateRequestSignatureColorField = exports.serializeFileRequestCopyRequest = exports.deserializeFileRequestCopyRequest = exports.serializeFileRequestCopyRequestFolderField = exports.deserializeFileRequestCopyRequestFolderField = exports.serializeFileRequestCopyRequestFolderFieldTypeField = exports.deserializeFileRequestCopyRequestFolderFieldTypeField = exports.serializeFileRequestUpdateRequest = exports.deserializeFileRequestUpdateRequest = exports.serializeFileRequestUpdateRequestStatusField = exports.deserializeFileRequestUpdateRequestStatusField = exports.serializeMetadataQuery = exports.deserializeMetadataQuery = exports.serializeMetadataQueryOrderByField = exports.deserializeMetadataQueryOrderByField = exports.serializeMetadataQueryOrderByFieldDirectionField = exports.deserializeMetadataQueryOrderByFieldDirectionField = exports.serializeMetadataQueryQueryParamsField = exports.deserializeMetadataQueryQueryParamsField = exports.serializeZipDownloadRequest = exports.deserializeZipDownloadRequest = exports.serializeZipDownloadRequestItemsField = exports.deserializeZipDownloadRequestItemsField = exports.serializeZipDownloadRequestItemsFieldTypeField = exports.deserializeZipDownloadRequestItemsFieldTypeField = exports.serializePostOAuth2Revoke = exports.deserializePostOAuth2Revoke = exports.serializePostOAuth2TokenRefreshAccessToken = exports.deserializePostOAuth2TokenRefreshAccessToken = exports.serializePostOAuth2TokenRefreshAccessTokenGrantTypeField = exports.deserializePostOAuth2TokenRefreshAccessTokenGrantTypeField = exports.serializePostOAuth2Token = exports.deserializePostOAuth2Token = exports.serializePostOAuth2TokenBoxSubjectTypeField = exports.deserializePostOAuth2TokenBoxSubjectTypeField = exports.serializePostOAuth2TokenActorTokenTypeField = exports.deserializePostOAuth2TokenActorTokenTypeField = exports.serializePostOAuth2TokenSubjectTokenTypeField = exports.deserializePostOAuth2TokenSubjectTokenTypeField = exports.serializePostOAuth2TokenGrantTypeField = exports.deserializePostOAuth2TokenGrantTypeField = void 0;
exports.serializeClassificationTemplateFieldsFieldDisplayNameField = exports.deserializeClassificationTemplateFieldsFieldDisplayNameField = exports.serializeClassificationTemplateFieldsFieldKeyField = exports.deserializeClassificationTemplateFieldsFieldKeyField = exports.serializeClassificationTemplateFieldsFieldTypeField = exports.deserializeClassificationTemplateFieldsFieldTypeField = exports.serializeClassificationTemplateDisplayNameField = exports.deserializeClassificationTemplateDisplayNameField = exports.serializeClassificationTemplateTemplateKeyField = exports.deserializeClassificationTemplateTemplateKeyField = exports.serializeClassificationTemplateTypeField = exports.deserializeClassificationTemplateTypeField = exports.serializeClassification = exports.deserializeClassification = exports.serializeClassificationTemplateField = exports.deserializeClassificationTemplateField = exports.serializeAccessTokenIssuedTokenTypeField = exports.deserializeAccessTokenIssuedTokenTypeField = exports.serializeAccessTokenTokenTypeField = exports.deserializeAccessTokenTokenTypeField = exports.serializeWebhookInvocationTriggerField = exports.deserializeWebhookInvocationTriggerField = exports.serializeWebhookInvocationTypeField = exports.deserializeWebhookInvocationTypeField = exports.serializeSkillInvocationEnterpriseField = exports.deserializeSkillInvocationEnterpriseField = exports.serializeSkillInvocationEnterpriseFieldTypeField = exports.deserializeSkillInvocationEnterpriseFieldTypeField = exports.serializeSkillInvocationStatusField = exports.deserializeSkillInvocationStatusField = exports.serializeSkillInvocationStatusFieldStateField = exports.deserializeSkillInvocationStatusFieldStateField = exports.serializeSkillInvocationTokenField = exports.deserializeSkillInvocationTokenField = exports.serializeSkillInvocationTokenFieldWriteField = exports.deserializeSkillInvocationTokenFieldWriteField = exports.serializeSkillInvocationTokenFieldWriteFieldTokenTypeField = exports.deserializeSkillInvocationTokenFieldWriteFieldTokenTypeField = exports.serializeSkillInvocationTokenFieldReadField = exports.deserializeSkillInvocationTokenFieldReadField = exports.serializeSkillInvocationTokenFieldReadFieldTokenTypeField = exports.deserializeSkillInvocationTokenFieldReadFieldTokenTypeField = exports.serializeSkillInvocationSkillField = exports.deserializeSkillInvocationSkillField = exports.serializeSkillInvocationSkillFieldTypeField = exports.deserializeSkillInvocationSkillFieldTypeField = exports.serializeSkillInvocationTypeField = exports.deserializeSkillInvocationTypeField = exports.serializeOAuth2Error = exports.deserializeOAuth2Error = void 0;
exports.serializeCollaborationAllowlistExemptTargets = exports.deserializeCollaborationAllowlistExemptTargets = exports.serializeCollaborationAllowlistExemptTarget = exports.deserializeCollaborationAllowlistExemptTarget = exports.serializeCollaborationAllowlistExemptTargetUserField = exports.deserializeCollaborationAllowlistExemptTargetUserField = exports.serializeCollaborationAllowlistExemptTargetUserFieldTypeField = exports.deserializeCollaborationAllowlistExemptTargetUserFieldTypeField = exports.serializeCollaborationAllowlistExemptTargetEnterpriseField = exports.deserializeCollaborationAllowlistExemptTargetEnterpriseField = exports.serializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = exports.deserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = exports.serializeCollaborationAllowlistExemptTargetTypeField = exports.deserializeCollaborationAllowlistExemptTargetTypeField = exports.serializeCollaborationAllowlistEntries = exports.deserializeCollaborationAllowlistEntries = exports.serializeCollaborationAllowlistEntry = exports.deserializeCollaborationAllowlistEntry = exports.serializeCollaborationAllowlistEntryEnterpriseField = exports.deserializeCollaborationAllowlistEntryEnterpriseField = exports.serializeCollaborationAllowlistEntryEnterpriseFieldTypeField = exports.deserializeCollaborationAllowlistEntryEnterpriseFieldTypeField = exports.serializeCollaborationAllowlistEntryDirectionField = exports.deserializeCollaborationAllowlistEntryDirectionField = exports.serializeCollaborationAllowlistEntryTypeField = exports.deserializeCollaborationAllowlistEntryTypeField = exports.serializeCollaborationsOrderField = exports.deserializeCollaborationsOrderField = exports.serializeCollaborationsOrderFieldDirectionField = exports.deserializeCollaborationsOrderFieldDirectionField = exports.serializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = exports.deserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = exports.serializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = exports.deserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = exports.serializeCollaborationStatusField = exports.deserializeCollaborationStatusField = exports.serializeCollaborationRoleField = exports.deserializeCollaborationRoleField = exports.serializeCollaborationTypeField = exports.deserializeCollaborationTypeField = exports.serializeClassificationTemplate = exports.deserializeClassificationTemplate = exports.serializeClassificationTemplateFieldsField = exports.deserializeClassificationTemplateFieldsField = exports.serializeClassificationTemplateFieldsFieldOptionsField = exports.deserializeClassificationTemplateFieldsFieldOptionsField = exports.serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = exports.deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = exports.serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = exports.deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = void 0;
exports.serializeFileSharedLinkFieldEffectiveAccessField = exports.deserializeFileSharedLinkFieldEffectiveAccessField = exports.serializeFileSharedLinkFieldAccessField = exports.deserializeFileSharedLinkFieldAccessField = exports.serializeEventAdditionalDetailsField = exports.deserializeEventAdditionalDetailsField = exports.serializeEventEventTypeField = exports.deserializeEventEventTypeField = exports.serializeEnterpriseBase = exports.deserializeEnterpriseBase = exports.serializeEnterpriseBaseTypeField = exports.deserializeEnterpriseBaseTypeField = exports.serializeEmailAliases = exports.deserializeEmailAliases = exports.serializeEmailAlias = exports.deserializeEmailAlias = exports.serializeEmailAliasTypeField = exports.deserializeEmailAliasTypeField = exports.serializeDevicePinnersOrderField = exports.deserializeDevicePinnersOrderField = exports.serializeDevicePinnersOrderFieldDirectionField = exports.deserializeDevicePinnersOrderFieldDirectionField = exports.serializeDevicePinnersOrderFieldByField = exports.deserializeDevicePinnersOrderFieldByField = exports.serializeDevicePinnerTypeField = exports.deserializeDevicePinnerTypeField = exports.serializeCommentBase = exports.deserializeCommentBase = exports.serializeCommentBaseTypeField = exports.deserializeCommentBaseTypeField = exports.serializeCommentsOrderField = exports.deserializeCommentsOrderField = exports.serializeCommentsOrderFieldDirectionField = exports.deserializeCommentsOrderFieldDirectionField = exports.serializeCommentItemField = exports.deserializeCommentItemField = exports.serializeCollections = exports.deserializeCollections = exports.serializeCollectionsOrderField = exports.deserializeCollectionsOrderField = exports.serializeCollectionsOrderFieldDirectionField = exports.deserializeCollectionsOrderFieldDirectionField = exports.serializeCollection = exports.deserializeCollection = exports.serializeCollectionCollectionTypeField = exports.deserializeCollectionCollectionTypeField = exports.serializeCollectionNameField = exports.deserializeCollectionNameField = exports.serializeCollectionTypeField = exports.deserializeCollectionTypeField = void 0;
exports.serializeFileVersionBaseTypeField = exports.deserializeFileVersionBaseTypeField = exports.serializeFileRequestStatusField = exports.deserializeFileRequestStatusField = exports.serializeFileRequestTypeField = exports.deserializeFileRequestTypeField = exports.serializeFileBase = exports.deserializeFileBase = exports.serializeFileBaseTypeField = exports.deserializeFileBaseTypeField = exports.serializeFileFullSharedLinkPermissionOptionsField = exports.deserializeFileFullSharedLinkPermissionOptionsField = exports.serializeFileFullClassificationField = exports.deserializeFileFullClassificationField = exports.serializeFileFullRepresentationsField = exports.deserializeFileFullRepresentationsField = exports.serializeFileFullRepresentationsFieldEntriesField = exports.deserializeFileFullRepresentationsFieldEntriesField = exports.serializeFileFullRepresentationsFieldEntriesFieldStatusField = exports.deserializeFileFullRepresentationsFieldEntriesFieldStatusField = exports.serializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = exports.deserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = exports.serializeFileFullRepresentationsFieldEntriesFieldPropertiesField = exports.deserializeFileFullRepresentationsFieldEntriesFieldPropertiesField = exports.serializeFileFullRepresentationsFieldEntriesFieldInfoField = exports.deserializeFileFullRepresentationsFieldEntriesFieldInfoField = exports.serializeFileFullRepresentationsFieldEntriesFieldContentField = exports.deserializeFileFullRepresentationsFieldEntriesFieldContentField = exports.serializeFileFullMetadataField = exports.deserializeFileFullMetadataField = exports.serializeFileFullAllowedInviteeRolesField = exports.deserializeFileFullAllowedInviteeRolesField = exports.serializeFileFullWatermarkInfoField = exports.deserializeFileFullWatermarkInfoField = exports.serializeFileFullExpiringEmbedLinkFieldTokenTypeField = exports.deserializeFileFullExpiringEmbedLinkFieldTokenTypeField = exports.serializeFileFullLockFieldAppTypeField = exports.deserializeFileFullLockFieldAppTypeField = exports.serializeFileFullLockFieldTypeField = exports.deserializeFileFullLockFieldTypeField = exports.serializeFileFullPermissionsField = exports.deserializeFileFullPermissionsField = exports.serializeFileItemStatusField = exports.deserializeFileItemStatusField = exports.serializeFileSharedLinkField = exports.deserializeFileSharedLinkField = exports.serializeFileSharedLinkFieldPermissionsField = exports.deserializeFileSharedLinkFieldPermissionsField = exports.serializeFileSharedLinkFieldEffectivePermissionField = exports.deserializeFileSharedLinkFieldEffectivePermissionField = void 0;
exports.serializeFolderFullAllowedInviteeRolesField = exports.deserializeFolderFullAllowedInviteeRolesField = exports.serializeFolderFullAllowedSharedLinkAccessLevelsField = exports.deserializeFolderFullAllowedSharedLinkAccessLevelsField = exports.serializeFolderFullMetadataField = exports.deserializeFolderFullMetadataField = exports.serializeFolderFullPermissionsField = exports.deserializeFolderFullPermissionsField = exports.serializeFolderFullSyncStateField = exports.deserializeFolderFullSyncStateField = exports.serializeFolderItemStatusField = exports.deserializeFolderItemStatusField = exports.serializeFolderFolderUploadEmailField = exports.deserializeFolderFolderUploadEmailField = exports.serializeFolderFolderUploadEmailFieldAccessField = exports.deserializeFolderFolderUploadEmailFieldAccessField = exports.serializeFolderSharedLinkField = exports.deserializeFolderSharedLinkField = exports.serializeFolderSharedLinkFieldPermissionsField = exports.deserializeFolderSharedLinkFieldPermissionsField = exports.serializeFolderSharedLinkFieldEffectivePermissionField = exports.deserializeFolderSharedLinkFieldEffectivePermissionField = exports.serializeFolderSharedLinkFieldEffectiveAccessField = exports.deserializeFolderSharedLinkFieldEffectiveAccessField = exports.serializeFolderSharedLinkFieldAccessField = exports.deserializeFolderSharedLinkFieldAccessField = exports.serializeFileVersionRetentionTypeField = exports.deserializeFileVersionRetentionTypeField = exports.serializeFileVersionLegalHoldTypeField = exports.deserializeFileVersionLegalHoldTypeField = exports.serializeFileVersionsOrderField = exports.deserializeFileVersionsOrderField = exports.serializeFileVersionsOrderFieldDirectionField = exports.deserializeFileVersionsOrderFieldDirectionField = exports.serializeConflictError = exports.deserializeConflictError = exports.serializeConflictErrorContextInfoField = exports.deserializeConflictErrorContextInfoField = exports.serializeFileConflict = exports.deserializeFileConflict = exports.serializeFilesUnderRetention = exports.deserializeFilesUnderRetention = exports.serializeSignRequestSignFilesField = exports.deserializeSignRequestSignFilesField = exports.serializeFileMini = exports.deserializeFileMini = exports.serializeFileVersionMini = exports.deserializeFileVersionMini = exports.serializeFileVersionBase = exports.deserializeFileVersionBase = void 0;
exports.serializeGroupMembershipTypeField = exports.deserializeGroupMembershipTypeField = exports.serializeGroupFull = exports.deserializeGroupFull = exports.serializeGroup = exports.deserializeGroup = exports.serializeGroups = exports.deserializeGroups = exports.serializeGroupMini = exports.deserializeGroupMini = exports.serializeGroupMiniGroupTypeField = exports.deserializeGroupMiniGroupTypeField = exports.serializeGroupFullPermissionsField = exports.deserializeGroupFullPermissionsField = exports.serializeGroupFullMemberViewabilityLevelField = exports.deserializeGroupFullMemberViewabilityLevelField = exports.serializeGroupFullInvitabilityLevelField = exports.deserializeGroupFullInvitabilityLevelField = exports.serializeGroupBase = exports.deserializeGroupBase = exports.serializeGroupBaseTypeField = exports.deserializeGroupBaseTypeField = exports.serializeGroupsOrderField = exports.deserializeGroupsOrderField = exports.serializeGroupsOrderFieldDirectionField = exports.deserializeGroupsOrderFieldDirectionField = exports.serializeFolderLockLockedOperationsField = exports.deserializeFolderLockLockedOperationsField = exports.serializeFilePathCollectionField = exports.deserializeFilePathCollectionField = exports.serializeFolderPathCollectionField = exports.deserializeFolderPathCollectionField = exports.serializeTrashFileRestoredPathCollectionField = exports.deserializeTrashFileRestoredPathCollectionField = exports.serializeTrashFolderRestoredPathCollectionField = exports.deserializeTrashFolderRestoredPathCollectionField = exports.serializeTrashWebLinkRestoredPathCollectionField = exports.deserializeTrashWebLinkRestoredPathCollectionField = exports.serializeWebLinkPathCollectionField = exports.deserializeWebLinkPathCollectionField = exports.serializeFolderMini = exports.deserializeFolderMini = exports.serializeFolderBase = exports.deserializeFolderBase = exports.serializeFolderBaseTypeField = exports.deserializeFolderBaseTypeField = exports.serializeFolderFullClassificationField = exports.deserializeFolderFullClassificationField = exports.serializeFolderFullWatermarkInfoField = exports.deserializeFolderFullWatermarkInfoField = void 0;
exports.serializeMetadataCascadePolicyScopeField = exports.deserializeMetadataCascadePolicyScopeField = exports.serializeMetadataCascadePolicyParentField = exports.deserializeMetadataCascadePolicyParentField = exports.serializeMetadataCascadePolicyParentFieldTypeField = exports.deserializeMetadataCascadePolicyParentFieldTypeField = exports.serializeMetadataCascadePolicyOwnerEnterpriseField = exports.deserializeMetadataCascadePolicyOwnerEnterpriseField = exports.serializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = exports.deserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = exports.serializeMetadataCascadePolicyTypeField = exports.deserializeMetadataCascadePolicyTypeField = exports.serializeMetadataBase = exports.deserializeMetadataBase = exports.serializeMetadataFull = exports.deserializeMetadataFull = exports.serializeMetadatas = exports.deserializeMetadatas = exports.serializeMetadata = exports.deserializeMetadata = exports.serializeLegalHoldPolicyAssignments = exports.deserializeLegalHoldPolicyAssignments = exports.serializeLegalHoldPolicyAssignmentBase = exports.deserializeLegalHoldPolicyAssignmentBase = exports.serializeLegalHoldPolicyAssignmentBaseTypeField = exports.deserializeLegalHoldPolicyAssignmentBaseTypeField = exports.serializeLegalHoldPolicyMini = exports.deserializeLegalHoldPolicyMini = exports.serializeLegalHoldPolicyMiniTypeField = exports.deserializeLegalHoldPolicyMiniTypeField = exports.serializeLegalHoldPolicyAssignmentCountsField = exports.deserializeLegalHoldPolicyAssignmentCountsField = exports.serializeLegalHoldPolicyStatusField = exports.deserializeLegalHoldPolicyStatusField = exports.serializeItemsOrderField = exports.deserializeItemsOrderField = exports.serializeItemsOrderFieldDirectionField = exports.deserializeItemsOrderFieldDirectionField = exports.serializeInviteInvitedToField = exports.deserializeInviteInvitedToField = exports.serializeInviteInvitedToFieldTypeField = exports.deserializeInviteInvitedToFieldTypeField = exports.serializeInviteTypeField = exports.deserializeInviteTypeField = exports.serializeGroupMembershipsOrderField = exports.deserializeGroupMembershipsOrderField = exports.serializeGroupMembershipsOrderFieldDirectionField = exports.deserializeGroupMembershipsOrderFieldDirectionField = exports.serializeGroupMembershipRoleField = exports.deserializeGroupMembershipRoleField = void 0;
exports.serializeRetentionPolicies = exports.deserializeRetentionPolicies = exports.serializeRetentionPolicyMini = exports.deserializeRetentionPolicyMini = exports.serializeRetentionPolicyBase = exports.deserializeRetentionPolicyBase = exports.serializeRetentionPolicyBaseTypeField = exports.deserializeRetentionPolicyBaseTypeField = exports.serializeRetentionPolicyMiniDispositionActionField = exports.deserializeRetentionPolicyMiniDispositionActionField = exports.serializeRetentionPolicyAssignmentCountsField = exports.deserializeRetentionPolicyAssignmentCountsField = exports.serializeRetentionPolicyStatusField = exports.deserializeRetentionPolicyStatusField = exports.serializeRetentionPolicyRetentionTypeField = exports.deserializeRetentionPolicyRetentionTypeField = exports.serializeRetentionPolicyPolicyTypeField = exports.deserializeRetentionPolicyPolicyTypeField = exports.serializeRecentItemInteractionTypeField = exports.deserializeRecentItemInteractionTypeField = exports.serializeRealtimeServers = exports.deserializeRealtimeServers = exports.serializeRealtimeServer = exports.deserializeRealtimeServer = exports.serializeMetadataTemplates = exports.deserializeMetadataTemplates = exports.serializeMetadataTemplate = exports.deserializeMetadataTemplate = exports.serializeMetadataTemplateFieldsField = exports.deserializeMetadataTemplateFieldsField = exports.serializeMetadataTemplateFieldsFieldOptionsField = exports.deserializeMetadataTemplateFieldsFieldOptionsField = exports.serializeMetadataTemplateFieldsFieldTypeField = exports.deserializeMetadataTemplateFieldsFieldTypeField = exports.serializeMetadataTemplateTypeField = exports.deserializeMetadataTemplateTypeField = exports.serializeMetadataQueryIndices = exports.deserializeMetadataQueryIndices = exports.serializeMetadataQueryIndex = exports.deserializeMetadataQueryIndex = exports.serializeMetadataQueryIndexFieldsField = exports.deserializeMetadataQueryIndexFieldsField = exports.serializeMetadataQueryIndexFieldsFieldSortDirectionField = exports.deserializeMetadataQueryIndexFieldsFieldSortDirectionField = exports.serializeMetadataQueryIndexStatusField = exports.deserializeMetadataQueryIndexStatusField = exports.serializeMetadataCascadePolicies = exports.deserializeMetadataCascadePolicies = exports.serializeMetadataCascadePolicy = exports.deserializeMetadataCascadePolicy = void 0;
exports.serializeShieldInformationBarrierSegmentRestrictionBaseTypeField = exports.deserializeShieldInformationBarrierSegmentRestrictionBaseTypeField = exports.serializeShieldInformationBarrierSegmentMemberBase = exports.deserializeShieldInformationBarrierSegmentMemberBase = exports.serializeShieldInformationBarrierSegmentMemberBaseTypeField = exports.deserializeShieldInformationBarrierSegmentMemberBaseTypeField = exports.serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = exports.deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = exports.serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = exports.deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = exports.serializeShieldInformationBarrierSegmentTypeField = exports.deserializeShieldInformationBarrierSegmentTypeField = exports.serializeShieldInformationBarrierReportBase = exports.deserializeShieldInformationBarrierReportBase = exports.serializeShieldInformationBarrierReportBaseTypeField = exports.deserializeShieldInformationBarrierReportBaseTypeField = exports.serializeShieldInformationBarrierReportDetailsField = exports.deserializeShieldInformationBarrierReportDetailsField = exports.serializeShieldInformationBarrierReportStatusField = exports.deserializeShieldInformationBarrierReportStatusField = exports.serializeShieldInformationBarrierReportShieldInformationBarrierField = exports.deserializeShieldInformationBarrierReportShieldInformationBarrierField = exports.serializeShieldInformationBarrierReference = exports.deserializeShieldInformationBarrierReference = exports.serializeShieldInformationBarrierBase = exports.deserializeShieldInformationBarrierBase = exports.serializeShieldInformationBarrierBaseTypeField = exports.deserializeShieldInformationBarrierBaseTypeField = exports.serializeShieldInformationBarrierStatusField = exports.deserializeShieldInformationBarrierStatusField = exports.serializeShieldInformationBarrierTypeField = exports.deserializeShieldInformationBarrierTypeField = exports.serializeRetentionPolicyAssignmentFilterFieldsField = exports.deserializeRetentionPolicyAssignmentFilterFieldsField = exports.serializeRetentionPolicyAssignmentAssignedToField = exports.deserializeRetentionPolicyAssignmentAssignedToField = exports.serializeRetentionPolicyAssignmentAssignedToFieldTypeField = exports.deserializeRetentionPolicyAssignmentAssignedToFieldTypeField = exports.serializeRetentionPolicyAssignmentTypeField = exports.deserializeRetentionPolicyAssignmentTypeField = exports.serializeRetentionPolicyAssignments = exports.deserializeRetentionPolicyAssignments = exports.serializeRetentionPolicyAssignmentBase = exports.deserializeRetentionPolicyAssignmentBase = exports.serializeRetentionPolicyAssignmentBaseTypeField = exports.deserializeRetentionPolicyAssignmentBaseTypeField = exports.serializeFileVersionRetentions = exports.deserializeFileVersionRetentions = exports.serializeFileVersionRetention = exports.deserializeFileVersionRetention = void 0;
exports.serializeTermsOfServiceBase = exports.deserializeTermsOfServiceBase = exports.serializeTermsOfServiceBaseTypeField = exports.deserializeTermsOfServiceBaseTypeField = exports.serializeTermsOfServiceTosTypeField = exports.deserializeTermsOfServiceTosTypeField = exports.serializeTermsOfServiceEnterpriseField = exports.deserializeTermsOfServiceEnterpriseField = exports.serializeTermsOfServiceEnterpriseFieldTypeField = exports.deserializeTermsOfServiceEnterpriseFieldTypeField = exports.serializeTermsOfServiceStatusField = exports.deserializeTermsOfServiceStatusField = exports.serializeTaskAssignmentResolutionStateField = exports.deserializeTaskAssignmentResolutionStateField = exports.serializeTaskAssignmentTypeField = exports.deserializeTaskAssignmentTypeField = exports.serializeTaskCompletionRuleField = exports.deserializeTaskCompletionRuleField = exports.serializeTaskActionField = exports.deserializeTaskActionField = exports.serializeTaskTypeField = exports.deserializeTaskTypeField = exports.serializeStoragePolicyAssignments = exports.deserializeStoragePolicyAssignments = exports.serializeStoragePolicyAssignment = exports.deserializeStoragePolicyAssignment = exports.serializeStoragePolicyAssignmentAssignedToField = exports.deserializeStoragePolicyAssignmentAssignedToField = exports.serializeStoragePolicies = exports.deserializeStoragePolicies = exports.serializeStoragePolicy = exports.deserializeStoragePolicy = exports.serializeStoragePolicyMini = exports.deserializeStoragePolicyMini = exports.serializeStoragePolicyMiniTypeField = exports.deserializeStoragePolicyMiniTypeField = exports.serializeSessionTerminationMessage = exports.deserializeSessionTerminationMessage = exports.serializeShieldInformationBarrierSegmentRestrictionMini = exports.deserializeShieldInformationBarrierSegmentRestrictionMini = exports.serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = exports.deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = exports.serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = exports.deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = exports.serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = exports.deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = exports.serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = exports.deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = exports.serializeShieldInformationBarrierSegmentRestrictionBase = exports.deserializeShieldInformationBarrierSegmentRestrictionBase = void 0;
exports.serializeTrashWebLinkRestoredTypeField = exports.deserializeTrashWebLinkRestoredTypeField = exports.serializeTrashFolderRestoredItemStatusField = exports.deserializeTrashFolderRestoredItemStatusField = exports.serializeTrashFolderRestoredTypeField = exports.deserializeTrashFolderRestoredTypeField = exports.serializeTrashFileRestoredItemStatusField = exports.deserializeTrashFileRestoredItemStatusField = exports.serializeTrashFileRestoredTypeField = exports.deserializeTrashFileRestoredTypeField = exports.serializeTrashWebLinkItemStatusField = exports.deserializeTrashWebLinkItemStatusField = exports.serializeTrashWebLinkPathCollectionField = exports.deserializeTrashWebLinkPathCollectionField = exports.serializeTrashWebLinkPathCollectionFieldEntriesField = exports.deserializeTrashWebLinkPathCollectionFieldEntriesField = exports.serializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = exports.deserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = exports.serializeTrashWebLinkTypeField = exports.deserializeTrashWebLinkTypeField = exports.serializeTrashFolderItemStatusField = exports.deserializeTrashFolderItemStatusField = exports.serializeTrashFolderPathCollectionField = exports.deserializeTrashFolderPathCollectionField = exports.serializeTrashFolderPathCollectionFieldEntriesField = exports.deserializeTrashFolderPathCollectionFieldEntriesField = exports.serializeTrashFolderPathCollectionFieldEntriesFieldTypeField = exports.deserializeTrashFolderPathCollectionFieldEntriesFieldTypeField = exports.serializeTrashFolderTypeField = exports.deserializeTrashFolderTypeField = exports.serializeTrashFileItemStatusField = exports.deserializeTrashFileItemStatusField = exports.serializeTrashFilePathCollectionField = exports.deserializeTrashFilePathCollectionField = exports.serializeTrashFilePathCollectionFieldEntriesField = exports.deserializeTrashFilePathCollectionFieldEntriesField = exports.serializeTrashFilePathCollectionFieldEntriesFieldTypeField = exports.deserializeTrashFilePathCollectionFieldEntriesFieldTypeField = exports.serializeTrashFileTypeField = exports.deserializeTrashFileTypeField = exports.serializeTermsOfServiceUserStatusTypeField = exports.deserializeTermsOfServiceUserStatusTypeField = exports.serializeCollaborationAcceptanceRequirementsStatusField = exports.deserializeCollaborationAcceptanceRequirementsStatusField = exports.serializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = exports.deserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = exports.serializeTermsOfServices = exports.deserializeTermsOfServices = exports.serializeTermsOfService = exports.deserializeTermsOfService = void 0;
exports.serializeUser = exports.deserializeUser = exports.serializeUserMini = exports.deserializeUserMini = exports.serializeUserCollaborations = exports.deserializeUserCollaborations = exports.serializeUserBase = exports.deserializeUserBase = exports.serializeUserBaseTypeField = exports.deserializeUserBaseTypeField = exports.serializeUserFullEnterpriseField = exports.deserializeUserFullEnterpriseField = exports.serializeUserFullEnterpriseFieldTypeField = exports.deserializeUserFullEnterpriseFieldTypeField = exports.serializeUserFullRoleField = exports.deserializeUserFullRoleField = exports.serializeUsersOrderField = exports.deserializeUsersOrderField = exports.serializeUsersOrderFieldDirectionField = exports.deserializeUsersOrderFieldDirectionField = exports.serializeUserAvatar = exports.deserializeUserAvatar = exports.serializeUserAvatarPicUrlsField = exports.deserializeUserAvatarPicUrlsField = exports.serializeUserNotificationEmailField = exports.deserializeUserNotificationEmailField = exports.serializeUserStatusField = exports.deserializeUserStatusField = exports.serializeUploadUrl = exports.deserializeUploadUrl = exports.serializeUploadSession = exports.deserializeUploadSession = exports.serializeUploadSessionSessionEndpointsField = exports.deserializeUploadSessionSessionEndpointsField = exports.serializeUploadSessionTypeField = exports.deserializeUploadSessionTypeField = exports.serializeUploadParts = exports.deserializeUploadParts = exports.serializeUploadPartsOrderField = exports.deserializeUploadPartsOrderField = exports.serializeUploadPartsOrderFieldDirectionField = exports.deserializeUploadPartsOrderFieldDirectionField = exports.serializeUploadedPart = exports.deserializeUploadedPart = exports.serializeUploadPart = exports.deserializeUploadPart = exports.serializeUploadPartMini = exports.deserializeUploadPartMini = exports.serializeTrashWebLinkRestoredItemStatusField = exports.deserializeTrashWebLinkRestoredItemStatusField = void 0;
exports.serializeFileFullLockField = exports.deserializeFileFullLockField = exports.serializeFileRequest = exports.deserializeFileRequest = exports.serializeFileVersionFull = exports.deserializeFileVersionFull = exports.serializeFileVersions = exports.deserializeFileVersions = exports.serializeFileVersion = exports.deserializeFileVersion = exports.serializeGroupMemberships = exports.deserializeGroupMemberships = exports.serializeGroupMembership = exports.deserializeGroupMembership = exports.serializeInvite = exports.deserializeInvite = exports.serializeLegalHoldPolicies = exports.deserializeLegalHoldPolicies = exports.serializeLegalHoldPolicy = exports.deserializeLegalHoldPolicy = exports.serializeRetentionPolicy = exports.deserializeRetentionPolicy = exports.serializeRetentionPolicyAssignment = exports.deserializeRetentionPolicyAssignment = exports.serializeTasks = exports.deserializeTasks = exports.serializeTask = exports.deserializeTask = exports.serializeTaskAssignments = exports.deserializeTaskAssignments = exports.serializeTaskAssignment = exports.deserializeTaskAssignment = exports.serializeTermsOfServiceUserStatuses = exports.deserializeTermsOfServiceUserStatuses = exports.serializeTermsOfServiceUserStatus = exports.deserializeTermsOfServiceUserStatus = exports.serializeTrashFile = exports.deserializeTrashFile = exports.serializeTrashFolder = exports.deserializeTrashFolder = exports.serializeTrashWebLink = exports.deserializeTrashWebLink = exports.serializeTrashFileRestored = exports.deserializeTrashFileRestored = exports.serializeTrashFolderRestored = exports.deserializeTrashFolderRestored = exports.serializeTrashWebLinkRestored = exports.deserializeTrashWebLinkRestored = exports.serializeUsers = exports.deserializeUsers = void 0;
exports.serializeWebLinkSharedLinkFieldAccessField = exports.deserializeWebLinkSharedLinkFieldAccessField = exports.serializeWebhook = exports.deserializeWebhook = exports.serializeWebhooks = exports.deserializeWebhooks = exports.serializeWebhookMini = exports.deserializeWebhookMini = exports.serializeWebhookMiniTargetField = exports.deserializeWebhookMiniTargetField = exports.serializeWebhookMiniTargetFieldTypeField = exports.deserializeWebhookMiniTargetFieldTypeField = exports.serializeWebhookMiniTypeField = exports.deserializeWebhookMiniTypeField = exports.serializeWebhookTriggersField = exports.deserializeWebhookTriggersField = exports.serializeWatermark = exports.deserializeWatermark = exports.serializeWatermarkWatermarkField = exports.deserializeWatermarkWatermarkField = exports.serializeFolderLocks = exports.deserializeFolderLocks = exports.serializeFolderLock = exports.deserializeFolderLock = exports.serializeShieldInformationBarrier = exports.deserializeShieldInformationBarrier = exports.serializeShieldInformationBarrierReport = exports.deserializeShieldInformationBarrierReport = exports.serializeShieldInformationBarrierSegment = exports.deserializeShieldInformationBarrierSegment = exports.serializeShieldInformationBarrierSegmentMember = exports.deserializeShieldInformationBarrierSegmentMember = exports.serializeShieldInformationBarrierSegmentMemberMini = exports.deserializeShieldInformationBarrierSegmentMemberMini = exports.serializeShieldInformationBarrierSegmentRestriction = exports.deserializeShieldInformationBarrierSegmentRestriction = exports.serializeComments = exports.deserializeComments = exports.serializeCommentFull = exports.deserializeCommentFull = exports.serializeComment = exports.deserializeComment = exports.serializeDevicePinners = exports.deserializeDevicePinners = exports.serializeDevicePinner = exports.deserializeDevicePinner = exports.serializeFiles = exports.deserializeFiles = exports.serializeFile = exports.deserializeFile = void 0;
exports.serializeFileVersionLegalHold = exports.deserializeFileVersionLegalHold = exports.serializeLegalHoldPolicyAssignment = exports.deserializeLegalHoldPolicyAssignment = exports.serializeLegalHoldPolicyAssignmentAssignedToField = exports.deserializeLegalHoldPolicyAssignmentAssignedToField = exports.serializeMetadataQueryResults = exports.deserializeMetadataQueryResults = exports.serializeMetadataQueryResultsEntriesField = exports.deserializeMetadataQueryResultsEntriesField = exports.serializeRecentItems = exports.deserializeRecentItems = exports.serializeRecentItem = exports.deserializeRecentItem = exports.serializeRecentItemItemField = exports.deserializeRecentItemItemField = exports.serializeSearchResults = exports.deserializeSearchResults = exports.serializeSearchResultsEntriesField = exports.deserializeSearchResultsEntriesField = exports.serializeSearchResultsWithSharedLinks = exports.deserializeSearchResultsWithSharedLinks = exports.serializeSearchResultWithSharedLink = exports.deserializeSearchResultWithSharedLink = exports.serializeSearchResultWithSharedLinkItemField = exports.deserializeSearchResultWithSharedLinkItemField = exports.serializeFolder = exports.deserializeFolder = exports.serializeItems = exports.deserializeItems = exports.serializeItemsEntriesField = exports.deserializeItemsEntriesField = exports.serializeWebLink = exports.deserializeWebLink = exports.serializeWebLinkMini = exports.deserializeWebLinkMini = exports.serializeWebLinkBase = exports.deserializeWebLinkBase = exports.serializeWebLinkBaseTypeField = exports.deserializeWebLinkBaseTypeField = exports.serializeWebLinkItemStatusField = exports.deserializeWebLinkItemStatusField = exports.serializeWebLinkSharedLinkField = exports.deserializeWebLinkSharedLinkField = exports.serializeWebLinkSharedLinkFieldPermissionsField = exports.deserializeWebLinkSharedLinkFieldPermissionsField = exports.serializeWebLinkSharedLinkFieldEffectivePermissionField = exports.deserializeWebLinkSharedLinkFieldEffectivePermissionField = exports.serializeWebLinkSharedLinkFieldEffectiveAccessField = exports.deserializeWebLinkSharedLinkFieldEffectiveAccessField = void 0;
exports.serializeWorkflowMini = exports.deserializeWorkflowMini = exports.serializeWorkflowMiniTypeField = exports.deserializeWorkflowMiniTypeField = exports.serializeWorkflowFlowsField = exports.deserializeWorkflowFlowsField = exports.serializeWorkflowFlowsFieldOutcomesField = exports.deserializeWorkflowFlowsFieldOutcomesField = exports.serializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = exports.deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = exports.serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = exports.deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = exports.serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = exports.deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = exports.serializeWorkflowFlowsFieldOutcomesFieldActionTypeField = exports.deserializeWorkflowFlowsFieldOutcomesFieldActionTypeField = exports.serializeWorkflowFlowsFieldOutcomesFieldTypeField = exports.deserializeWorkflowFlowsFieldOutcomesFieldTypeField = exports.serializeWorkflowFlowsFieldTriggerField = exports.deserializeWorkflowFlowsFieldTriggerField = exports.serializeWorkflowFlowsFieldTriggerFieldScopeField = exports.deserializeWorkflowFlowsFieldTriggerFieldScopeField = exports.serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = exports.deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = exports.serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = exports.deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = exports.serializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = exports.deserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = exports.serializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = exports.deserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = exports.serializeWorkflowFlowsFieldTriggerFieldTypeField = exports.deserializeWorkflowFlowsFieldTriggerFieldTypeField = exports.serializeWorkflowFlowsFieldTypeField = exports.deserializeWorkflowFlowsFieldTypeField = exports.serializeSkillInvocationSourceField = exports.deserializeSkillInvocationSourceField = exports.serializeWebhookInvocation = exports.deserializeWebhookInvocation = exports.serializeWebhookInvocationSourceField = exports.deserializeWebhookInvocationSourceField = exports.serializeCollaborations = exports.deserializeCollaborations = exports.serializeCollaboration = exports.deserializeCollaboration = exports.serializeCollaborationItemField = exports.deserializeCollaborationItemField = exports.serializeFolderFull = exports.deserializeFolderFull = exports.serializeFileVersionLegalHolds = exports.deserializeFileVersionLegalHolds = void 0;
exports.serializeKeywordSkillCardSkillField = exports.deserializeKeywordSkillCardSkillField = exports.serializeKeywordSkillCardSkillFieldTypeField = exports.deserializeKeywordSkillCardSkillFieldTypeField = exports.serializeKeywordSkillCardSkillCardTitleField = exports.deserializeKeywordSkillCardSkillCardTitleField = exports.serializeKeywordSkillCardSkillCardTypeField = exports.deserializeKeywordSkillCardSkillCardTypeField = exports.serializeKeywordSkillCardTypeField = exports.deserializeKeywordSkillCardTypeField = exports.serializeSkillInvocation = exports.deserializeSkillInvocation = exports.serializeEvents = exports.deserializeEvents = exports.serializeEvent = exports.deserializeEvent = exports.serializeEventSourceField = exports.deserializeEventSourceField = exports.serializeEventSource = exports.deserializeEventSource = exports.serializeEventSourceClassificationField = exports.deserializeEventSourceClassificationField = exports.serializeEventSourceItemTypeField = exports.deserializeEventSourceItemTypeField = exports.serializeAccessToken = exports.deserializeAccessToken = exports.serializeFileFull = exports.deserializeFileFull = exports.serializeFileFullExpiringEmbedLinkField = exports.deserializeFileFullExpiringEmbedLinkField = exports.serializeFileScope = exports.deserializeFileScope = exports.serializeFileScopeScopeField = exports.deserializeFileScopeScopeField = exports.serializeSignRequestStatusField = exports.deserializeSignRequestStatusField = exports.serializeSignRequestTypeField = exports.deserializeSignRequestTypeField = exports.serializeZipDownloadStatus = exports.deserializeZipDownloadStatus = exports.serializeZipDownloadStatusStateField = exports.deserializeZipDownloadStatusStateField = exports.serializeZipDownload = exports.deserializeZipDownload = exports.serializeWorkflowFull = exports.deserializeWorkflowFull = exports.serializeWorkflows = exports.deserializeWorkflows = exports.serializeWorkflow = exports.deserializeWorkflow = void 0;
exports.serializeStatusSkillCardTypeField = exports.deserializeStatusSkillCardTypeField = exports.serializeTranscriptSkillCard = exports.deserializeTranscriptSkillCard = exports.serializeTranscriptSkillCardEntriesField = exports.deserializeTranscriptSkillCardEntriesField = exports.serializeTranscriptSkillCardEntriesFieldAppearsField = exports.deserializeTranscriptSkillCardEntriesFieldAppearsField = exports.serializeTranscriptSkillCardInvocationField = exports.deserializeTranscriptSkillCardInvocationField = exports.serializeTranscriptSkillCardInvocationFieldTypeField = exports.deserializeTranscriptSkillCardInvocationFieldTypeField = exports.serializeTranscriptSkillCardSkillField = exports.deserializeTranscriptSkillCardSkillField = exports.serializeTranscriptSkillCardSkillFieldTypeField = exports.deserializeTranscriptSkillCardSkillFieldTypeField = exports.serializeTranscriptSkillCardSkillCardTitleField = exports.deserializeTranscriptSkillCardSkillCardTitleField = exports.serializeTranscriptSkillCardSkillCardTypeField = exports.deserializeTranscriptSkillCardSkillCardTypeField = exports.serializeTranscriptSkillCardTypeField = exports.deserializeTranscriptSkillCardTypeField = exports.serializeTimelineSkillCard = exports.deserializeTimelineSkillCard = exports.serializeTimelineSkillCardEntriesField = exports.deserializeTimelineSkillCardEntriesField = exports.serializeTimelineSkillCardEntriesFieldAppearsField = exports.deserializeTimelineSkillCardEntriesFieldAppearsField = exports.serializeTimelineSkillCardInvocationField = exports.deserializeTimelineSkillCardInvocationField = exports.serializeTimelineSkillCardInvocationFieldTypeField = exports.deserializeTimelineSkillCardInvocationFieldTypeField = exports.serializeTimelineSkillCardSkillField = exports.deserializeTimelineSkillCardSkillField = exports.serializeTimelineSkillCardSkillFieldTypeField = exports.deserializeTimelineSkillCardSkillFieldTypeField = exports.serializeTimelineSkillCardSkillCardTitleField = exports.deserializeTimelineSkillCardSkillCardTitleField = exports.serializeTimelineSkillCardSkillCardTypeField = exports.deserializeTimelineSkillCardSkillCardTypeField = exports.serializeTimelineSkillCardTypeField = exports.deserializeTimelineSkillCardTypeField = exports.serializeKeywordSkillCard = exports.deserializeKeywordSkillCard = exports.serializeKeywordSkillCardEntriesField = exports.deserializeKeywordSkillCardEntriesField = exports.serializeKeywordSkillCardInvocationField = exports.deserializeKeywordSkillCardInvocationField = exports.serializeKeywordSkillCardInvocationFieldTypeField = exports.deserializeKeywordSkillCardInvocationFieldTypeField = void 0;
exports.serializeShieldInformationBarrierReportDetailsDetailsField = exports.deserializeShieldInformationBarrierReportDetailsDetailsField = exports.serializeSignRequests = exports.deserializeSignRequests = exports.serializeSignRequest = exports.deserializeSignRequest = exports.serializeSignRequestSigner = exports.deserializeSignRequestSigner = exports.serializeSignRequestSignerSignerDecisionField = exports.deserializeSignRequestSignerSignerDecisionField = exports.serializeSignRequestSignerSignerDecisionFieldTypeField = exports.deserializeSignRequestSignerSignerDecisionFieldTypeField = exports.serializeSignRequestSignerInput = exports.deserializeSignRequestSignerInput = exports.serializeSignRequestSignerInputContentTypeField = exports.deserializeSignRequestSignerInputContentTypeField = exports.serializeSignRequestSignerInputTypeField = exports.deserializeSignRequestSignerInputTypeField = exports.serializeSignRequestCreateRequest = exports.deserializeSignRequestCreateRequest = exports.serializeSignRequestBase = exports.deserializeSignRequestBase = exports.serializeSignRequestPrefillTag = exports.deserializeSignRequestPrefillTag = exports.serializeSignRequestCreateSigner = exports.deserializeSignRequestCreateSigner = exports.serializeSignRequestCreateSignerRoleField = exports.deserializeSignRequestCreateSignerRoleField = exports.serializeSkillCardsMetadata = exports.deserializeSkillCardsMetadata = exports.serializeSkillCardsMetadataCardsField = exports.deserializeSkillCardsMetadataCardsField = exports.serializeStatusSkillCard = exports.deserializeStatusSkillCard = exports.serializeStatusSkillCardInvocationField = exports.deserializeStatusSkillCardInvocationField = exports.serializeStatusSkillCardInvocationFieldTypeField = exports.deserializeStatusSkillCardInvocationFieldTypeField = exports.serializeStatusSkillCardSkillField = exports.deserializeStatusSkillCardSkillField = exports.serializeStatusSkillCardSkillFieldTypeField = exports.deserializeStatusSkillCardSkillFieldTypeField = exports.serializeStatusSkillCardStatusField = exports.deserializeStatusSkillCardStatusField = exports.serializeStatusSkillCardStatusFieldCodeField = exports.deserializeStatusSkillCardStatusFieldCodeField = exports.serializeStatusSkillCardSkillCardTitleField = exports.deserializeStatusSkillCardSkillCardTitleField = exports.serializeStatusSkillCardSkillCardTypeField = exports.deserializeStatusSkillCardSkillCardTypeField = void 0;
exports.serializeMetadataFieldFilterDateRange = exports.deserializeMetadataFieldFilterDateRange = exports.serializeMetadataFieldFilterFloatRange = exports.deserializeMetadataFieldFilterFloatRange = exports.serializeMetadataFieldFilterMultiSelect = exports.deserializeMetadataFieldFilterMultiSelect = exports.serializeMetadataFieldFilterFloat = exports.deserializeMetadataFieldFilterFloat = exports.serializeMetadataFieldFilterString = exports.deserializeMetadataFieldFilterString = exports.serializeMetadataFilter = exports.deserializeMetadataFilter = exports.serializeMetadataFilterFiltersField = exports.deserializeMetadataFilterFiltersField = exports.serializeMetadataFilterScopeField = exports.deserializeMetadataFilterScopeField = exports.serializeUserFull = exports.deserializeUserFull = exports.serializeTrackingCode = exports.deserializeTrackingCode = exports.serializeTrackingCodeTypeField = exports.deserializeTrackingCodeTypeField = exports.serializeShieldInformationBarrierReportDetails = exports.deserializeShieldInformationBarrierReportDetails = void 0;
const json_js_1 = require("./json.js");
function deserializePostOAuth2TokenGrantTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenGrantTypeField\"";
    }
    if (val === "authorization_code") {
        return "authorization_code";
    }
    if (val === "refresh_token") {
        return "refresh_token";
    }
    if (val === "client_credentials") {
        return "client_credentials";
    }
    if (val === "urn:ietf:params:oauth:grant-type:jwt-bearer") {
        return "urn:ietf:params:oauth:grant-type:jwt-bearer";
    }
    if (val === "urn:ietf:params:oauth:grant-type:token-exchange") {
        return "urn:ietf:params:oauth:grant-type:token-exchange";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializePostOAuth2TokenGrantTypeField = deserializePostOAuth2TokenGrantTypeField;
function serializePostOAuth2TokenGrantTypeField(val) {
    return val;
}
exports.serializePostOAuth2TokenGrantTypeField = serializePostOAuth2TokenGrantTypeField;
function deserializePostOAuth2TokenSubjectTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenSubjectTokenTypeField\"";
    }
    if (val === "urn:ietf:params:oauth:token-type:access_token") {
        return "urn:ietf:params:oauth:token-type:access_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializePostOAuth2TokenSubjectTokenTypeField = deserializePostOAuth2TokenSubjectTokenTypeField;
function serializePostOAuth2TokenSubjectTokenTypeField(val) {
    return val;
}
exports.serializePostOAuth2TokenSubjectTokenTypeField = serializePostOAuth2TokenSubjectTokenTypeField;
function deserializePostOAuth2TokenActorTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenActorTokenTypeField\"";
    }
    if (val === "urn:ietf:params:oauth:token-type:id_token") {
        return "urn:ietf:params:oauth:token-type:id_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializePostOAuth2TokenActorTokenTypeField = deserializePostOAuth2TokenActorTokenTypeField;
function serializePostOAuth2TokenActorTokenTypeField(val) {
    return val;
}
exports.serializePostOAuth2TokenActorTokenTypeField = serializePostOAuth2TokenActorTokenTypeField;
function deserializePostOAuth2TokenBoxSubjectTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenBoxSubjectTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    if (val === "user") {
        return "user";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializePostOAuth2TokenBoxSubjectTypeField = deserializePostOAuth2TokenBoxSubjectTypeField;
function serializePostOAuth2TokenBoxSubjectTypeField(val) {
    return val;
}
exports.serializePostOAuth2TokenBoxSubjectTypeField = serializePostOAuth2TokenBoxSubjectTypeField;
function deserializePostOAuth2Token(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"PostOAuth2Token\"";
    }
    if (val.grant_type === void 0) {
        throw "Expecting \"grant_type\" of type \"PostOAuth2Token\" to be defined";
    }
    const grantType = deserializePostOAuth2TokenGrantTypeField(val.grant_type);
    if (!(val.client_id === void 0) && !(0, json_js_1.isJson)(val.client_id, "string")) {
        throw "Expecting string for \"client_id\" of type \"PostOAuth2Token\"";
    }
    const clientId = (0, json_js_1.isJson)(val.client_id, "string") ? val.client_id : void 0;
    if (!(val.client_secret === void 0) && !(0, json_js_1.isJson)(val.client_secret, "string")) {
        throw "Expecting string for \"client_secret\" of type \"PostOAuth2Token\"";
    }
    const clientSecret = (0, json_js_1.isJson)(val.client_secret, "string") ? val.client_secret : void 0;
    if (!(val.code === void 0) && !(0, json_js_1.isJson)(val.code, "string")) {
        throw "Expecting string for \"code\" of type \"PostOAuth2Token\"";
    }
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    if (!(val.refresh_token === void 0) && !(0, json_js_1.isJson)(val.refresh_token, "string")) {
        throw "Expecting string for \"refresh_token\" of type \"PostOAuth2Token\"";
    }
    const refreshToken = (0, json_js_1.isJson)(val.refresh_token, "string") ? val.refresh_token : void 0;
    if (!(val.assertion === void 0) && !(0, json_js_1.isJson)(val.assertion, "string")) {
        throw "Expecting string for \"assertion\" of type \"PostOAuth2Token\"";
    }
    const assertion = (0, json_js_1.isJson)(val.assertion, "string") ? val.assertion : void 0;
    if (!(val.subject_token === void 0) && !(0, json_js_1.isJson)(val.subject_token, "string")) {
        throw "Expecting string for \"subject_token\" of type \"PostOAuth2Token\"";
    }
    const subjectToken = (0, json_js_1.isJson)(val.subject_token, "string") ? val.subject_token : void 0;
    const subjectTokenType = val.subject_token_type === void 0 ? void 0 : deserializePostOAuth2TokenSubjectTokenTypeField(val.subject_token_type);
    if (!(val.actor_token === void 0) && !(0, json_js_1.isJson)(val.actor_token, "string")) {
        throw "Expecting string for \"actor_token\" of type \"PostOAuth2Token\"";
    }
    const actorToken = (0, json_js_1.isJson)(val.actor_token, "string") ? val.actor_token : void 0;
    const actorTokenType = val.actor_token_type === void 0 ? void 0 : deserializePostOAuth2TokenActorTokenTypeField(val.actor_token_type);
    if (!(val.scope === void 0) && !(0, json_js_1.isJson)(val.scope, "string")) {
        throw "Expecting string for \"scope\" of type \"PostOAuth2Token\"";
    }
    const scope = (0, json_js_1.isJson)(val.scope, "string") ? val.scope : void 0;
    if (!(val.resource === void 0) && !(0, json_js_1.isJson)(val.resource, "string")) {
        throw "Expecting string for \"resource\" of type \"PostOAuth2Token\"";
    }
    const resource = (0, json_js_1.isJson)(val.resource, "string") ? val.resource : void 0;
    const boxSubjectType = val.box_subject_type === void 0 ? void 0 : deserializePostOAuth2TokenBoxSubjectTypeField(val.box_subject_type);
    if (!(val.box_subject_id === void 0) && !(0, json_js_1.isJson)(val.box_subject_id, "string")) {
        throw "Expecting string for \"box_subject_id\" of type \"PostOAuth2Token\"";
    }
    const boxSubjectId = (0, json_js_1.isJson)(val.box_subject_id, "string") ? val.box_subject_id : void 0;
    if (!(val.box_shared_link === void 0) && !(0, json_js_1.isJson)(val.box_shared_link, "string")) {
        throw "Expecting string for \"box_shared_link\" of type \"PostOAuth2Token\"";
    }
    const boxSharedLink = (0, json_js_1.isJson)(val.box_shared_link, "string") ? val.box_shared_link : void 0;
    return { grantType: grantType, clientId: clientId, clientSecret: clientSecret, code: code, refreshToken: refreshToken, assertion: assertion, subjectToken: subjectToken, subjectTokenType: subjectTokenType, actorToken: actorToken, actorTokenType: actorTokenType, scope: scope, resource: resource, boxSubjectType: boxSubjectType, boxSubjectId: boxSubjectId, boxSharedLink: boxSharedLink };
}
exports.deserializePostOAuth2Token = deserializePostOAuth2Token;
function serializePostOAuth2Token(val) {
    return { ["grant_type"]: serializePostOAuth2TokenGrantTypeField(val.grantType), ["client_id"]: val.clientId, ["client_secret"]: val.clientSecret, ["code"]: val.code, ["refresh_token"]: val.refreshToken, ["assertion"]: val.assertion, ["subject_token"]: val.subjectToken, ["subject_token_type"]: val.subjectTokenType === void 0 ? void 0 : serializePostOAuth2TokenSubjectTokenTypeField(val.subjectTokenType), ["actor_token"]: val.actorToken, ["actor_token_type"]: val.actorTokenType === void 0 ? void 0 : serializePostOAuth2TokenActorTokenTypeField(val.actorTokenType), ["scope"]: val.scope, ["resource"]: val.resource, ["box_subject_type"]: val.boxSubjectType === void 0 ? void 0 : serializePostOAuth2TokenBoxSubjectTypeField(val.boxSubjectType), ["box_subject_id"]: val.boxSubjectId, ["box_shared_link"]: val.boxSharedLink };
}
exports.serializePostOAuth2Token = serializePostOAuth2Token;
function deserializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"PostOAuth2TokenRefreshAccessTokenGrantTypeField\"";
    }
    if (val === "refresh_token") {
        return "refresh_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializePostOAuth2TokenRefreshAccessTokenGrantTypeField = deserializePostOAuth2TokenRefreshAccessTokenGrantTypeField;
function serializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val) {
    return val;
}
exports.serializePostOAuth2TokenRefreshAccessTokenGrantTypeField = serializePostOAuth2TokenRefreshAccessTokenGrantTypeField;
function deserializePostOAuth2TokenRefreshAccessToken(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"PostOAuth2TokenRefreshAccessToken\"";
    }
    if (val.grant_type === void 0) {
        throw "Expecting \"grant_type\" of type \"PostOAuth2TokenRefreshAccessToken\" to be defined";
    }
    const grantType = deserializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val.grant_type);
    if (val.client_id === void 0) {
        throw "Expecting \"client_id\" of type \"PostOAuth2TokenRefreshAccessToken\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.client_id, "string")) {
        throw "Expecting string for \"client_id\" of type \"PostOAuth2TokenRefreshAccessToken\"";
    }
    const clientId = val.client_id;
    if (val.client_secret === void 0) {
        throw "Expecting \"client_secret\" of type \"PostOAuth2TokenRefreshAccessToken\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.client_secret, "string")) {
        throw "Expecting string for \"client_secret\" of type \"PostOAuth2TokenRefreshAccessToken\"";
    }
    const clientSecret = val.client_secret;
    if (val.refresh_token === void 0) {
        throw "Expecting \"refresh_token\" of type \"PostOAuth2TokenRefreshAccessToken\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.refresh_token, "string")) {
        throw "Expecting string for \"refresh_token\" of type \"PostOAuth2TokenRefreshAccessToken\"";
    }
    const refreshToken = val.refresh_token;
    return { grantType: grantType, clientId: clientId, clientSecret: clientSecret, refreshToken: refreshToken };
}
exports.deserializePostOAuth2TokenRefreshAccessToken = deserializePostOAuth2TokenRefreshAccessToken;
function serializePostOAuth2TokenRefreshAccessToken(val) {
    return { ["grant_type"]: serializePostOAuth2TokenRefreshAccessTokenGrantTypeField(val.grantType), ["client_id"]: val.clientId, ["client_secret"]: val.clientSecret, ["refresh_token"]: val.refreshToken };
}
exports.serializePostOAuth2TokenRefreshAccessToken = serializePostOAuth2TokenRefreshAccessToken;
function deserializePostOAuth2Revoke(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"PostOAuth2Revoke\"";
    }
    if (!(val.client_id === void 0) && !(0, json_js_1.isJson)(val.client_id, "string")) {
        throw "Expecting string for \"client_id\" of type \"PostOAuth2Revoke\"";
    }
    const clientId = (0, json_js_1.isJson)(val.client_id, "string") ? val.client_id : void 0;
    if (!(val.client_secret === void 0) && !(0, json_js_1.isJson)(val.client_secret, "string")) {
        throw "Expecting string for \"client_secret\" of type \"PostOAuth2Revoke\"";
    }
    const clientSecret = (0, json_js_1.isJson)(val.client_secret, "string") ? val.client_secret : void 0;
    if (!(val.token === void 0) && !(0, json_js_1.isJson)(val.token, "string")) {
        throw "Expecting string for \"token\" of type \"PostOAuth2Revoke\"";
    }
    const token = (0, json_js_1.isJson)(val.token, "string") ? val.token : void 0;
    return { clientId: clientId, clientSecret: clientSecret, token: token };
}
exports.deserializePostOAuth2Revoke = deserializePostOAuth2Revoke;
function serializePostOAuth2Revoke(val) {
    return { ["client_id"]: val.clientId, ["client_secret"]: val.clientSecret, ["token"]: val.token };
}
exports.serializePostOAuth2Revoke = serializePostOAuth2Revoke;
function deserializeZipDownloadRequestItemsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ZipDownloadRequestItemsFieldTypeField\"";
    }
    if (val === "file") {
        return "file";
    }
    if (val === "folder.") {
        return "folder.";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeZipDownloadRequestItemsFieldTypeField = deserializeZipDownloadRequestItemsFieldTypeField;
function serializeZipDownloadRequestItemsFieldTypeField(val) {
    return val;
}
exports.serializeZipDownloadRequestItemsFieldTypeField = serializeZipDownloadRequestItemsFieldTypeField;
function deserializeZipDownloadRequestItemsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ZipDownloadRequestItemsField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"ZipDownloadRequestItemsField\" to be defined";
    }
    const type = deserializeZipDownloadRequestItemsFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"ZipDownloadRequestItemsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ZipDownloadRequestItemsField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeZipDownloadRequestItemsField = deserializeZipDownloadRequestItemsField;
function serializeZipDownloadRequestItemsField(val) {
    return { ["type"]: serializeZipDownloadRequestItemsFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeZipDownloadRequestItemsField = serializeZipDownloadRequestItemsField;
function deserializeZipDownloadRequest(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ZipDownloadRequest\"";
    }
    if (val.items === void 0) {
        throw "Expecting \"items\" of type \"ZipDownloadRequest\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.items, "array")) {
        throw "Expecting array for \"items\" of type \"ZipDownloadRequest\"";
    }
    const items = val.items.map(function (itm) {
        return deserializeZipDownloadRequestItemsField(itm);
    });
    if (!(val.download_file_name === void 0) && !(0, json_js_1.isJson)(val.download_file_name, "string")) {
        throw "Expecting string for \"download_file_name\" of type \"ZipDownloadRequest\"";
    }
    const downloadFileName = (0, json_js_1.isJson)(val.download_file_name, "string") ? val.download_file_name : void 0;
    return { items: items, downloadFileName: downloadFileName };
}
exports.deserializeZipDownloadRequest = deserializeZipDownloadRequest;
function serializeZipDownloadRequest(val) {
    return { ["items"]: val.items.map(function (item) {
            return serializeZipDownloadRequestItemsField(item);
        }), ["download_file_name"]: val.downloadFileName };
}
exports.serializeZipDownloadRequest = serializeZipDownloadRequest;
function deserializeMetadataQueryQueryParamsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQueryQueryParamsField\"";
    }
    return {};
}
exports.deserializeMetadataQueryQueryParamsField = deserializeMetadataQueryQueryParamsField;
function serializeMetadataQueryQueryParamsField(val) {
    return {};
}
exports.serializeMetadataQueryQueryParamsField = serializeMetadataQueryQueryParamsField;
function deserializeMetadataQueryOrderByFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataQueryOrderByFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    if (val === "asc") {
        return "asc";
    }
    if (val === "desc") {
        return "desc";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataQueryOrderByFieldDirectionField = deserializeMetadataQueryOrderByFieldDirectionField;
function serializeMetadataQueryOrderByFieldDirectionField(val) {
    return val;
}
exports.serializeMetadataQueryOrderByFieldDirectionField = serializeMetadataQueryOrderByFieldDirectionField;
function deserializeMetadataQueryOrderByField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQueryOrderByField\"";
    }
    if (!(val.field_key === void 0) && !(0, json_js_1.isJson)(val.field_key, "string")) {
        throw "Expecting string for \"field_key\" of type \"MetadataQueryOrderByField\"";
    }
    const fieldKey = (0, json_js_1.isJson)(val.field_key, "string") ? val.field_key : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeMetadataQueryOrderByFieldDirectionField(val.direction);
    return { fieldKey: fieldKey, direction: direction };
}
exports.deserializeMetadataQueryOrderByField = deserializeMetadataQueryOrderByField;
function serializeMetadataQueryOrderByField(val) {
    return { ["field_key"]: val.fieldKey, ["direction"]: val.direction === void 0 ? void 0 : serializeMetadataQueryOrderByFieldDirectionField(val.direction) };
}
exports.serializeMetadataQueryOrderByField = serializeMetadataQueryOrderByField;
function deserializeMetadataQuery(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQuery\"";
    }
    if (val.from === void 0) {
        throw "Expecting \"from\" of type \"MetadataQuery\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.from, "string")) {
        throw "Expecting string for \"from\" of type \"MetadataQuery\"";
    }
    const from = val.from;
    if (!(val.query === void 0) && !(0, json_js_1.isJson)(val.query, "string")) {
        throw "Expecting string for \"query\" of type \"MetadataQuery\"";
    }
    const query = (0, json_js_1.isJson)(val.query, "string") ? val.query : void 0;
    const queryParams = val.query_params === void 0 ? void 0 : deserializeMetadataQueryQueryParamsField(val.query_params);
    if (val.ancestor_folder_id === void 0) {
        throw "Expecting \"ancestor_folder_id\" of type \"MetadataQuery\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.ancestor_folder_id, "string")) {
        throw "Expecting string for \"ancestor_folder_id\" of type \"MetadataQuery\"";
    }
    const ancestorFolderId = val.ancestor_folder_id;
    if (!(val.order_by === void 0) && !(0, json_js_1.isJson)(val.order_by, "array")) {
        throw "Expecting array for \"order_by\" of type \"MetadataQuery\"";
    }
    const orderBy = (0, json_js_1.isJson)(val.order_by, "array") ? val.order_by.map(function (itm) {
        return deserializeMetadataQueryOrderByField(itm);
    }) : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"MetadataQuery\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.marker === void 0) && !(0, json_js_1.isJson)(val.marker, "string")) {
        throw "Expecting string for \"marker\" of type \"MetadataQuery\"";
    }
    const marker = (0, json_js_1.isJson)(val.marker, "string") ? val.marker : void 0;
    if (!(val.fields === void 0) && !(0, json_js_1.isJson)(val.fields, "array")) {
        throw "Expecting array for \"fields\" of type \"MetadataQuery\"";
    }
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return void 0;
    }) : void 0;
    return { from: from, query: query, queryParams: queryParams, ancestorFolderId: ancestorFolderId, orderBy: orderBy, limit: limit, marker: marker, fields: fields };
}
exports.deserializeMetadataQuery = deserializeMetadataQuery;
function serializeMetadataQuery(val) {
    return { ["from"]: val.from, ["query"]: val.query, ["query_params"]: val.queryParams === void 0 ? void 0 : serializeMetadataQueryQueryParamsField(val.queryParams), ["ancestor_folder_id"]: val.ancestorFolderId, ["order_by"]: val.orderBy === void 0 ? void 0 : val.orderBy.map(function (item) {
            return serializeMetadataQueryOrderByField(item);
        }), ["limit"]: val.limit, ["marker"]: val.marker, ["fields"]: val.fields === void 0 ? void 0 : val.fields.map(function (item) {
            return void 0;
        }) };
}
exports.serializeMetadataQuery = serializeMetadataQuery;
function deserializeFileRequestUpdateRequestStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestUpdateRequestStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "inactive") {
        return "inactive";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileRequestUpdateRequestStatusField = deserializeFileRequestUpdateRequestStatusField;
function serializeFileRequestUpdateRequestStatusField(val) {
    return val;
}
exports.serializeFileRequestUpdateRequestStatusField = serializeFileRequestUpdateRequestStatusField;
function deserializeFileRequestUpdateRequest(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileRequestUpdateRequest\"";
    }
    if (!(val.title === void 0) && !(0, json_js_1.isJson)(val.title, "string")) {
        throw "Expecting string for \"title\" of type \"FileRequestUpdateRequest\"";
    }
    const title = (0, json_js_1.isJson)(val.title, "string") ? val.title : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"FileRequestUpdateRequest\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status === void 0 ? void 0 : deserializeFileRequestUpdateRequestStatusField(val.status);
    if (!(val.is_email_required === void 0) && !(0, json_js_1.isJson)(val.is_email_required, "boolean")) {
        throw "Expecting boolean for \"is_email_required\" of type \"FileRequestUpdateRequest\"";
    }
    const isEmailRequired = (0, json_js_1.isJson)(val.is_email_required, "boolean") ? val.is_email_required : void 0;
    if (!(val.is_description_required === void 0) && !(0, json_js_1.isJson)(val.is_description_required, "boolean")) {
        throw "Expecting boolean for \"is_description_required\" of type \"FileRequestUpdateRequest\"";
    }
    const isDescriptionRequired = (0, json_js_1.isJson)(val.is_description_required, "boolean") ? val.is_description_required : void 0;
    if (!(val.expires_at === void 0) && !(0, json_js_1.isJson)(val.expires_at, "string")) {
        throw "Expecting string for \"expires_at\" of type \"FileRequestUpdateRequest\"";
    }
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    return { title: title, description: description, status: status, isEmailRequired: isEmailRequired, isDescriptionRequired: isDescriptionRequired, expiresAt: expiresAt };
}
exports.deserializeFileRequestUpdateRequest = deserializeFileRequestUpdateRequest;
function serializeFileRequestUpdateRequest(val) {
    return { ["title"]: val.title, ["description"]: val.description, ["status"]: val.status === void 0 ? void 0 : serializeFileRequestUpdateRequestStatusField(val.status), ["is_email_required"]: val.isEmailRequired, ["is_description_required"]: val.isDescriptionRequired, ["expires_at"]: val.expiresAt };
}
exports.serializeFileRequestUpdateRequest = serializeFileRequestUpdateRequest;
function deserializeFileRequestCopyRequestFolderFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestCopyRequestFolderFieldTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileRequestCopyRequestFolderFieldTypeField = deserializeFileRequestCopyRequestFolderFieldTypeField;
function serializeFileRequestCopyRequestFolderFieldTypeField(val) {
    return val;
}
exports.serializeFileRequestCopyRequestFolderFieldTypeField = serializeFileRequestCopyRequestFolderFieldTypeField;
function deserializeFileRequestCopyRequestFolderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileRequestCopyRequestFolderField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeFileRequestCopyRequestFolderFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileRequestCopyRequestFolderField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileRequestCopyRequestFolderField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeFileRequestCopyRequestFolderField = deserializeFileRequestCopyRequestFolderField;
function serializeFileRequestCopyRequestFolderField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeFileRequestCopyRequestFolderFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeFileRequestCopyRequestFolderField = serializeFileRequestCopyRequestFolderField;
function deserializeFileRequestCopyRequest(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileRequestCopyRequest\"";
    }
    if (val.folder === void 0) {
        throw "Expecting \"folder\" of type \"FileRequestCopyRequest\" to be defined";
    }
    const folder = deserializeFileRequestCopyRequestFolderField(val.folder);
    if (!(val.title === void 0) && !(0, json_js_1.isJson)(val.title, "string")) {
        throw "Expecting string for \"title\" of type \"FileRequestCopyRequest\"";
    }
    const title = (0, json_js_1.isJson)(val.title, "string") ? val.title : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"FileRequestCopyRequest\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status === void 0 ? void 0 : deserializeFileRequestUpdateRequestStatusField(val.status);
    if (!(val.is_email_required === void 0) && !(0, json_js_1.isJson)(val.is_email_required, "boolean")) {
        throw "Expecting boolean for \"is_email_required\" of type \"FileRequestCopyRequest\"";
    }
    const isEmailRequired = (0, json_js_1.isJson)(val.is_email_required, "boolean") ? val.is_email_required : void 0;
    if (!(val.is_description_required === void 0) && !(0, json_js_1.isJson)(val.is_description_required, "boolean")) {
        throw "Expecting boolean for \"is_description_required\" of type \"FileRequestCopyRequest\"";
    }
    const isDescriptionRequired = (0, json_js_1.isJson)(val.is_description_required, "boolean") ? val.is_description_required : void 0;
    if (!(val.expires_at === void 0) && !(0, json_js_1.isJson)(val.expires_at, "string")) {
        throw "Expecting string for \"expires_at\" of type \"FileRequestCopyRequest\"";
    }
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    return { folder: folder, title: title, description: description, status: status, isEmailRequired: isEmailRequired, isDescriptionRequired: isDescriptionRequired, expiresAt: expiresAt };
}
exports.deserializeFileRequestCopyRequest = deserializeFileRequestCopyRequest;
function serializeFileRequestCopyRequest(val) {
    const base = serializeFileRequestUpdateRequest(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileRequestCopyRequest\"";
    }
    return Object.assign(Object.assign({}, base), { ["folder"]: serializeFileRequestCopyRequestFolderField(val.folder) });
}
exports.serializeFileRequestCopyRequest = serializeFileRequestCopyRequest;
function deserializeSignRequestCreateRequestSignatureColorField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestCreateRequestSignatureColorField\"";
    }
    if (val === "blue") {
        return "blue";
    }
    if (val === "black") {
        return "black";
    }
    if (val === "red") {
        return "red";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSignRequestCreateRequestSignatureColorField = deserializeSignRequestCreateRequestSignatureColorField;
function serializeSignRequestCreateRequestSignatureColorField(val) {
    return val;
}
exports.serializeSignRequestCreateRequestSignatureColorField = serializeSignRequestCreateRequestSignatureColorField;
function deserializeClientErrorTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClientErrorTypeField\"";
    }
    if (val === "error") {
        return "error";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClientErrorTypeField = deserializeClientErrorTypeField;
function serializeClientErrorTypeField(val) {
    return val;
}
exports.serializeClientErrorTypeField = serializeClientErrorTypeField;
function deserializeClientErrorCodeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClientErrorCodeField\"";
    }
    if (val === "created") {
        return "created";
    }
    if (val === "accepted") {
        return "accepted";
    }
    if (val === "no_content") {
        return "no_content";
    }
    if (val === "redirect") {
        return "redirect";
    }
    if (val === "not_modified") {
        return "not_modified";
    }
    if (val === "bad_request") {
        return "bad_request";
    }
    if (val === "unauthorized") {
        return "unauthorized";
    }
    if (val === "forbidden") {
        return "forbidden";
    }
    if (val === "not_found") {
        return "not_found";
    }
    if (val === "method_not_allowed") {
        return "method_not_allowed";
    }
    if (val === "conflict") {
        return "conflict";
    }
    if (val === "precondition_failed") {
        return "precondition_failed";
    }
    if (val === "too_many_requests") {
        return "too_many_requests";
    }
    if (val === "internal_server_error") {
        return "internal_server_error";
    }
    if (val === "unavailable") {
        return "unavailable";
    }
    if (val === "item_name_invalid") {
        return "item_name_invalid";
    }
    if (val === "insufficient_scope") {
        return "insufficient_scope";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClientErrorCodeField = deserializeClientErrorCodeField;
function serializeClientErrorCodeField(val) {
    return val;
}
exports.serializeClientErrorCodeField = serializeClientErrorCodeField;
function deserializeClientErrorContextInfoField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ClientErrorContextInfoField\"";
    }
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"ClientErrorContextInfoField\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    return { message: message };
}
exports.deserializeClientErrorContextInfoField = deserializeClientErrorContextInfoField;
function serializeClientErrorContextInfoField(val) {
    return { ["message"]: val.message };
}
exports.serializeClientErrorContextInfoField = serializeClientErrorContextInfoField;
function deserializeClientError(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ClientError\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeClientErrorTypeField(val.type);
    if (!(val.status === void 0) && !(0, json_js_1.isJson)(val.status, "number")) {
        throw "Expecting number for \"status\" of type \"ClientError\"";
    }
    const status = (0, json_js_1.isJson)(val.status, "number") ? val.status : void 0;
    const code = val.code === void 0 ? void 0 : deserializeClientErrorCodeField(val.code);
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"ClientError\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const contextInfo = val.context_info === void 0 ? void 0 : deserializeClientErrorContextInfoField(val.context_info);
    if (!(val.help_url === void 0) && !(0, json_js_1.isJson)(val.help_url, "string")) {
        throw "Expecting string for \"help_url\" of type \"ClientError\"";
    }
    const helpUrl = (0, json_js_1.isJson)(val.help_url, "string") ? val.help_url : void 0;
    if (!(val.request_id === void 0) && !(0, json_js_1.isJson)(val.request_id, "string")) {
        throw "Expecting string for \"request_id\" of type \"ClientError\"";
    }
    const requestId = (0, json_js_1.isJson)(val.request_id, "string") ? val.request_id : void 0;
    return { type: type, status: status, code: code, message: message, contextInfo: contextInfo, helpUrl: helpUrl, requestId: requestId };
}
exports.deserializeClientError = deserializeClientError;
function serializeClientError(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeClientErrorTypeField(val.type), ["status"]: val.status, ["code"]: val.code === void 0 ? void 0 : serializeClientErrorCodeField(val.code), ["message"]: val.message, ["context_info"]: val.contextInfo === void 0 ? void 0 : serializeClientErrorContextInfoField(val.contextInfo), ["help_url"]: val.helpUrl, ["request_id"]: val.requestId };
}
exports.serializeClientError = serializeClientError;
function deserializeOAuth2Error(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"OAuth2Error\"";
    }
    if (!(val.error === void 0) && !(0, json_js_1.isJson)(val.error, "string")) {
        throw "Expecting string for \"error\" of type \"OAuth2Error\"";
    }
    const error = (0, json_js_1.isJson)(val.error, "string") ? val.error : void 0;
    if (!(val.error_description === void 0) && !(0, json_js_1.isJson)(val.error_description, "string")) {
        throw "Expecting string for \"error_description\" of type \"OAuth2Error\"";
    }
    const errorDescription = (0, json_js_1.isJson)(val.error_description, "string") ? val.error_description : void 0;
    return { error: error, errorDescription: errorDescription };
}
exports.deserializeOAuth2Error = deserializeOAuth2Error;
function serializeOAuth2Error(val) {
    return { ["error"]: val.error, ["error_description"]: val.errorDescription };
}
exports.serializeOAuth2Error = serializeOAuth2Error;
function deserializeSkillInvocationTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationTypeField\"";
    }
    if (val === "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSkillInvocationTypeField = deserializeSkillInvocationTypeField;
function serializeSkillInvocationTypeField(val) {
    return val;
}
exports.serializeSkillInvocationTypeField = serializeSkillInvocationTypeField;
function deserializeSkillInvocationSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationSkillFieldTypeField\"";
    }
    if (val === "skill") {
        return "skill";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSkillInvocationSkillFieldTypeField = deserializeSkillInvocationSkillFieldTypeField;
function serializeSkillInvocationSkillFieldTypeField(val) {
    return val;
}
exports.serializeSkillInvocationSkillFieldTypeField = serializeSkillInvocationSkillFieldTypeField;
function deserializeSkillInvocationSkillField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocationSkillField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"SkillInvocationSkillField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeSkillInvocationSkillFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"SkillInvocationSkillField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.api_key === void 0) && !(0, json_js_1.isJson)(val.api_key, "string")) {
        throw "Expecting string for \"api_key\" of type \"SkillInvocationSkillField\"";
    }
    const apiKey = (0, json_js_1.isJson)(val.api_key, "string") ? val.api_key : void 0;
    return { id: id, type: type, name: name, apiKey: apiKey };
}
exports.deserializeSkillInvocationSkillField = deserializeSkillInvocationSkillField;
function serializeSkillInvocationSkillField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeSkillInvocationSkillFieldTypeField(val.type), ["name"]: val.name, ["api_key"]: val.apiKey };
}
exports.serializeSkillInvocationSkillField = serializeSkillInvocationSkillField;
function deserializeSkillInvocationTokenFieldReadFieldTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationTokenFieldReadFieldTokenTypeField\"";
    }
    if (val === "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSkillInvocationTokenFieldReadFieldTokenTypeField = deserializeSkillInvocationTokenFieldReadFieldTokenTypeField;
function serializeSkillInvocationTokenFieldReadFieldTokenTypeField(val) {
    return val;
}
exports.serializeSkillInvocationTokenFieldReadFieldTokenTypeField = serializeSkillInvocationTokenFieldReadFieldTokenTypeField;
function deserializeSkillInvocationTokenFieldReadField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocationTokenFieldReadField\"";
    }
    if (!(val.access_token === void 0) && !(0, json_js_1.isJson)(val.access_token, "string")) {
        throw "Expecting string for \"access_token\" of type \"SkillInvocationTokenFieldReadField\"";
    }
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    if (!(val.expires_in === void 0) && !(0, json_js_1.isJson)(val.expires_in, "number")) {
        throw "Expecting number for \"expires_in\" of type \"SkillInvocationTokenFieldReadField\"";
    }
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type === void 0 ? void 0 : deserializeSkillInvocationTokenFieldReadFieldTokenTypeField(val.token_type);
    if (!(val.restricted_to === void 0) && !(0, json_js_1.isJson)(val.restricted_to, "string")) {
        throw "Expecting string for \"restricted_to\" of type \"SkillInvocationTokenFieldReadField\"";
    }
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "string") ? val.restricted_to : void 0;
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo };
}
exports.deserializeSkillInvocationTokenFieldReadField = deserializeSkillInvocationTokenFieldReadField;
function serializeSkillInvocationTokenFieldReadField(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType === void 0 ? void 0 : serializeSkillInvocationTokenFieldReadFieldTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo };
}
exports.serializeSkillInvocationTokenFieldReadField = serializeSkillInvocationTokenFieldReadField;
function deserializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationTokenFieldWriteFieldTokenTypeField\"";
    }
    if (val === "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSkillInvocationTokenFieldWriteFieldTokenTypeField = deserializeSkillInvocationTokenFieldWriteFieldTokenTypeField;
function serializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val) {
    return val;
}
exports.serializeSkillInvocationTokenFieldWriteFieldTokenTypeField = serializeSkillInvocationTokenFieldWriteFieldTokenTypeField;
function deserializeSkillInvocationTokenFieldWriteField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocationTokenFieldWriteField\"";
    }
    if (!(val.access_token === void 0) && !(0, json_js_1.isJson)(val.access_token, "string")) {
        throw "Expecting string for \"access_token\" of type \"SkillInvocationTokenFieldWriteField\"";
    }
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    if (!(val.expires_in === void 0) && !(0, json_js_1.isJson)(val.expires_in, "number")) {
        throw "Expecting number for \"expires_in\" of type \"SkillInvocationTokenFieldWriteField\"";
    }
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type === void 0 ? void 0 : deserializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val.token_type);
    if (!(val.restricted_to === void 0) && !(0, json_js_1.isJson)(val.restricted_to, "string")) {
        throw "Expecting string for \"restricted_to\" of type \"SkillInvocationTokenFieldWriteField\"";
    }
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "string") ? val.restricted_to : void 0;
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo };
}
exports.deserializeSkillInvocationTokenFieldWriteField = deserializeSkillInvocationTokenFieldWriteField;
function serializeSkillInvocationTokenFieldWriteField(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType === void 0 ? void 0 : serializeSkillInvocationTokenFieldWriteFieldTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo };
}
exports.serializeSkillInvocationTokenFieldWriteField = serializeSkillInvocationTokenFieldWriteField;
function deserializeSkillInvocationTokenField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocationTokenField\"";
    }
    const read = val.read === void 0 ? void 0 : deserializeSkillInvocationTokenFieldReadField(val.read);
    const write = val.write === void 0 ? void 0 : deserializeSkillInvocationTokenFieldWriteField(val.write);
    return { read: read, write: write };
}
exports.deserializeSkillInvocationTokenField = deserializeSkillInvocationTokenField;
function serializeSkillInvocationTokenField(val) {
    return { ["read"]: val.read === void 0 ? void 0 : serializeSkillInvocationTokenFieldReadField(val.read), ["write"]: val.write === void 0 ? void 0 : serializeSkillInvocationTokenFieldWriteField(val.write) };
}
exports.serializeSkillInvocationTokenField = serializeSkillInvocationTokenField;
function deserializeSkillInvocationStatusFieldStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationStatusFieldStateField\"";
    }
    if (val === "invoked") {
        return "invoked";
    }
    if (val === "processing") {
        return "processing";
    }
    if (val === "success") {
        return "success";
    }
    if (val === "transient_failure") {
        return "transient_failure";
    }
    if (val === "permanent_failure") {
        return "permanent_failure";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSkillInvocationStatusFieldStateField = deserializeSkillInvocationStatusFieldStateField;
function serializeSkillInvocationStatusFieldStateField(val) {
    return val;
}
exports.serializeSkillInvocationStatusFieldStateField = serializeSkillInvocationStatusFieldStateField;
function deserializeSkillInvocationStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocationStatusField\"";
    }
    const state = val.state === void 0 ? void 0 : deserializeSkillInvocationStatusFieldStateField(val.state);
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"SkillInvocationStatusField\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    if (!(val.error_code === void 0) && !(0, json_js_1.isJson)(val.error_code, "string")) {
        throw "Expecting string for \"error_code\" of type \"SkillInvocationStatusField\"";
    }
    const errorCode = (0, json_js_1.isJson)(val.error_code, "string") ? val.error_code : void 0;
    if (!(val.additional_info === void 0) && !(0, json_js_1.isJson)(val.additional_info, "string")) {
        throw "Expecting string for \"additional_info\" of type \"SkillInvocationStatusField\"";
    }
    const additionalInfo = (0, json_js_1.isJson)(val.additional_info, "string") ? val.additional_info : void 0;
    return { state: state, message: message, errorCode: errorCode, additionalInfo: additionalInfo };
}
exports.deserializeSkillInvocationStatusField = deserializeSkillInvocationStatusField;
function serializeSkillInvocationStatusField(val) {
    return { ["state"]: val.state === void 0 ? void 0 : serializeSkillInvocationStatusFieldStateField(val.state), ["message"]: val.message, ["error_code"]: val.errorCode, ["additional_info"]: val.additionalInfo };
}
exports.serializeSkillInvocationStatusField = serializeSkillInvocationStatusField;
function deserializeSkillInvocationEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SkillInvocationEnterpriseFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSkillInvocationEnterpriseFieldTypeField = deserializeSkillInvocationEnterpriseFieldTypeField;
function serializeSkillInvocationEnterpriseFieldTypeField(val) {
    return val;
}
exports.serializeSkillInvocationEnterpriseFieldTypeField = serializeSkillInvocationEnterpriseFieldTypeField;
function deserializeSkillInvocationEnterpriseField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocationEnterpriseField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"SkillInvocationEnterpriseField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeSkillInvocationEnterpriseFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"SkillInvocationEnterpriseField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.deserializeSkillInvocationEnterpriseField = deserializeSkillInvocationEnterpriseField;
function serializeSkillInvocationEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeSkillInvocationEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.serializeSkillInvocationEnterpriseField = serializeSkillInvocationEnterpriseField;
function deserializeWebhookInvocationTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookInvocationTypeField\"";
    }
    if (val === "webhook_event") {
        return "webhook_event";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebhookInvocationTypeField = deserializeWebhookInvocationTypeField;
function serializeWebhookInvocationTypeField(val) {
    return val;
}
exports.serializeWebhookInvocationTypeField = serializeWebhookInvocationTypeField;
function deserializeWebhookInvocationTriggerField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookInvocationTriggerField\"";
    }
    if (val === "FILE.UPLOADED") {
        return "FILE.UPLOADED";
    }
    if (val === "FILE.PREVIEWED") {
        return "FILE.PREVIEWED";
    }
    if (val === "FILE.DOWNLOADED") {
        return "FILE.DOWNLOADED";
    }
    if (val === "FILE.TRASHED") {
        return "FILE.TRASHED";
    }
    if (val === "FILE.DELETED") {
        return "FILE.DELETED";
    }
    if (val === "FILE.RESTORED") {
        return "FILE.RESTORED";
    }
    if (val === "FILE.COPIED") {
        return "FILE.COPIED";
    }
    if (val === "FILE.MOVED") {
        return "FILE.MOVED";
    }
    if (val === "FILE.LOCKED") {
        return "FILE.LOCKED";
    }
    if (val === "FILE.UNLOCKED") {
        return "FILE.UNLOCKED";
    }
    if (val === "FILE.RENAMED") {
        return "FILE.RENAMED";
    }
    if (val === "COMMENT.CREATED") {
        return "COMMENT.CREATED";
    }
    if (val === "COMMENT.UPDATED") {
        return "COMMENT.UPDATED";
    }
    if (val === "COMMENT.DELETED") {
        return "COMMENT.DELETED";
    }
    if (val === "TASK_ASSIGNMENT.CREATED") {
        return "TASK_ASSIGNMENT.CREATED";
    }
    if (val === "TASK_ASSIGNMENT.UPDATED") {
        return "TASK_ASSIGNMENT.UPDATED";
    }
    if (val === "METADATA_INSTANCE.CREATED") {
        return "METADATA_INSTANCE.CREATED";
    }
    if (val === "METADATA_INSTANCE.UPDATED") {
        return "METADATA_INSTANCE.UPDATED";
    }
    if (val === "METADATA_INSTANCE.DELETED") {
        return "METADATA_INSTANCE.DELETED";
    }
    if (val === "FOLDER.CREATED") {
        return "FOLDER.CREATED";
    }
    if (val === "FOLDER.RENAMED") {
        return "FOLDER.RENAMED";
    }
    if (val === "FOLDER.DOWNLOADED") {
        return "FOLDER.DOWNLOADED";
    }
    if (val === "FOLDER.RESTORED") {
        return "FOLDER.RESTORED";
    }
    if (val === "FOLDER.DELETED") {
        return "FOLDER.DELETED";
    }
    if (val === "FOLDER.COPIED") {
        return "FOLDER.COPIED";
    }
    if (val === "FOLDER.MOVED") {
        return "FOLDER.MOVED";
    }
    if (val === "FOLDER.TRASHED") {
        return "FOLDER.TRASHED";
    }
    if (val === "WEBHOOK.DELETED") {
        return "WEBHOOK.DELETED";
    }
    if (val === "COLLABORATION.CREATED") {
        return "COLLABORATION.CREATED";
    }
    if (val === "COLLABORATION.ACCEPTED") {
        return "COLLABORATION.ACCEPTED";
    }
    if (val === "COLLABORATION.REJECTED") {
        return "COLLABORATION.REJECTED";
    }
    if (val === "COLLABORATION.REMOVED") {
        return "COLLABORATION.REMOVED";
    }
    if (val === "COLLABORATION.UPDATED") {
        return "COLLABORATION.UPDATED";
    }
    if (val === "SHARED_LINK.DELETED") {
        return "SHARED_LINK.DELETED";
    }
    if (val === "SHARED_LINK.CREATED") {
        return "SHARED_LINK.CREATED";
    }
    if (val === "SHARED_LINK.UPDATED") {
        return "SHARED_LINK.UPDATED";
    }
    if (val === "SIGN_REQUEST.COMPLETED") {
        return "SIGN_REQUEST.COMPLETED";
    }
    if (val === "SIGN_REQUEST.DECLINED") {
        return "SIGN_REQUEST.DECLINED";
    }
    if (val === "SIGN_REQUEST.EXPIRED") {
        return "SIGN_REQUEST.EXPIRED";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebhookInvocationTriggerField = deserializeWebhookInvocationTriggerField;
function serializeWebhookInvocationTriggerField(val) {
    return val;
}
exports.serializeWebhookInvocationTriggerField = serializeWebhookInvocationTriggerField;
function deserializeAccessTokenTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"AccessTokenTokenTypeField\"";
    }
    if (val === "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeAccessTokenTokenTypeField = deserializeAccessTokenTokenTypeField;
function serializeAccessTokenTokenTypeField(val) {
    return val;
}
exports.serializeAccessTokenTokenTypeField = serializeAccessTokenTokenTypeField;
function deserializeAccessTokenIssuedTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"AccessTokenIssuedTokenTypeField\"";
    }
    if (val === "urn:ietf:params:oauth:token-type:access_token") {
        return "urn:ietf:params:oauth:token-type:access_token";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeAccessTokenIssuedTokenTypeField = deserializeAccessTokenIssuedTokenTypeField;
function serializeAccessTokenIssuedTokenTypeField(val) {
    return val;
}
exports.serializeAccessTokenIssuedTokenTypeField = serializeAccessTokenIssuedTokenTypeField;
function deserializeClassificationTemplateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateField\"";
    }
    if (val === "securityClassification-6VMVochwUWo") {
        return "securityClassification-6VMVochwUWo";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClassificationTemplateField = deserializeClassificationTemplateField;
function serializeClassificationTemplateField(val) {
    return val;
}
exports.serializeClassificationTemplateField = serializeClassificationTemplateField;
function deserializeClassification(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Classification\"";
    }
    if (!(val.Box__Security__Classification__Key === void 0) && !(0, json_js_1.isJson)(val.Box__Security__Classification__Key, "string")) {
        throw "Expecting string for \"Box__Security__Classification__Key\" of type \"Classification\"";
    }
    const boxSecurityClassificationKey = (0, json_js_1.isJson)(val.Box__Security__Classification__Key, "string") ? val.Box__Security__Classification__Key : void 0;
    if (!(val.$parent === void 0) && !(0, json_js_1.isJson)(val.$parent, "string")) {
        throw "Expecting string for \"$parent\" of type \"Classification\"";
    }
    const parent = (0, json_js_1.isJson)(val.$parent, "string") ? val.$parent : void 0;
    const template = val.$template === void 0 ? void 0 : deserializeClassificationTemplateField(val.$template);
    if (!(val.$scope === void 0) && !(0, json_js_1.isJson)(val.$scope, "string")) {
        throw "Expecting string for \"$scope\" of type \"Classification\"";
    }
    const scope = (0, json_js_1.isJson)(val.$scope, "string") ? val.$scope : void 0;
    if (!(val.$version === void 0) && !(0, json_js_1.isJson)(val.$version, "number")) {
        throw "Expecting number for \"$version\" of type \"Classification\"";
    }
    const version = (0, json_js_1.isJson)(val.$version, "number") ? val.$version : void 0;
    if (!(val.$type === void 0) && !(0, json_js_1.isJson)(val.$type, "string")) {
        throw "Expecting string for \"$type\" of type \"Classification\"";
    }
    const type = (0, json_js_1.isJson)(val.$type, "string") ? val.$type : void 0;
    if (!(val.$typeVersion === void 0) && !(0, json_js_1.isJson)(val.$typeVersion, "number")) {
        throw "Expecting number for \"$typeVersion\" of type \"Classification\"";
    }
    const typeVersion = (0, json_js_1.isJson)(val.$typeVersion, "number") ? val.$typeVersion : void 0;
    if (!(val.$canEdit === void 0) && !(0, json_js_1.isJson)(val.$canEdit, "boolean")) {
        throw "Expecting boolean for \"$canEdit\" of type \"Classification\"";
    }
    const canEdit = (0, json_js_1.isJson)(val.$canEdit, "boolean") ? val.$canEdit : void 0;
    return { boxSecurityClassificationKey: boxSecurityClassificationKey, parent: parent, template: template, scope: scope, version: version, type: type, typeVersion: typeVersion, canEdit: canEdit };
}
exports.deserializeClassification = deserializeClassification;
function serializeClassification(val) {
    return { ["Box__Security__Classification__Key"]: val.boxSecurityClassificationKey, ["$parent"]: val.parent, ["$template"]: val.template === void 0 ? void 0 : serializeClassificationTemplateField(val.template), ["$scope"]: val.scope, ["$version"]: val.version, ["$type"]: val.type, ["$typeVersion"]: val.typeVersion, ["$canEdit"]: val.canEdit };
}
exports.serializeClassification = serializeClassification;
function deserializeClassificationTemplateTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateTypeField\"";
    }
    if (val === "metadata_template") {
        return "metadata_template";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClassificationTemplateTypeField = deserializeClassificationTemplateTypeField;
function serializeClassificationTemplateTypeField(val) {
    return val;
}
exports.serializeClassificationTemplateTypeField = serializeClassificationTemplateTypeField;
function deserializeClassificationTemplateTemplateKeyField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateTemplateKeyField\"";
    }
    if (val === "securityClassification-6VMVochwUWo") {
        return "securityClassification-6VMVochwUWo";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClassificationTemplateTemplateKeyField = deserializeClassificationTemplateTemplateKeyField;
function serializeClassificationTemplateTemplateKeyField(val) {
    return val;
}
exports.serializeClassificationTemplateTemplateKeyField = serializeClassificationTemplateTemplateKeyField;
function deserializeClassificationTemplateDisplayNameField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateDisplayNameField\"";
    }
    if (val === "Classification") {
        return "Classification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClassificationTemplateDisplayNameField = deserializeClassificationTemplateDisplayNameField;
function serializeClassificationTemplateDisplayNameField(val) {
    return val;
}
exports.serializeClassificationTemplateDisplayNameField = serializeClassificationTemplateDisplayNameField;
function deserializeClassificationTemplateFieldsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateFieldsFieldTypeField\"";
    }
    if (val === "enum") {
        return "enum";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClassificationTemplateFieldsFieldTypeField = deserializeClassificationTemplateFieldsFieldTypeField;
function serializeClassificationTemplateFieldsFieldTypeField(val) {
    return val;
}
exports.serializeClassificationTemplateFieldsFieldTypeField = serializeClassificationTemplateFieldsFieldTypeField;
function deserializeClassificationTemplateFieldsFieldKeyField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateFieldsFieldKeyField\"";
    }
    if (val === "Box__Security__Classification__Key") {
        return "Box__Security__Classification__Key";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClassificationTemplateFieldsFieldKeyField = deserializeClassificationTemplateFieldsFieldKeyField;
function serializeClassificationTemplateFieldsFieldKeyField(val) {
    return val;
}
exports.serializeClassificationTemplateFieldsFieldKeyField = serializeClassificationTemplateFieldsFieldKeyField;
function deserializeClassificationTemplateFieldsFieldDisplayNameField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ClassificationTemplateFieldsFieldDisplayNameField\"";
    }
    if (val === "Classification") {
        return "Classification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeClassificationTemplateFieldsFieldDisplayNameField = deserializeClassificationTemplateFieldsFieldDisplayNameField;
function serializeClassificationTemplateFieldsFieldDisplayNameField(val) {
    return val;
}
exports.serializeClassificationTemplateFieldsFieldDisplayNameField = serializeClassificationTemplateFieldsFieldDisplayNameField;
function deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField\"";
    }
    if (!(val.classificationDefinition === void 0) && !(0, json_js_1.isJson)(val.classificationDefinition, "string")) {
        throw "Expecting string for \"classificationDefinition\" of type \"ClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField\"";
    }
    const classificationDefinition = (0, json_js_1.isJson)(val.classificationDefinition, "string") ? val.classificationDefinition : void 0;
    if (!(val.colorID === void 0) && !(0, json_js_1.isJson)(val.colorID, "number")) {
        throw "Expecting number for \"colorID\" of type \"ClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField\"";
    }
    const colorId = (0, json_js_1.isJson)(val.colorID, "number") ? val.colorID : void 0;
    return { classificationDefinition: classificationDefinition, colorId: colorId };
}
exports.deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField;
function serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val) {
    return { ["classificationDefinition"]: val.classificationDefinition, ["colorID"]: val.colorId };
}
exports.serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField = serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField;
function deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ClassificationTemplateFieldsFieldOptionsFieldStaticConfigField\"";
    }
    const classification = val.classification === void 0 ? void 0 : deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val.classification);
    return { classification: classification };
}
exports.deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField;
function serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val) {
    return { ["classification"]: val.classification === void 0 ? void 0 : serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigFieldClassificationField(val.classification) };
}
exports.serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField = serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField;
function deserializeClassificationTemplateFieldsFieldOptionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ClassificationTemplateFieldsFieldOptionsField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ClassificationTemplateFieldsFieldOptionsField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.key === void 0) && !(0, json_js_1.isJson)(val.key, "string")) {
        throw "Expecting string for \"key\" of type \"ClassificationTemplateFieldsFieldOptionsField\"";
    }
    const key = (0, json_js_1.isJson)(val.key, "string") ? val.key : void 0;
    const staticConfig = val.staticConfig === void 0 ? void 0 : deserializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val.staticConfig);
    return { id: id, key: key, staticConfig: staticConfig };
}
exports.deserializeClassificationTemplateFieldsFieldOptionsField = deserializeClassificationTemplateFieldsFieldOptionsField;
function serializeClassificationTemplateFieldsFieldOptionsField(val) {
    return { ["id"]: val.id, ["key"]: val.key, ["staticConfig"]: val.staticConfig === void 0 ? void 0 : serializeClassificationTemplateFieldsFieldOptionsFieldStaticConfigField(val.staticConfig) };
}
exports.serializeClassificationTemplateFieldsFieldOptionsField = serializeClassificationTemplateFieldsFieldOptionsField;
function deserializeClassificationTemplateFieldsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ClassificationTemplateFieldsField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ClassificationTemplateFieldsField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeClassificationTemplateFieldsFieldTypeField(val.type);
    const key = val.key === void 0 ? void 0 : deserializeClassificationTemplateFieldsFieldKeyField(val.key);
    const displayName = val.displayName === void 0 ? void 0 : deserializeClassificationTemplateFieldsFieldDisplayNameField(val.displayName);
    if (!(val.hidden === void 0) && !(0, json_js_1.isJson)(val.hidden, "boolean")) {
        throw "Expecting boolean for \"hidden\" of type \"ClassificationTemplateFieldsField\"";
    }
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    if (!(val.options === void 0) && !(0, json_js_1.isJson)(val.options, "array")) {
        throw "Expecting array for \"options\" of type \"ClassificationTemplateFieldsField\"";
    }
    const options = (0, json_js_1.isJson)(val.options, "array") ? val.options.map(function (itm) {
        return deserializeClassificationTemplateFieldsFieldOptionsField(itm);
    }) : void 0;
    return { id: id, type: type, key: key, displayName: displayName, hidden: hidden, options: options };
}
exports.deserializeClassificationTemplateFieldsField = deserializeClassificationTemplateFieldsField;
function serializeClassificationTemplateFieldsField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeClassificationTemplateFieldsFieldTypeField(val.type), ["key"]: val.key === void 0 ? void 0 : serializeClassificationTemplateFieldsFieldKeyField(val.key), ["displayName"]: val.displayName === void 0 ? void 0 : serializeClassificationTemplateFieldsFieldDisplayNameField(val.displayName), ["hidden"]: val.hidden, ["options"]: val.options === void 0 ? void 0 : val.options.map(function (item) {
            return serializeClassificationTemplateFieldsFieldOptionsField(item);
        }) };
}
exports.serializeClassificationTemplateFieldsField = serializeClassificationTemplateFieldsField;
function deserializeClassificationTemplate(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ClassificationTemplate\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ClassificationTemplate\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"ClassificationTemplate\" to be defined";
    }
    const type = deserializeClassificationTemplateTypeField(val.type);
    if (!(val.scope === void 0) && !(0, json_js_1.isJson)(val.scope, "string")) {
        throw "Expecting string for \"scope\" of type \"ClassificationTemplate\"";
    }
    const scope = (0, json_js_1.isJson)(val.scope, "string") ? val.scope : void 0;
    const templateKey = val.templateKey === void 0 ? void 0 : deserializeClassificationTemplateTemplateKeyField(val.templateKey);
    const displayName = val.displayName === void 0 ? void 0 : deserializeClassificationTemplateDisplayNameField(val.displayName);
    if (!(val.hidden === void 0) && !(0, json_js_1.isJson)(val.hidden, "boolean")) {
        throw "Expecting boolean for \"hidden\" of type \"ClassificationTemplate\"";
    }
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    if (!(val.copyInstanceOnItemCopy === void 0) && !(0, json_js_1.isJson)(val.copyInstanceOnItemCopy, "boolean")) {
        throw "Expecting boolean for \"copyInstanceOnItemCopy\" of type \"ClassificationTemplate\"";
    }
    const copyInstanceOnItemCopy = (0, json_js_1.isJson)(val.copyInstanceOnItemCopy, "boolean") ? val.copyInstanceOnItemCopy : void 0;
    if (!(val.fields === void 0) && !(0, json_js_1.isJson)(val.fields, "array")) {
        throw "Expecting array for \"fields\" of type \"ClassificationTemplate\"";
    }
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return deserializeClassificationTemplateFieldsField(itm);
    }) : void 0;
    return { id: id, type: type, scope: scope, templateKey: templateKey, displayName: displayName, hidden: hidden, copyInstanceOnItemCopy: copyInstanceOnItemCopy, fields: fields };
}
exports.deserializeClassificationTemplate = deserializeClassificationTemplate;
function serializeClassificationTemplate(val) {
    return { ["id"]: val.id, ["type"]: serializeClassificationTemplateTypeField(val.type), ["scope"]: val.scope, ["templateKey"]: val.templateKey === void 0 ? void 0 : serializeClassificationTemplateTemplateKeyField(val.templateKey), ["displayName"]: val.displayName === void 0 ? void 0 : serializeClassificationTemplateDisplayNameField(val.displayName), ["hidden"]: val.hidden, ["copyInstanceOnItemCopy"]: val.copyInstanceOnItemCopy, ["fields"]: val.fields === void 0 ? void 0 : val.fields.map(function (item) {
            return serializeClassificationTemplateFieldsField(item);
        }) };
}
exports.serializeClassificationTemplate = serializeClassificationTemplate;
function deserializeCollaborationTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationTypeField\"";
    }
    if (val === "collaboration") {
        return "collaboration";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationTypeField = deserializeCollaborationTypeField;
function serializeCollaborationTypeField(val) {
    return val;
}
exports.serializeCollaborationTypeField = serializeCollaborationTypeField;
function deserializeCollaborationRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationRoleField\"";
    }
    if (val === "editor") {
        return "editor";
    }
    if (val === "viewer") {
        return "viewer";
    }
    if (val === "previewer") {
        return "previewer";
    }
    if (val === "uploader") {
        return "uploader";
    }
    if (val === "previewer uploader") {
        return "previewer uploader";
    }
    if (val === "viewer uploader") {
        return "viewer uploader";
    }
    if (val === "co-owner") {
        return "co-owner";
    }
    if (val === "owner") {
        return "owner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationRoleField = deserializeCollaborationRoleField;
function serializeCollaborationRoleField(val) {
    return val;
}
exports.serializeCollaborationRoleField = serializeCollaborationRoleField;
function deserializeCollaborationStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationStatusField\"";
    }
    if (val === "accepted") {
        return "accepted";
    }
    if (val === "pending") {
        return "pending";
    }
    if (val === "rejected") {
        return "rejected";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationStatusField = deserializeCollaborationStatusField;
function serializeCollaborationStatusField(val) {
    return val;
}
exports.serializeCollaborationStatusField = serializeCollaborationStatusField;
function deserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField\"";
    }
    if (!(val.enterprise_has_strong_password_required_for_external_users === void 0) && !(0, json_js_1.isJson)(val.enterprise_has_strong_password_required_for_external_users, "boolean")) {
        throw "Expecting boolean for \"enterprise_has_strong_password_required_for_external_users\" of type \"CollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField\"";
    }
    const enterpriseHasStrongPasswordRequiredForExternalUsers = (0, json_js_1.isJson)(val.enterprise_has_strong_password_required_for_external_users, "boolean") ? val.enterprise_has_strong_password_required_for_external_users : void 0;
    if (!(val.user_has_strong_password === void 0) && !(0, json_js_1.isJson)(val.user_has_strong_password, "boolean")) {
        throw "Expecting boolean for \"user_has_strong_password\" of type \"CollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField\"";
    }
    const userHasStrongPassword = (0, json_js_1.isJson)(val.user_has_strong_password, "boolean") ? val.user_has_strong_password : void 0;
    return { enterpriseHasStrongPasswordRequiredForExternalUsers: enterpriseHasStrongPasswordRequiredForExternalUsers, userHasStrongPassword: userHasStrongPassword };
}
exports.deserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = deserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField;
function serializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val) {
    return { ["enterprise_has_strong_password_required_for_external_users"]: val.enterpriseHasStrongPasswordRequiredForExternalUsers, ["user_has_strong_password"]: val.userHasStrongPassword };
}
exports.serializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField = serializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField;
function deserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField\"";
    }
    if (!(val.enterprise_has_two_factor_auth_enabled === void 0) && !(0, json_js_1.isJson)(val.enterprise_has_two_factor_auth_enabled, "boolean")) {
        throw "Expecting boolean for \"enterprise_has_two_factor_auth_enabled\" of type \"CollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField\"";
    }
    const enterpriseHasTwoFactorAuthEnabled = (0, json_js_1.isJson)(val.enterprise_has_two_factor_auth_enabled, "boolean") ? val.enterprise_has_two_factor_auth_enabled : void 0;
    if (!(val.user_has_two_factor_authentication_enabled === void 0) && !(0, json_js_1.isJson)(val.user_has_two_factor_authentication_enabled, "boolean")) {
        throw "Expecting boolean for \"user_has_two_factor_authentication_enabled\" of type \"CollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField\"";
    }
    const userHasTwoFactorAuthenticationEnabled = (0, json_js_1.isJson)(val.user_has_two_factor_authentication_enabled, "boolean") ? val.user_has_two_factor_authentication_enabled : void 0;
    return { enterpriseHasTwoFactorAuthEnabled: enterpriseHasTwoFactorAuthEnabled, userHasTwoFactorAuthenticationEnabled: userHasTwoFactorAuthenticationEnabled };
}
exports.deserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = deserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField;
function serializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val) {
    return { ["enterprise_has_two_factor_auth_enabled"]: val.enterpriseHasTwoFactorAuthEnabled, ["user_has_two_factor_authentication_enabled"]: val.userHasTwoFactorAuthenticationEnabled };
}
exports.serializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField = serializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField;
function deserializeCollaborationsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationsOrderFieldDirectionField = deserializeCollaborationsOrderFieldDirectionField;
function serializeCollaborationsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeCollaborationsOrderFieldDirectionField = serializeCollaborationsOrderFieldDirectionField;
function deserializeCollaborationsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"CollaborationsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeCollaborationsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeCollaborationsOrderField = deserializeCollaborationsOrderField;
function serializeCollaborationsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeCollaborationsOrderFieldDirectionField(val.direction) };
}
exports.serializeCollaborationsOrderField = serializeCollaborationsOrderField;
function deserializeCollaborationAllowlistEntryTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistEntryTypeField\"";
    }
    if (val === "collaboration_whitelist_entry") {
        return "collaboration_whitelist_entry";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationAllowlistEntryTypeField = deserializeCollaborationAllowlistEntryTypeField;
function serializeCollaborationAllowlistEntryTypeField(val) {
    return val;
}
exports.serializeCollaborationAllowlistEntryTypeField = serializeCollaborationAllowlistEntryTypeField;
function deserializeCollaborationAllowlistEntryDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistEntryDirectionField\"";
    }
    if (val === "inbound") {
        return "inbound";
    }
    if (val === "outbound") {
        return "outbound";
    }
    if (val === "both") {
        return "both";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationAllowlistEntryDirectionField = deserializeCollaborationAllowlistEntryDirectionField;
function serializeCollaborationAllowlistEntryDirectionField(val) {
    return val;
}
exports.serializeCollaborationAllowlistEntryDirectionField = serializeCollaborationAllowlistEntryDirectionField;
function deserializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistEntryEnterpriseFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationAllowlistEntryEnterpriseFieldTypeField = deserializeCollaborationAllowlistEntryEnterpriseFieldTypeField;
function serializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val) {
    return val;
}
exports.serializeCollaborationAllowlistEntryEnterpriseFieldTypeField = serializeCollaborationAllowlistEntryEnterpriseFieldTypeField;
function deserializeCollaborationAllowlistEntryEnterpriseField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAllowlistEntryEnterpriseField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CollaborationAllowlistEntryEnterpriseField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"CollaborationAllowlistEntryEnterpriseField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.deserializeCollaborationAllowlistEntryEnterpriseField = deserializeCollaborationAllowlistEntryEnterpriseField;
function serializeCollaborationAllowlistEntryEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCollaborationAllowlistEntryEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.serializeCollaborationAllowlistEntryEnterpriseField = serializeCollaborationAllowlistEntryEnterpriseField;
function deserializeCollaborationAllowlistEntry(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAllowlistEntry\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CollaborationAllowlistEntry\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCollaborationAllowlistEntryTypeField(val.type);
    if (!(val.domain === void 0) && !(0, json_js_1.isJson)(val.domain, "string")) {
        throw "Expecting string for \"domain\" of type \"CollaborationAllowlistEntry\"";
    }
    const domain = (0, json_js_1.isJson)(val.domain, "string") ? val.domain : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeCollaborationAllowlistEntryDirectionField(val.direction);
    const enterprise = val.enterprise === void 0 ? void 0 : deserializeCollaborationAllowlistEntryEnterpriseField(val.enterprise);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"CollaborationAllowlistEntry\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    return { id: id, type: type, domain: domain, direction: direction, enterprise: enterprise, createdAt: createdAt };
}
exports.deserializeCollaborationAllowlistEntry = deserializeCollaborationAllowlistEntry;
function serializeCollaborationAllowlistEntry(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCollaborationAllowlistEntryTypeField(val.type), ["domain"]: val.domain, ["direction"]: val.direction === void 0 ? void 0 : serializeCollaborationAllowlistEntryDirectionField(val.direction), ["enterprise"]: val.enterprise === void 0 ? void 0 : serializeCollaborationAllowlistEntryEnterpriseField(val.enterprise), ["created_at"]: val.createdAt };
}
exports.serializeCollaborationAllowlistEntry = serializeCollaborationAllowlistEntry;
function deserializeCollaborationAllowlistEntries(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAllowlistEntries\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"CollaborationAllowlistEntries\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"CollaborationAllowlistEntries\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"CollaborationAllowlistEntries\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"CollaborationAllowlistEntries\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeCollaborationAllowlistEntry(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeCollaborationAllowlistEntries = deserializeCollaborationAllowlistEntries;
function serializeCollaborationAllowlistEntries(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeCollaborationAllowlistEntry(item);
        }) };
}
exports.serializeCollaborationAllowlistEntries = serializeCollaborationAllowlistEntries;
function deserializeCollaborationAllowlistExemptTargetTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistExemptTargetTypeField\"";
    }
    if (val === "collaboration_whitelist") {
        return "collaboration_whitelist";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationAllowlistExemptTargetTypeField = deserializeCollaborationAllowlistExemptTargetTypeField;
function serializeCollaborationAllowlistExemptTargetTypeField(val) {
    return val;
}
exports.serializeCollaborationAllowlistExemptTargetTypeField = serializeCollaborationAllowlistExemptTargetTypeField;
function deserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistExemptTargetEnterpriseFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = deserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField;
function serializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val) {
    return val;
}
exports.serializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField = serializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField;
function deserializeCollaborationAllowlistExemptTargetEnterpriseField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAllowlistExemptTargetEnterpriseField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CollaborationAllowlistExemptTargetEnterpriseField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"CollaborationAllowlistExemptTargetEnterpriseField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.deserializeCollaborationAllowlistExemptTargetEnterpriseField = deserializeCollaborationAllowlistExemptTargetEnterpriseField;
function serializeCollaborationAllowlistExemptTargetEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCollaborationAllowlistExemptTargetEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.serializeCollaborationAllowlistExemptTargetEnterpriseField = serializeCollaborationAllowlistExemptTargetEnterpriseField;
function deserializeCollaborationAllowlistExemptTargetUserFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollaborationAllowlistExemptTargetUserFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollaborationAllowlistExemptTargetUserFieldTypeField = deserializeCollaborationAllowlistExemptTargetUserFieldTypeField;
function serializeCollaborationAllowlistExemptTargetUserFieldTypeField(val) {
    return val;
}
exports.serializeCollaborationAllowlistExemptTargetUserFieldTypeField = serializeCollaborationAllowlistExemptTargetUserFieldTypeField;
function deserializeCollaborationAllowlistExemptTargetUserField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAllowlistExemptTargetUserField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CollaborationAllowlistExemptTargetUserField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCollaborationAllowlistExemptTargetUserFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"CollaborationAllowlistExemptTargetUserField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.deserializeCollaborationAllowlistExemptTargetUserField = deserializeCollaborationAllowlistExemptTargetUserField;
function serializeCollaborationAllowlistExemptTargetUserField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCollaborationAllowlistExemptTargetUserFieldTypeField(val.type), ["name"]: val.name };
}
exports.serializeCollaborationAllowlistExemptTargetUserField = serializeCollaborationAllowlistExemptTargetUserField;
function deserializeCollaborationAllowlistExemptTarget(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAllowlistExemptTarget\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CollaborationAllowlistExemptTarget\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCollaborationAllowlistExemptTargetTypeField(val.type);
    const enterprise = val.enterprise === void 0 ? void 0 : deserializeCollaborationAllowlistExemptTargetEnterpriseField(val.enterprise);
    const user = val.user === void 0 ? void 0 : deserializeCollaborationAllowlistExemptTargetUserField(val.user);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"CollaborationAllowlistExemptTarget\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"CollaborationAllowlistExemptTarget\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, enterprise: enterprise, user: user, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.deserializeCollaborationAllowlistExemptTarget = deserializeCollaborationAllowlistExemptTarget;
function serializeCollaborationAllowlistExemptTarget(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCollaborationAllowlistExemptTargetTypeField(val.type), ["enterprise"]: val.enterprise === void 0 ? void 0 : serializeCollaborationAllowlistExemptTargetEnterpriseField(val.enterprise), ["user"]: val.user === void 0 ? void 0 : serializeCollaborationAllowlistExemptTargetUserField(val.user), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.serializeCollaborationAllowlistExemptTarget = serializeCollaborationAllowlistExemptTarget;
function deserializeCollaborationAllowlistExemptTargets(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAllowlistExemptTargets\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"CollaborationAllowlistExemptTargets\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"CollaborationAllowlistExemptTargets\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"CollaborationAllowlistExemptTargets\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"CollaborationAllowlistExemptTargets\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeCollaborationAllowlistExemptTarget(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeCollaborationAllowlistExemptTargets = deserializeCollaborationAllowlistExemptTargets;
function serializeCollaborationAllowlistExemptTargets(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeCollaborationAllowlistExemptTarget(item);
        }) };
}
exports.serializeCollaborationAllowlistExemptTargets = serializeCollaborationAllowlistExemptTargets;
function deserializeCollectionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionTypeField\"";
    }
    if (val === "collection") {
        return "collection";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollectionTypeField = deserializeCollectionTypeField;
function serializeCollectionTypeField(val) {
    return val;
}
exports.serializeCollectionTypeField = serializeCollectionTypeField;
function deserializeCollectionNameField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionNameField\"";
    }
    if (val === "Favorites") {
        return "Favorites";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollectionNameField = deserializeCollectionNameField;
function serializeCollectionNameField(val) {
    return val;
}
exports.serializeCollectionNameField = serializeCollectionNameField;
function deserializeCollectionCollectionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionCollectionTypeField\"";
    }
    if (val === "favorites") {
        return "favorites";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollectionCollectionTypeField = deserializeCollectionCollectionTypeField;
function serializeCollectionCollectionTypeField(val) {
    return val;
}
exports.serializeCollectionCollectionTypeField = serializeCollectionCollectionTypeField;
function deserializeCollection(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Collection\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Collection\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCollectionTypeField(val.type);
    const name = val.name === void 0 ? void 0 : deserializeCollectionNameField(val.name);
    const collectionType = val.collection_type === void 0 ? void 0 : deserializeCollectionCollectionTypeField(val.collection_type);
    return { id: id, type: type, name: name, collectionType: collectionType };
}
exports.deserializeCollection = deserializeCollection;
function serializeCollection(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCollectionTypeField(val.type), ["name"]: val.name === void 0 ? void 0 : serializeCollectionNameField(val.name), ["collection_type"]: val.collectionType === void 0 ? void 0 : serializeCollectionCollectionTypeField(val.collectionType) };
}
exports.serializeCollection = serializeCollection;
function deserializeCollectionsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CollectionsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCollectionsOrderFieldDirectionField = deserializeCollectionsOrderFieldDirectionField;
function serializeCollectionsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeCollectionsOrderFieldDirectionField = serializeCollectionsOrderFieldDirectionField;
function deserializeCollectionsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollectionsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"CollectionsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeCollectionsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeCollectionsOrderField = deserializeCollectionsOrderField;
function serializeCollectionsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeCollectionsOrderFieldDirectionField(val.direction) };
}
exports.serializeCollectionsOrderField = serializeCollectionsOrderField;
function deserializeCollections(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Collections\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Collections\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Collections\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"Collections\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"Collections\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeCollectionsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Collections\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeCollection(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeCollections = deserializeCollections;
function serializeCollections(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeCollectionsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeCollection(item);
        }) };
}
exports.serializeCollections = serializeCollections;
function deserializeCommentItemField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CommentItemField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CommentItemField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.type === void 0) && !(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"CommentItemField\"";
    }
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    return { id: id, type: type };
}
exports.deserializeCommentItemField = deserializeCommentItemField;
function serializeCommentItemField(val) {
    return { ["id"]: val.id, ["type"]: val.type };
}
exports.serializeCommentItemField = serializeCommentItemField;
function deserializeCommentsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CommentsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCommentsOrderFieldDirectionField = deserializeCommentsOrderFieldDirectionField;
function serializeCommentsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeCommentsOrderFieldDirectionField = serializeCommentsOrderFieldDirectionField;
function deserializeCommentsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CommentsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"CommentsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeCommentsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeCommentsOrderField = deserializeCommentsOrderField;
function serializeCommentsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeCommentsOrderFieldDirectionField(val.direction) };
}
exports.serializeCommentsOrderField = serializeCommentsOrderField;
function deserializeCommentBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"CommentBaseTypeField\"";
    }
    if (val === "comment") {
        return "comment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeCommentBaseTypeField = deserializeCommentBaseTypeField;
function serializeCommentBaseTypeField(val) {
    return val;
}
exports.serializeCommentBaseTypeField = serializeCommentBaseTypeField;
function deserializeCommentBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CommentBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CommentBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCommentBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeCommentBase = deserializeCommentBase;
function serializeCommentBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCommentBaseTypeField(val.type) };
}
exports.serializeCommentBase = serializeCommentBase;
function deserializeDevicePinnerTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"DevicePinnerTypeField\"";
    }
    if (val === "device_pinner") {
        return "device_pinner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeDevicePinnerTypeField = deserializeDevicePinnerTypeField;
function serializeDevicePinnerTypeField(val) {
    return val;
}
exports.serializeDevicePinnerTypeField = serializeDevicePinnerTypeField;
function deserializeDevicePinnersOrderFieldByField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"DevicePinnersOrderFieldByField\"";
    }
    if (val === "id") {
        return "id";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeDevicePinnersOrderFieldByField = deserializeDevicePinnersOrderFieldByField;
function serializeDevicePinnersOrderFieldByField(val) {
    return val;
}
exports.serializeDevicePinnersOrderFieldByField = serializeDevicePinnersOrderFieldByField;
function deserializeDevicePinnersOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"DevicePinnersOrderFieldDirectionField\"";
    }
    if (val === "asc") {
        return "asc";
    }
    if (val === "desc") {
        return "desc";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeDevicePinnersOrderFieldDirectionField = deserializeDevicePinnersOrderFieldDirectionField;
function serializeDevicePinnersOrderFieldDirectionField(val) {
    return val;
}
exports.serializeDevicePinnersOrderFieldDirectionField = serializeDevicePinnersOrderFieldDirectionField;
function deserializeDevicePinnersOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"DevicePinnersOrderField\"";
    }
    const by = val.by === void 0 ? void 0 : deserializeDevicePinnersOrderFieldByField(val.by);
    const direction = val.direction === void 0 ? void 0 : deserializeDevicePinnersOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeDevicePinnersOrderField = deserializeDevicePinnersOrderField;
function serializeDevicePinnersOrderField(val) {
    return { ["by"]: val.by === void 0 ? void 0 : serializeDevicePinnersOrderFieldByField(val.by), ["direction"]: val.direction === void 0 ? void 0 : serializeDevicePinnersOrderFieldDirectionField(val.direction) };
}
exports.serializeDevicePinnersOrderField = serializeDevicePinnersOrderField;
function deserializeEmailAliasTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EmailAliasTypeField\"";
    }
    if (val === "email_alias") {
        return "email_alias";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeEmailAliasTypeField = deserializeEmailAliasTypeField;
function serializeEmailAliasTypeField(val) {
    return val;
}
exports.serializeEmailAliasTypeField = serializeEmailAliasTypeField;
function deserializeEmailAlias(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"EmailAlias\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"EmailAlias\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeEmailAliasTypeField(val.type);
    if (!(val.email === void 0) && !(0, json_js_1.isJson)(val.email, "string")) {
        throw "Expecting string for \"email\" of type \"EmailAlias\"";
    }
    const email = (0, json_js_1.isJson)(val.email, "string") ? val.email : void 0;
    if (!(val.is_confirmed === void 0) && !(0, json_js_1.isJson)(val.is_confirmed, "boolean")) {
        throw "Expecting boolean for \"is_confirmed\" of type \"EmailAlias\"";
    }
    const isConfirmed = (0, json_js_1.isJson)(val.is_confirmed, "boolean") ? val.is_confirmed : void 0;
    return { id: id, type: type, email: email, isConfirmed: isConfirmed };
}
exports.deserializeEmailAlias = deserializeEmailAlias;
function serializeEmailAlias(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeEmailAliasTypeField(val.type), ["email"]: val.email, ["is_confirmed"]: val.isConfirmed };
}
exports.serializeEmailAlias = serializeEmailAlias;
function deserializeEmailAliases(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"EmailAliases\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"EmailAliases\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"EmailAliases\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeEmailAlias(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeEmailAliases = deserializeEmailAliases;
function serializeEmailAliases(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeEmailAlias(item);
        }) };
}
exports.serializeEmailAliases = serializeEmailAliases;
function deserializeEnterpriseBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EnterpriseBaseTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeEnterpriseBaseTypeField = deserializeEnterpriseBaseTypeField;
function serializeEnterpriseBaseTypeField(val) {
    return val;
}
exports.serializeEnterpriseBaseTypeField = serializeEnterpriseBaseTypeField;
function deserializeEnterpriseBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"EnterpriseBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"EnterpriseBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeEnterpriseBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeEnterpriseBase = deserializeEnterpriseBase;
function serializeEnterpriseBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeEnterpriseBaseTypeField(val.type) };
}
exports.serializeEnterpriseBase = serializeEnterpriseBase;
function deserializeEventEventTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EventEventTypeField\"";
    }
    if (val === "ACCESS_GRANTED") {
        return "ACCESS_GRANTED";
    }
    if (val === "ACCESS_REVOKED") {
        return "ACCESS_REVOKED";
    }
    if (val === "ADD_DEVICE_ASSOCIATION") {
        return "ADD_DEVICE_ASSOCIATION";
    }
    if (val === "ADD_LOGIN_ACTIVITY_DEVICE") {
        return "ADD_LOGIN_ACTIVITY_DEVICE";
    }
    if (val === "ADMIN_LOGIN") {
        return "ADMIN_LOGIN";
    }
    if (val === "APPLICATION_CREATED") {
        return "APPLICATION_CREATED";
    }
    if (val === "APPLICATION_PUBLIC_KEY_ADDED") {
        return "APPLICATION_PUBLIC_KEY_ADDED";
    }
    if (val === "APPLICATION_PUBLIC_KEY_DELETED") {
        return "APPLICATION_PUBLIC_KEY_DELETED";
    }
    if (val === "CHANGE_ADMIN_ROLE") {
        return "CHANGE_ADMIN_ROLE";
    }
    if (val === "CHANGE_FOLDER_PERMISSION") {
        return "CHANGE_FOLDER_PERMISSION";
    }
    if (val === "COLLABORATION_ACCEPT") {
        return "COLLABORATION_ACCEPT";
    }
    if (val === "COLLABORATION_EXPIRATION") {
        return "COLLABORATION_EXPIRATION";
    }
    if (val === "COLLABORATION_INVITE") {
        return "COLLABORATION_INVITE";
    }
    if (val === "COLLABORATION_REMOVE") {
        return "COLLABORATION_REMOVE";
    }
    if (val === "COLLABORATION_ROLE_CHANGE") {
        return "COLLABORATION_ROLE_CHANGE";
    }
    if (val === "COLLAB_ADD_COLLABORATOR") {
        return "COLLAB_ADD_COLLABORATOR";
    }
    if (val === "COLLAB_INVITE_COLLABORATOR") {
        return "COLLAB_INVITE_COLLABORATOR";
    }
    if (val === "COLLAB_REMOVE_COLLABORATOR") {
        return "COLLAB_REMOVE_COLLABORATOR";
    }
    if (val === "COLLAB_ROLE_CHANGE") {
        return "COLLAB_ROLE_CHANGE";
    }
    if (val === "COMMENT_CREATE") {
        return "COMMENT_CREATE";
    }
    if (val === "COMMENT_DELETE") {
        return "COMMENT_DELETE";
    }
    if (val === "CONTENT_ACCESS") {
        return "CONTENT_ACCESS";
    }
    if (val === "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY") {
        return "CONTENT_WORKFLOW_ABNORMAL_DOWNLOAD_ACTIVITY";
    }
    if (val === "CONTENT_WORKFLOW_AUTOMATION_ADD") {
        return "CONTENT_WORKFLOW_AUTOMATION_ADD";
    }
    if (val === "CONTENT_WORKFLOW_AUTOMATION_DELETE") {
        return "CONTENT_WORKFLOW_AUTOMATION_DELETE";
    }
    if (val === "CONTENT_WORKFLOW_POLICY_ADD") {
        return "CONTENT_WORKFLOW_POLICY_ADD";
    }
    if (val === "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION") {
        return "CONTENT_WORKFLOW_SHARING_POLICY_VIOLATION";
    }
    if (val === "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION") {
        return "CONTENT_WORKFLOW_UPLOAD_POLICY_VIOLATION";
    }
    if (val === "COPY") {
        return "COPY";
    }
    if (val === "DATA_RETENTION_CREATE_RETENTION") {
        return "DATA_RETENTION_CREATE_RETENTION";
    }
    if (val === "DATA_RETENTION_REMOVE_RETENTION") {
        return "DATA_RETENTION_REMOVE_RETENTION";
    }
    if (val === "DELETE") {
        return "DELETE";
    }
    if (val === "DELETE_USER") {
        return "DELETE_USER";
    }
    if (val === "DEVICE_TRUST_CHECK_FAILED") {
        return "DEVICE_TRUST_CHECK_FAILED";
    }
    if (val === "DOWNLOAD") {
        return "DOWNLOAD";
    }
    if (val === "EDIT") {
        return "EDIT";
    }
    if (val === "EDIT_USER") {
        return "EDIT_USER";
    }
    if (val === "EMAIL_ALIAS_CONFIRM") {
        return "EMAIL_ALIAS_CONFIRM";
    }
    if (val === "EMAIL_ALIAS_REMOVE") {
        return "EMAIL_ALIAS_REMOVE";
    }
    if (val === "ENABLE_TWO_FACTOR_AUTH") {
        return "ENABLE_TWO_FACTOR_AUTH";
    }
    if (val === "ENTERPRISE_APP_AUTHORIZATION_UPDATE") {
        return "ENTERPRISE_APP_AUTHORIZATION_UPDATE";
    }
    if (val === "FAILED_LOGIN") {
        return "FAILED_LOGIN";
    }
    if (val === "FILE_MARKED_MALICIOUS") {
        return "FILE_MARKED_MALICIOUS";
    }
    if (val === "FILE_WATERMARKED_DOWNLOAD") {
        return "FILE_WATERMARKED_DOWNLOAD";
    }
    if (val === "GROUP_ADD_ITEM") {
        return "GROUP_ADD_ITEM";
    }
    if (val === "GROUP_ADD_USER") {
        return "GROUP_ADD_USER";
    }
    if (val === "GROUP_CREATION") {
        return "GROUP_CREATION";
    }
    if (val === "GROUP_DELETION") {
        return "GROUP_DELETION";
    }
    if (val === "GROUP_EDITED") {
        return "GROUP_EDITED";
    }
    if (val === "GROUP_REMOVE_ITEM") {
        return "GROUP_REMOVE_ITEM";
    }
    if (val === "GROUP_REMOVE_USER") {
        return "GROUP_REMOVE_USER";
    }
    if (val === "ITEM_COPY") {
        return "ITEM_COPY";
    }
    if (val === "ITEM_CREATE") {
        return "ITEM_CREATE";
    }
    if (val === "ITEM_DOWNLOAD") {
        return "ITEM_DOWNLOAD";
    }
    if (val === "ITEM_MAKE_CURRENT_VERSION") {
        return "ITEM_MAKE_CURRENT_VERSION";
    }
    if (val === "ITEM_MODIFY") {
        return "ITEM_MODIFY";
    }
    if (val === "ITEM_MOVE") {
        return "ITEM_MOVE";
    }
    if (val === "ITEM_OPEN") {
        return "ITEM_OPEN";
    }
    if (val === "ITEM_PREVIEW") {
        return "ITEM_PREVIEW";
    }
    if (val === "ITEM_RENAME") {
        return "ITEM_RENAME";
    }
    if (val === "ITEM_SHARED") {
        return "ITEM_SHARED";
    }
    if (val === "ITEM_SHARED_CREATE") {
        return "ITEM_SHARED_CREATE";
    }
    if (val === "ITEM_SHARED_UNSHARE") {
        return "ITEM_SHARED_UNSHARE";
    }
    if (val === "ITEM_SHARED_UPDATE") {
        return "ITEM_SHARED_UPDATE";
    }
    if (val === "ITEM_SYNC") {
        return "ITEM_SYNC";
    }
    if (val === "ITEM_TRASH") {
        return "ITEM_TRASH";
    }
    if (val === "ITEM_UNDELETE_VIA_TRASH") {
        return "ITEM_UNDELETE_VIA_TRASH";
    }
    if (val === "ITEM_UNSYNC") {
        return "ITEM_UNSYNC";
    }
    if (val === "ITEM_UPLOAD") {
        return "ITEM_UPLOAD";
    }
    if (val === "LEGAL_HOLD_ASSIGNMENT_CREATE") {
        return "LEGAL_HOLD_ASSIGNMENT_CREATE";
    }
    if (val === "LEGAL_HOLD_ASSIGNMENT_DELETE") {
        return "LEGAL_HOLD_ASSIGNMENT_DELETE";
    }
    if (val === "LEGAL_HOLD_POLICY_CREATE") {
        return "LEGAL_HOLD_POLICY_CREATE";
    }
    if (val === "LEGAL_HOLD_POLICY_DELETE") {
        return "LEGAL_HOLD_POLICY_DELETE";
    }
    if (val === "LEGAL_HOLD_POLICY_UPDATE") {
        return "LEGAL_HOLD_POLICY_UPDATE";
    }
    if (val === "LOCK") {
        return "LOCK";
    }
    if (val === "LOCK_CREATE") {
        return "LOCK_CREATE";
    }
    if (val === "LOCK_DESTROY") {
        return "LOCK_DESTROY";
    }
    if (val === "LOGIN") {
        return "LOGIN";
    }
    if (val === "MASTER_INVITE_ACCEPT") {
        return "MASTER_INVITE_ACCEPT";
    }
    if (val === "MASTER_INVITE_REJECT") {
        return "MASTER_INVITE_REJECT";
    }
    if (val === "METADATA_INSTANCE_CREATE") {
        return "METADATA_INSTANCE_CREATE";
    }
    if (val === "METADATA_INSTANCE_DELETE") {
        return "METADATA_INSTANCE_DELETE";
    }
    if (val === "METADATA_INSTANCE_UPDATE") {
        return "METADATA_INSTANCE_UPDATE";
    }
    if (val === "METADATA_TEMPLATE_CREATE") {
        return "METADATA_TEMPLATE_CREATE";
    }
    if (val === "METADATA_TEMPLATE_DELETE") {
        return "METADATA_TEMPLATE_DELETE";
    }
    if (val === "METADATA_TEMPLATE_UPDATE") {
        return "METADATA_TEMPLATE_UPDATE";
    }
    if (val === "MOVE") {
        return "MOVE";
    }
    if (val === "NEW_USER") {
        return "NEW_USER";
    }
    if (val === "PREVIEW") {
        return "PREVIEW";
    }
    if (val === "REMOVE_DEVICE_ASSOCIATION") {
        return "REMOVE_DEVICE_ASSOCIATION";
    }
    if (val === "REMOVE_LOGIN_ACTIVITY_DEVICE") {
        return "REMOVE_LOGIN_ACTIVITY_DEVICE";
    }
    if (val === "RENAME") {
        return "RENAME";
    }
    if (val === "RETENTION_POLICY_ASSIGNMENT_ADD") {
        return "RETENTION_POLICY_ASSIGNMENT_ADD";
    }
    if (val === "SHARE") {
        return "SHARE";
    }
    if (val === "SHARE_EXPIRATION") {
        return "SHARE_EXPIRATION";
    }
    if (val === "SHIELD_ALERT") {
        return "SHIELD_ALERT";
    }
    if (val === "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED") {
        return "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED";
    }
    if (val === "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION") {
        return "SHIELD_EXTERNAL_COLLAB_ACCESS_BLOCKED_MISSING_JUSTIFICATION";
    }
    if (val === "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED") {
        return "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED";
    }
    if (val === "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION") {
        return "SHIELD_EXTERNAL_COLLAB_INVITE_BLOCKED_MISSING_JUSTIFICATION";
    }
    if (val === "SHIELD_JUSTIFICATION_APPROVAL") {
        return "SHIELD_JUSTIFICATION_APPROVAL";
    }
    if (val === "SIGN_DOCUMENT_ASSIGNED") {
        return "SIGN_DOCUMENT_ASSIGNED";
    }
    if (val === "SIGN_DOCUMENT_CANCELLED") {
        return "SIGN_DOCUMENT_CANCELLED";
    }
    if (val === "SIGN_DOCUMENT_COMPLETED") {
        return "SIGN_DOCUMENT_COMPLETED";
    }
    if (val === "SIGN_DOCUMENT_CONVERTED") {
        return "SIGN_DOCUMENT_CONVERTED";
    }
    if (val === "SIGN_DOCUMENT_CREATED") {
        return "SIGN_DOCUMENT_CREATED";
    }
    if (val === "SIGN_DOCUMENT_DECLINED") {
        return "SIGN_DOCUMENT_DECLINED";
    }
    if (val === "SIGN_DOCUMENT_EXPIRED") {
        return "SIGN_DOCUMENT_EXPIRED";
    }
    if (val === "SIGN_DOCUMENT_SIGNED") {
        return "SIGN_DOCUMENT_SIGNED";
    }
    if (val === "SIGN_DOCUMENT_VIEWED_BY_SIGNED") {
        return "SIGN_DOCUMENT_VIEWED_BY_SIGNED";
    }
    if (val === "SIGNER_DOWNLOADED") {
        return "SIGNER_DOWNLOADED";
    }
    if (val === "SIGNER_FORWARDED") {
        return "SIGNER_FORWARDED";
    }
    if (val === "STORAGE_EXPIRATION") {
        return "STORAGE_EXPIRATION";
    }
    if (val === "TAG_ITEM_CREATE") {
        return "TAG_ITEM_CREATE";
    }
    if (val === "TASK_ASSIGNMENT_CREATE") {
        return "TASK_ASSIGNMENT_CREATE";
    }
    if (val === "TASK_ASSIGNMENT_DELETE") {
        return "TASK_ASSIGNMENT_DELETE";
    }
    if (val === "TASK_ASSIGNMENT_UPDATE") {
        return "TASK_ASSIGNMENT_UPDATE";
    }
    if (val === "TASK_CREATE") {
        return "TASK_CREATE";
    }
    if (val === "TASK_UPDATE") {
        return "TASK_UPDATE";
    }
    if (val === "TERMS_OF_SERVICE_ACCEPT") {
        return "TERMS_OF_SERVICE_ACCEPT";
    }
    if (val === "TERMS_OF_SERVICE_REJECT") {
        return "TERMS_OF_SERVICE_REJECT";
    }
    if (val === "UNDELETE") {
        return "UNDELETE";
    }
    if (val === "UNLOCK") {
        return "UNLOCK";
    }
    if (val === "UNSHARE") {
        return "UNSHARE";
    }
    if (val === "UPDATE_COLLABORATION_EXPIRATION") {
        return "UPDATE_COLLABORATION_EXPIRATION";
    }
    if (val === "UPDATE_SHARE_EXPIRATION") {
        return "UPDATE_SHARE_EXPIRATION";
    }
    if (val === "UPLOAD") {
        return "UPLOAD";
    }
    if (val === "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE") {
        return "USER_AUTHENTICATE_OAUTH2_ACCESS_TOKEN_CREATE";
    }
    if (val === "WATERMARK_LABEL_CREATE") {
        return "WATERMARK_LABEL_CREATE";
    }
    if (val === "WATERMARK_LABEL_DELETE") {
        return "WATERMARK_LABEL_DELETE";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeEventEventTypeField = deserializeEventEventTypeField;
function serializeEventEventTypeField(val) {
    return val;
}
exports.serializeEventEventTypeField = serializeEventEventTypeField;
function deserializeEventAdditionalDetailsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"EventAdditionalDetailsField\"";
    }
    return {};
}
exports.deserializeEventAdditionalDetailsField = deserializeEventAdditionalDetailsField;
function serializeEventAdditionalDetailsField(val) {
    return {};
}
exports.serializeEventAdditionalDetailsField = serializeEventAdditionalDetailsField;
function deserializeFileSharedLinkFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileSharedLinkFieldAccessField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileSharedLinkFieldAccessField = deserializeFileSharedLinkFieldAccessField;
function serializeFileSharedLinkFieldAccessField(val) {
    return val;
}
exports.serializeFileSharedLinkFieldAccessField = serializeFileSharedLinkFieldAccessField;
function deserializeFileSharedLinkFieldEffectiveAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileSharedLinkFieldEffectiveAccessField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileSharedLinkFieldEffectiveAccessField = deserializeFileSharedLinkFieldEffectiveAccessField;
function serializeFileSharedLinkFieldEffectiveAccessField(val) {
    return val;
}
exports.serializeFileSharedLinkFieldEffectiveAccessField = serializeFileSharedLinkFieldEffectiveAccessField;
function deserializeFileSharedLinkFieldEffectivePermissionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileSharedLinkFieldEffectivePermissionField\"";
    }
    if (val === "can_edit") {
        return "can_edit";
    }
    if (val === "can_download") {
        return "can_download";
    }
    if (val === "can_preview") {
        return "can_preview";
    }
    if (val === "no_access") {
        return "no_access";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileSharedLinkFieldEffectivePermissionField = deserializeFileSharedLinkFieldEffectivePermissionField;
function serializeFileSharedLinkFieldEffectivePermissionField(val) {
    return val;
}
exports.serializeFileSharedLinkFieldEffectivePermissionField = serializeFileSharedLinkFieldEffectivePermissionField;
function deserializeFileSharedLinkFieldPermissionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileSharedLinkFieldPermissionsField\"";
    }
    if (val.can_download === void 0) {
        throw "Expecting \"can_download\" of type \"FileSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_download, "boolean")) {
        throw "Expecting boolean for \"can_download\" of type \"FileSharedLinkFieldPermissionsField\"";
    }
    const canDownload = val.can_download;
    if (val.can_preview === void 0) {
        throw "Expecting \"can_preview\" of type \"FileSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_preview, "boolean")) {
        throw "Expecting boolean for \"can_preview\" of type \"FileSharedLinkFieldPermissionsField\"";
    }
    const canPreview = val.can_preview;
    if (val.can_edit === void 0) {
        throw "Expecting \"can_edit\" of type \"FileSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_edit, "boolean")) {
        throw "Expecting boolean for \"can_edit\" of type \"FileSharedLinkFieldPermissionsField\"";
    }
    const canEdit = val.can_edit;
    return { canDownload: canDownload, canPreview: canPreview, canEdit: canEdit };
}
exports.deserializeFileSharedLinkFieldPermissionsField = deserializeFileSharedLinkFieldPermissionsField;
function serializeFileSharedLinkFieldPermissionsField(val) {
    return { ["can_download"]: val.canDownload, ["can_preview"]: val.canPreview, ["can_edit"]: val.canEdit };
}
exports.serializeFileSharedLinkFieldPermissionsField = serializeFileSharedLinkFieldPermissionsField;
function deserializeFileSharedLinkField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileSharedLinkField\"";
    }
    if (val.url === void 0) {
        throw "Expecting \"url\" of type \"FileSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"FileSharedLinkField\"";
    }
    const url = val.url;
    if (!(val.download_url === void 0) && !(0, json_js_1.isJson)(val.download_url, "string")) {
        throw "Expecting string for \"download_url\" of type \"FileSharedLinkField\"";
    }
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    if (!(val.vanity_url === void 0) && !(0, json_js_1.isJson)(val.vanity_url, "string")) {
        throw "Expecting string for \"vanity_url\" of type \"FileSharedLinkField\"";
    }
    const vanityUrl = (0, json_js_1.isJson)(val.vanity_url, "string") ? val.vanity_url : void 0;
    if (!(val.vanity_name === void 0) && !(0, json_js_1.isJson)(val.vanity_name, "string")) {
        throw "Expecting string for \"vanity_name\" of type \"FileSharedLinkField\"";
    }
    const vanityName = (0, json_js_1.isJson)(val.vanity_name, "string") ? val.vanity_name : void 0;
    const access = val.access === void 0 ? void 0 : deserializeFileSharedLinkFieldAccessField(val.access);
    if (val.effective_access === void 0) {
        throw "Expecting \"effective_access\" of type \"FileSharedLinkField\" to be defined";
    }
    const effectiveAccess = deserializeFileSharedLinkFieldEffectiveAccessField(val.effective_access);
    if (val.effective_permission === void 0) {
        throw "Expecting \"effective_permission\" of type \"FileSharedLinkField\" to be defined";
    }
    const effectivePermission = deserializeFileSharedLinkFieldEffectivePermissionField(val.effective_permission);
    if (!(val.unshared_at === void 0) && !(0, json_js_1.isJson)(val.unshared_at, "string")) {
        throw "Expecting string for \"unshared_at\" of type \"FileSharedLinkField\"";
    }
    const unsharedAt = (0, json_js_1.isJson)(val.unshared_at, "string") ? val.unshared_at : void 0;
    if (val.is_password_enabled === void 0) {
        throw "Expecting \"is_password_enabled\" of type \"FileSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.is_password_enabled, "boolean")) {
        throw "Expecting boolean for \"is_password_enabled\" of type \"FileSharedLinkField\"";
    }
    const isPasswordEnabled = val.is_password_enabled;
    const permissions = val.permissions === void 0 ? void 0 : deserializeFileSharedLinkFieldPermissionsField(val.permissions);
    if (val.download_count === void 0) {
        throw "Expecting \"download_count\" of type \"FileSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.download_count, "number")) {
        throw "Expecting number for \"download_count\" of type \"FileSharedLinkField\"";
    }
    const downloadCount = val.download_count;
    if (val.preview_count === void 0) {
        throw "Expecting \"preview_count\" of type \"FileSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.preview_count, "number")) {
        throw "Expecting number for \"preview_count\" of type \"FileSharedLinkField\"";
    }
    const previewCount = val.preview_count;
    return { url: url, downloadUrl: downloadUrl, vanityUrl: vanityUrl, vanityName: vanityName, access: access, effectiveAccess: effectiveAccess, effectivePermission: effectivePermission, unsharedAt: unsharedAt, isPasswordEnabled: isPasswordEnabled, permissions: permissions, downloadCount: downloadCount, previewCount: previewCount };
}
exports.deserializeFileSharedLinkField = deserializeFileSharedLinkField;
function serializeFileSharedLinkField(val) {
    return { ["url"]: val.url, ["download_url"]: val.downloadUrl, ["vanity_url"]: val.vanityUrl, ["vanity_name"]: val.vanityName, ["access"]: val.access === void 0 ? void 0 : serializeFileSharedLinkFieldAccessField(val.access), ["effective_access"]: serializeFileSharedLinkFieldEffectiveAccessField(val.effectiveAccess), ["effective_permission"]: serializeFileSharedLinkFieldEffectivePermissionField(val.effectivePermission), ["unshared_at"]: val.unsharedAt, ["is_password_enabled"]: val.isPasswordEnabled, ["permissions"]: val.permissions === void 0 ? void 0 : serializeFileSharedLinkFieldPermissionsField(val.permissions), ["download_count"]: val.downloadCount, ["preview_count"]: val.previewCount };
}
exports.serializeFileSharedLinkField = serializeFileSharedLinkField;
function deserializeFileItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileItemStatusField = deserializeFileItemStatusField;
function serializeFileItemStatusField(val) {
    return val;
}
exports.serializeFileItemStatusField = serializeFileItemStatusField;
function deserializeFileFullPermissionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullPermissionsField\"";
    }
    if (val.can_delete === void 0) {
        throw "Expecting \"can_delete\" of type \"FileFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_delete, "boolean")) {
        throw "Expecting boolean for \"can_delete\" of type \"FileFullPermissionsField\"";
    }
    const canDelete = val.can_delete;
    if (val.can_download === void 0) {
        throw "Expecting \"can_download\" of type \"FileFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_download, "boolean")) {
        throw "Expecting boolean for \"can_download\" of type \"FileFullPermissionsField\"";
    }
    const canDownload = val.can_download;
    if (val.can_invite_collaborator === void 0) {
        throw "Expecting \"can_invite_collaborator\" of type \"FileFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_invite_collaborator, "boolean")) {
        throw "Expecting boolean for \"can_invite_collaborator\" of type \"FileFullPermissionsField\"";
    }
    const canInviteCollaborator = val.can_invite_collaborator;
    if (val.can_rename === void 0) {
        throw "Expecting \"can_rename\" of type \"FileFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_rename, "boolean")) {
        throw "Expecting boolean for \"can_rename\" of type \"FileFullPermissionsField\"";
    }
    const canRename = val.can_rename;
    if (val.can_set_share_access === void 0) {
        throw "Expecting \"can_set_share_access\" of type \"FileFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_set_share_access, "boolean")) {
        throw "Expecting boolean for \"can_set_share_access\" of type \"FileFullPermissionsField\"";
    }
    const canSetShareAccess = val.can_set_share_access;
    if (val.can_share === void 0) {
        throw "Expecting \"can_share\" of type \"FileFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_share, "boolean")) {
        throw "Expecting boolean for \"can_share\" of type \"FileFullPermissionsField\"";
    }
    const canShare = val.can_share;
    if (!(val.can_annotate === void 0) && !(0, json_js_1.isJson)(val.can_annotate, "boolean")) {
        throw "Expecting boolean for \"can_annotate\" of type \"FileFullPermissionsField\"";
    }
    const canAnnotate = (0, json_js_1.isJson)(val.can_annotate, "boolean") ? val.can_annotate : void 0;
    if (!(val.can_comment === void 0) && !(0, json_js_1.isJson)(val.can_comment, "boolean")) {
        throw "Expecting boolean for \"can_comment\" of type \"FileFullPermissionsField\"";
    }
    const canComment = (0, json_js_1.isJson)(val.can_comment, "boolean") ? val.can_comment : void 0;
    if (!(val.can_preview === void 0) && !(0, json_js_1.isJson)(val.can_preview, "boolean")) {
        throw "Expecting boolean for \"can_preview\" of type \"FileFullPermissionsField\"";
    }
    const canPreview = (0, json_js_1.isJson)(val.can_preview, "boolean") ? val.can_preview : void 0;
    if (!(val.can_upload === void 0) && !(0, json_js_1.isJson)(val.can_upload, "boolean")) {
        throw "Expecting boolean for \"can_upload\" of type \"FileFullPermissionsField\"";
    }
    const canUpload = (0, json_js_1.isJson)(val.can_upload, "boolean") ? val.can_upload : void 0;
    if (!(val.can_view_annotations_all === void 0) && !(0, json_js_1.isJson)(val.can_view_annotations_all, "boolean")) {
        throw "Expecting boolean for \"can_view_annotations_all\" of type \"FileFullPermissionsField\"";
    }
    const canViewAnnotationsAll = (0, json_js_1.isJson)(val.can_view_annotations_all, "boolean") ? val.can_view_annotations_all : void 0;
    if (!(val.can_view_annotations_self === void 0) && !(0, json_js_1.isJson)(val.can_view_annotations_self, "boolean")) {
        throw "Expecting boolean for \"can_view_annotations_self\" of type \"FileFullPermissionsField\"";
    }
    const canViewAnnotationsSelf = (0, json_js_1.isJson)(val.can_view_annotations_self, "boolean") ? val.can_view_annotations_self : void 0;
    return { canDelete: canDelete, canDownload: canDownload, canInviteCollaborator: canInviteCollaborator, canRename: canRename, canSetShareAccess: canSetShareAccess, canShare: canShare, canAnnotate: canAnnotate, canComment: canComment, canPreview: canPreview, canUpload: canUpload, canViewAnnotationsAll: canViewAnnotationsAll, canViewAnnotationsSelf: canViewAnnotationsSelf };
}
exports.deserializeFileFullPermissionsField = deserializeFileFullPermissionsField;
function serializeFileFullPermissionsField(val) {
    return { ["can_delete"]: val.canDelete, ["can_download"]: val.canDownload, ["can_invite_collaborator"]: val.canInviteCollaborator, ["can_rename"]: val.canRename, ["can_set_share_access"]: val.canSetShareAccess, ["can_share"]: val.canShare, ["can_annotate"]: val.canAnnotate, ["can_comment"]: val.canComment, ["can_preview"]: val.canPreview, ["can_upload"]: val.canUpload, ["can_view_annotations_all"]: val.canViewAnnotationsAll, ["can_view_annotations_self"]: val.canViewAnnotationsSelf };
}
exports.serializeFileFullPermissionsField = serializeFileFullPermissionsField;
function deserializeFileFullLockFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullLockFieldTypeField\"";
    }
    if (val === "lock") {
        return "lock";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileFullLockFieldTypeField = deserializeFileFullLockFieldTypeField;
function serializeFileFullLockFieldTypeField(val) {
    return val;
}
exports.serializeFileFullLockFieldTypeField = serializeFileFullLockFieldTypeField;
function deserializeFileFullLockFieldAppTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullLockFieldAppTypeField\"";
    }
    if (val === "gsuite") {
        return "gsuite";
    }
    if (val === "office_wopi") {
        return "office_wopi";
    }
    if (val === "office_wopiplus") {
        return "office_wopiplus";
    }
    if (val === "other") {
        return "other";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileFullLockFieldAppTypeField = deserializeFileFullLockFieldAppTypeField;
function serializeFileFullLockFieldAppTypeField(val) {
    return val;
}
exports.serializeFileFullLockFieldAppTypeField = serializeFileFullLockFieldAppTypeField;
function deserializeFileFullExpiringEmbedLinkFieldTokenTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullExpiringEmbedLinkFieldTokenTypeField\"";
    }
    if (val === "bearer") {
        return "bearer";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileFullExpiringEmbedLinkFieldTokenTypeField = deserializeFileFullExpiringEmbedLinkFieldTokenTypeField;
function serializeFileFullExpiringEmbedLinkFieldTokenTypeField(val) {
    return val;
}
exports.serializeFileFullExpiringEmbedLinkFieldTokenTypeField = serializeFileFullExpiringEmbedLinkFieldTokenTypeField;
function deserializeFileFullWatermarkInfoField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullWatermarkInfoField\"";
    }
    if (!(val.is_watermarked === void 0) && !(0, json_js_1.isJson)(val.is_watermarked, "boolean")) {
        throw "Expecting boolean for \"is_watermarked\" of type \"FileFullWatermarkInfoField\"";
    }
    const isWatermarked = (0, json_js_1.isJson)(val.is_watermarked, "boolean") ? val.is_watermarked : void 0;
    return { isWatermarked: isWatermarked };
}
exports.deserializeFileFullWatermarkInfoField = deserializeFileFullWatermarkInfoField;
function serializeFileFullWatermarkInfoField(val) {
    return { ["is_watermarked"]: val.isWatermarked };
}
exports.serializeFileFullWatermarkInfoField = serializeFileFullWatermarkInfoField;
function deserializeFileFullAllowedInviteeRolesField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullAllowedInviteeRolesField\"";
    }
    if (val === "editor") {
        return "editor";
    }
    if (val === "viewer") {
        return "viewer";
    }
    if (val === "previewer") {
        return "previewer";
    }
    if (val === "uploader") {
        return "uploader";
    }
    if (val === "previewer uploader") {
        return "previewer uploader";
    }
    if (val === "viewer uploader") {
        return "viewer uploader";
    }
    if (val === "co-owner") {
        return "co-owner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileFullAllowedInviteeRolesField = deserializeFileFullAllowedInviteeRolesField;
function serializeFileFullAllowedInviteeRolesField(val) {
    return val;
}
exports.serializeFileFullAllowedInviteeRolesField = serializeFileFullAllowedInviteeRolesField;
function deserializeFileFullMetadataField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullMetadataField\"";
    }
    return {};
}
exports.deserializeFileFullMetadataField = deserializeFileFullMetadataField;
function serializeFileFullMetadataField(val) {
    return {};
}
exports.serializeFileFullMetadataField = serializeFileFullMetadataField;
function deserializeFileFullRepresentationsFieldEntriesFieldContentField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullRepresentationsFieldEntriesFieldContentField\"";
    }
    if (!(val.url_template === void 0) && !(0, json_js_1.isJson)(val.url_template, "string")) {
        throw "Expecting string for \"url_template\" of type \"FileFullRepresentationsFieldEntriesFieldContentField\"";
    }
    const urlTemplate = (0, json_js_1.isJson)(val.url_template, "string") ? val.url_template : void 0;
    return { urlTemplate: urlTemplate };
}
exports.deserializeFileFullRepresentationsFieldEntriesFieldContentField = deserializeFileFullRepresentationsFieldEntriesFieldContentField;
function serializeFileFullRepresentationsFieldEntriesFieldContentField(val) {
    return { ["url_template"]: val.urlTemplate };
}
exports.serializeFileFullRepresentationsFieldEntriesFieldContentField = serializeFileFullRepresentationsFieldEntriesFieldContentField;
function deserializeFileFullRepresentationsFieldEntriesFieldInfoField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullRepresentationsFieldEntriesFieldInfoField\"";
    }
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"FileFullRepresentationsFieldEntriesFieldInfoField\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    return { url: url };
}
exports.deserializeFileFullRepresentationsFieldEntriesFieldInfoField = deserializeFileFullRepresentationsFieldEntriesFieldInfoField;
function serializeFileFullRepresentationsFieldEntriesFieldInfoField(val) {
    return { ["url"]: val.url };
}
exports.serializeFileFullRepresentationsFieldEntriesFieldInfoField = serializeFileFullRepresentationsFieldEntriesFieldInfoField;
function deserializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullRepresentationsFieldEntriesFieldPropertiesField\"";
    }
    if (!(val.dimensions === void 0) && !(0, json_js_1.isJson)(val.dimensions, "string")) {
        throw "Expecting string for \"dimensions\" of type \"FileFullRepresentationsFieldEntriesFieldPropertiesField\"";
    }
    const dimensions = (0, json_js_1.isJson)(val.dimensions, "string") ? val.dimensions : void 0;
    if (!(val.paged === void 0) && !(0, json_js_1.isJson)(val.paged, "boolean")) {
        throw "Expecting boolean for \"paged\" of type \"FileFullRepresentationsFieldEntriesFieldPropertiesField\"";
    }
    const paged = (0, json_js_1.isJson)(val.paged, "boolean") ? val.paged : void 0;
    if (!(val.thumb === void 0) && !(0, json_js_1.isJson)(val.thumb, "boolean")) {
        throw "Expecting boolean for \"thumb\" of type \"FileFullRepresentationsFieldEntriesFieldPropertiesField\"";
    }
    const thumb = (0, json_js_1.isJson)(val.thumb, "boolean") ? val.thumb : void 0;
    return { dimensions: dimensions, paged: paged, thumb: thumb };
}
exports.deserializeFileFullRepresentationsFieldEntriesFieldPropertiesField = deserializeFileFullRepresentationsFieldEntriesFieldPropertiesField;
function serializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val) {
    return { ["dimensions"]: val.dimensions, ["paged"]: val.paged, ["thumb"]: val.thumb };
}
exports.serializeFileFullRepresentationsFieldEntriesFieldPropertiesField = serializeFileFullRepresentationsFieldEntriesFieldPropertiesField;
function deserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullRepresentationsFieldEntriesFieldStatusFieldStateField\"";
    }
    if (val === "success") {
        return "success";
    }
    if (val === "viewable") {
        return "viewable";
    }
    if (val === "pending") {
        return "pending";
    }
    if (val === "none") {
        return "none";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = deserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField;
function serializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val) {
    return val;
}
exports.serializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField = serializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField;
function deserializeFileFullRepresentationsFieldEntriesFieldStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullRepresentationsFieldEntriesFieldStatusField\"";
    }
    const state = val.state === void 0 ? void 0 : deserializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val.state);
    return { state: state };
}
exports.deserializeFileFullRepresentationsFieldEntriesFieldStatusField = deserializeFileFullRepresentationsFieldEntriesFieldStatusField;
function serializeFileFullRepresentationsFieldEntriesFieldStatusField(val) {
    return { ["state"]: val.state === void 0 ? void 0 : serializeFileFullRepresentationsFieldEntriesFieldStatusFieldStateField(val.state) };
}
exports.serializeFileFullRepresentationsFieldEntriesFieldStatusField = serializeFileFullRepresentationsFieldEntriesFieldStatusField;
function deserializeFileFullRepresentationsFieldEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullRepresentationsFieldEntriesField\"";
    }
    const content = val.content === void 0 ? void 0 : deserializeFileFullRepresentationsFieldEntriesFieldContentField(val.content);
    const info = val.info === void 0 ? void 0 : deserializeFileFullRepresentationsFieldEntriesFieldInfoField(val.info);
    const properties = val.properties === void 0 ? void 0 : deserializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val.properties);
    if (!(val.representation === void 0) && !(0, json_js_1.isJson)(val.representation, "string")) {
        throw "Expecting string for \"representation\" of type \"FileFullRepresentationsFieldEntriesField\"";
    }
    const representation = (0, json_js_1.isJson)(val.representation, "string") ? val.representation : void 0;
    const status = val.status === void 0 ? void 0 : deserializeFileFullRepresentationsFieldEntriesFieldStatusField(val.status);
    return { content: content, info: info, properties: properties, representation: representation, status: status };
}
exports.deserializeFileFullRepresentationsFieldEntriesField = deserializeFileFullRepresentationsFieldEntriesField;
function serializeFileFullRepresentationsFieldEntriesField(val) {
    return { ["content"]: val.content === void 0 ? void 0 : serializeFileFullRepresentationsFieldEntriesFieldContentField(val.content), ["info"]: val.info === void 0 ? void 0 : serializeFileFullRepresentationsFieldEntriesFieldInfoField(val.info), ["properties"]: val.properties === void 0 ? void 0 : serializeFileFullRepresentationsFieldEntriesFieldPropertiesField(val.properties), ["representation"]: val.representation, ["status"]: val.status === void 0 ? void 0 : serializeFileFullRepresentationsFieldEntriesFieldStatusField(val.status) };
}
exports.serializeFileFullRepresentationsFieldEntriesField = serializeFileFullRepresentationsFieldEntriesField;
function deserializeFileFullRepresentationsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullRepresentationsField\"";
    }
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FileFullRepresentationsField\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeFileFullRepresentationsFieldEntriesField(itm);
    }) : void 0;
    return { entries: entries };
}
exports.deserializeFileFullRepresentationsField = deserializeFileFullRepresentationsField;
function serializeFileFullRepresentationsField(val) {
    return { ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeFileFullRepresentationsFieldEntriesField(item);
        }) };
}
exports.serializeFileFullRepresentationsField = serializeFileFullRepresentationsField;
function deserializeFileFullClassificationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullClassificationField\"";
    }
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FileFullClassificationField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.definition === void 0) && !(0, json_js_1.isJson)(val.definition, "string")) {
        throw "Expecting string for \"definition\" of type \"FileFullClassificationField\"";
    }
    const definition = (0, json_js_1.isJson)(val.definition, "string") ? val.definition : void 0;
    if (!(val.color === void 0) && !(0, json_js_1.isJson)(val.color, "string")) {
        throw "Expecting string for \"color\" of type \"FileFullClassificationField\"";
    }
    const color = (0, json_js_1.isJson)(val.color, "string") ? val.color : void 0;
    return { name: name, definition: definition, color: color };
}
exports.deserializeFileFullClassificationField = deserializeFileFullClassificationField;
function serializeFileFullClassificationField(val) {
    return { ["name"]: val.name, ["definition"]: val.definition, ["color"]: val.color };
}
exports.serializeFileFullClassificationField = serializeFileFullClassificationField;
function deserializeFileFullSharedLinkPermissionOptionsField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileFullSharedLinkPermissionOptionsField\"";
    }
    if (val === "can_preview") {
        return "can_preview";
    }
    if (val === "can_download") {
        return "can_download";
    }
    if (val === "can_edit") {
        return "can_edit";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileFullSharedLinkPermissionOptionsField = deserializeFileFullSharedLinkPermissionOptionsField;
function serializeFileFullSharedLinkPermissionOptionsField(val) {
    return val;
}
exports.serializeFileFullSharedLinkPermissionOptionsField = serializeFileFullSharedLinkPermissionOptionsField;
function deserializeFileBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileBaseTypeField\"";
    }
    if (val === "file") {
        return "file";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileBaseTypeField = deserializeFileBaseTypeField;
function serializeFileBaseTypeField(val) {
    return val;
}
exports.serializeFileBaseTypeField = serializeFileBaseTypeField;
function deserializeFileBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileBase\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileBase\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileBase\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FileBase\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileBase\" to be defined";
    }
    const type = deserializeFileBaseTypeField(val.type);
    return { id: id, etag: etag, type: type };
}
exports.deserializeFileBase = deserializeFileBase;
function serializeFileBase(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: serializeFileBaseTypeField(val.type) };
}
exports.serializeFileBase = serializeFileBase;
function deserializeFileRequestTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestTypeField\"";
    }
    if (val === "file_request") {
        return "file_request";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileRequestTypeField = deserializeFileRequestTypeField;
function serializeFileRequestTypeField(val) {
    return val;
}
exports.serializeFileRequestTypeField = serializeFileRequestTypeField;
function deserializeFileRequestStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileRequestStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "inactive") {
        return "inactive";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileRequestStatusField = deserializeFileRequestStatusField;
function serializeFileRequestStatusField(val) {
    return val;
}
exports.serializeFileRequestStatusField = serializeFileRequestStatusField;
function deserializeFileVersionBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionBaseTypeField\"";
    }
    if (val === "file_version") {
        return "file_version";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileVersionBaseTypeField = deserializeFileVersionBaseTypeField;
function serializeFileVersionBaseTypeField(val) {
    return val;
}
exports.serializeFileVersionBaseTypeField = serializeFileVersionBaseTypeField;
function deserializeFileVersionBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionBase\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileVersionBase\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileVersionBase\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileVersionBase\" to be defined";
    }
    const type = deserializeFileVersionBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeFileVersionBase = deserializeFileVersionBase;
function serializeFileVersionBase(val) {
    return { ["id"]: val.id, ["type"]: serializeFileVersionBaseTypeField(val.type) };
}
exports.serializeFileVersionBase = serializeFileVersionBase;
function deserializeFileVersionMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionMini\"";
    }
    if (!(val.sha1 === void 0) && !(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"FileVersionMini\"";
    }
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileVersionMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileVersionMini\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileVersionMini\" to be defined";
    }
    const type = deserializeFileVersionBaseTypeField(val.type);
    return { sha1: sha1, id: id, type: type };
}
exports.deserializeFileVersionMini = deserializeFileVersionMini;
function serializeFileVersionMini(val) {
    const base = serializeFileVersionBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileVersionMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["sha1"]: val.sha1 });
}
exports.serializeFileVersionMini = serializeFileVersionMini;
function deserializeFileMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileMini\"";
    }
    if (val.sequence_id === void 0) {
        throw "Expecting \"sequence_id\" of type \"FileMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"FileMini\"";
    }
    const sequenceId = val.sequence_id;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FileMini\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.sha1 === void 0) {
        throw "Expecting \"sha1\" of type \"FileMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"FileMini\"";
    }
    const sha1 = val.sha1;
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileMini\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FileMini\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileMini\" to be defined";
    }
    const type = deserializeFileBaseTypeField(val.type);
    return { sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, id: id, etag: etag, type: type };
}
exports.deserializeFileMini = deserializeFileMini;
function serializeFileMini(val) {
    const base = serializeFileBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["sha1"]: val.sha1, ["file_version"]: val.fileVersion === void 0 ? void 0 : serializeFileVersionMini(val.fileVersion) });
}
exports.serializeFileMini = serializeFileMini;
function deserializeSignRequestSignFilesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestSignFilesField\"";
    }
    if (!(val.files === void 0) && !(0, json_js_1.isJson)(val.files, "array")) {
        throw "Expecting array for \"files\" of type \"SignRequestSignFilesField\"";
    }
    const files = (0, json_js_1.isJson)(val.files, "array") ? val.files.map(function (itm) {
        return deserializeFileMini(itm);
    }) : void 0;
    if (!(val.is_ready_for_download === void 0) && !(0, json_js_1.isJson)(val.is_ready_for_download, "boolean")) {
        throw "Expecting boolean for \"is_ready_for_download\" of type \"SignRequestSignFilesField\"";
    }
    const isReadyForDownload = (0, json_js_1.isJson)(val.is_ready_for_download, "boolean") ? val.is_ready_for_download : void 0;
    return { files: files, isReadyForDownload: isReadyForDownload };
}
exports.deserializeSignRequestSignFilesField = deserializeSignRequestSignFilesField;
function serializeSignRequestSignFilesField(val) {
    return { ["files"]: val.files === void 0 ? void 0 : val.files.map(function (item) {
            return serializeFileMini(item);
        }), ["is_ready_for_download"]: val.isReadyForDownload };
}
exports.serializeSignRequestSignFilesField = serializeSignRequestSignFilesField;
function deserializeFilesUnderRetention(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FilesUnderRetention\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"FilesUnderRetention\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"FilesUnderRetention\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"FilesUnderRetention\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FilesUnderRetention\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeFileMini(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeFilesUnderRetention = deserializeFilesUnderRetention;
function serializeFilesUnderRetention(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeFileMini(item);
        }) };
}
exports.serializeFilesUnderRetention = serializeFilesUnderRetention;
function deserializeFileConflict(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileConflict\"";
    }
    if (val.sha1 === void 0) {
        throw "Expecting \"sha1\" of type \"FileConflict\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"FileConflict\"";
    }
    const sha1 = val.sha1;
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    if (val.sequence_id === void 0) {
        throw "Expecting \"sequence_id\" of type \"FileConflict\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"FileConflict\"";
    }
    const sequenceId = val.sequence_id;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FileConflict\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileConflict\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileConflict\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FileConflict\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileConflict\" to be defined";
    }
    const type = deserializeFileBaseTypeField(val.type);
    return { sha1: sha1, fileVersion: fileVersion, sequenceId: sequenceId, name: name, id: id, etag: etag, type: type };
}
exports.deserializeFileConflict = deserializeFileConflict;
function serializeFileConflict(val) {
    const base = serializeFileMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileConflict\"";
    }
    return Object.assign(Object.assign({}, base), { ["sha1"]: val.sha1, ["file_version"]: val.fileVersion === void 0 ? void 0 : serializeFileVersionMini(val.fileVersion) });
}
exports.serializeFileConflict = serializeFileConflict;
function deserializeConflictErrorContextInfoField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ConflictErrorContextInfoField\"";
    }
    if (!(val.conflicts === void 0) && !(0, json_js_1.isJson)(val.conflicts, "array")) {
        throw "Expecting array for \"conflicts\" of type \"ConflictErrorContextInfoField\"";
    }
    const conflicts = (0, json_js_1.isJson)(val.conflicts, "array") ? val.conflicts.map(function (itm) {
        return deserializeFileConflict(itm);
    }) : void 0;
    return { conflicts: conflicts };
}
exports.deserializeConflictErrorContextInfoField = deserializeConflictErrorContextInfoField;
function serializeConflictErrorContextInfoField(val) {
    return { ["conflicts"]: val.conflicts === void 0 ? void 0 : val.conflicts.map(function (item) {
            return serializeFileConflict(item);
        }) };
}
exports.serializeConflictErrorContextInfoField = serializeConflictErrorContextInfoField;
function deserializeConflictError(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ConflictError\"";
    }
    const contextInfo = val.context_info === void 0 ? void 0 : deserializeClientErrorContextInfoField(val.context_info);
    const type = val.type === void 0 ? void 0 : deserializeClientErrorTypeField(val.type);
    if (!(val.status === void 0) && !(0, json_js_1.isJson)(val.status, "number")) {
        throw "Expecting number for \"status\" of type \"ConflictError\"";
    }
    const status = (0, json_js_1.isJson)(val.status, "number") ? val.status : void 0;
    const code = val.code === void 0 ? void 0 : deserializeClientErrorCodeField(val.code);
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"ConflictError\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    if (!(val.help_url === void 0) && !(0, json_js_1.isJson)(val.help_url, "string")) {
        throw "Expecting string for \"help_url\" of type \"ConflictError\"";
    }
    const helpUrl = (0, json_js_1.isJson)(val.help_url, "string") ? val.help_url : void 0;
    if (!(val.request_id === void 0) && !(0, json_js_1.isJson)(val.request_id, "string")) {
        throw "Expecting string for \"request_id\" of type \"ConflictError\"";
    }
    const requestId = (0, json_js_1.isJson)(val.request_id, "string") ? val.request_id : void 0;
    return { contextInfo: contextInfo, type: type, status: status, code: code, message: message, helpUrl: helpUrl, requestId: requestId };
}
exports.deserializeConflictError = deserializeConflictError;
function serializeConflictError(val) {
    const base = serializeClientError(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ConflictError\"";
    }
    return Object.assign(Object.assign({}, base), { ["context_info"]: val.contextInfo === void 0 ? void 0 : serializeConflictErrorContextInfoField(val.contextInfo) });
}
exports.serializeConflictError = serializeConflictError;
function deserializeFileVersionsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileVersionsOrderFieldDirectionField = deserializeFileVersionsOrderFieldDirectionField;
function serializeFileVersionsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeFileVersionsOrderFieldDirectionField = serializeFileVersionsOrderFieldDirectionField;
function deserializeFileVersionsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"FileVersionsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeFileVersionsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeFileVersionsOrderField = deserializeFileVersionsOrderField;
function serializeFileVersionsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeFileVersionsOrderFieldDirectionField(val.direction) };
}
exports.serializeFileVersionsOrderField = serializeFileVersionsOrderField;
function deserializeFileVersionLegalHoldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionLegalHoldTypeField\"";
    }
    if (val === "file_version_legal_hold") {
        return "file_version_legal_hold";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileVersionLegalHoldTypeField = deserializeFileVersionLegalHoldTypeField;
function serializeFileVersionLegalHoldTypeField(val) {
    return val;
}
exports.serializeFileVersionLegalHoldTypeField = serializeFileVersionLegalHoldTypeField;
function deserializeFileVersionRetentionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileVersionRetentionTypeField\"";
    }
    if (val === "file_version_retention") {
        return "file_version_retention";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileVersionRetentionTypeField = deserializeFileVersionRetentionTypeField;
function serializeFileVersionRetentionTypeField(val) {
    return val;
}
exports.serializeFileVersionRetentionTypeField = serializeFileVersionRetentionTypeField;
function deserializeFolderSharedLinkFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderSharedLinkFieldAccessField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderSharedLinkFieldAccessField = deserializeFolderSharedLinkFieldAccessField;
function serializeFolderSharedLinkFieldAccessField(val) {
    return val;
}
exports.serializeFolderSharedLinkFieldAccessField = serializeFolderSharedLinkFieldAccessField;
function deserializeFolderSharedLinkFieldEffectiveAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderSharedLinkFieldEffectiveAccessField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderSharedLinkFieldEffectiveAccessField = deserializeFolderSharedLinkFieldEffectiveAccessField;
function serializeFolderSharedLinkFieldEffectiveAccessField(val) {
    return val;
}
exports.serializeFolderSharedLinkFieldEffectiveAccessField = serializeFolderSharedLinkFieldEffectiveAccessField;
function deserializeFolderSharedLinkFieldEffectivePermissionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderSharedLinkFieldEffectivePermissionField\"";
    }
    if (val === "can_edit") {
        return "can_edit";
    }
    if (val === "can_download") {
        return "can_download";
    }
    if (val === "can_preview") {
        return "can_preview";
    }
    if (val === "no_access") {
        return "no_access";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderSharedLinkFieldEffectivePermissionField = deserializeFolderSharedLinkFieldEffectivePermissionField;
function serializeFolderSharedLinkFieldEffectivePermissionField(val) {
    return val;
}
exports.serializeFolderSharedLinkFieldEffectivePermissionField = serializeFolderSharedLinkFieldEffectivePermissionField;
function deserializeFolderSharedLinkFieldPermissionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderSharedLinkFieldPermissionsField\"";
    }
    if (val.can_download === void 0) {
        throw "Expecting \"can_download\" of type \"FolderSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_download, "boolean")) {
        throw "Expecting boolean for \"can_download\" of type \"FolderSharedLinkFieldPermissionsField\"";
    }
    const canDownload = val.can_download;
    if (val.can_preview === void 0) {
        throw "Expecting \"can_preview\" of type \"FolderSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_preview, "boolean")) {
        throw "Expecting boolean for \"can_preview\" of type \"FolderSharedLinkFieldPermissionsField\"";
    }
    const canPreview = val.can_preview;
    if (val.can_edit === void 0) {
        throw "Expecting \"can_edit\" of type \"FolderSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_edit, "boolean")) {
        throw "Expecting boolean for \"can_edit\" of type \"FolderSharedLinkFieldPermissionsField\"";
    }
    const canEdit = val.can_edit;
    return { canDownload: canDownload, canPreview: canPreview, canEdit: canEdit };
}
exports.deserializeFolderSharedLinkFieldPermissionsField = deserializeFolderSharedLinkFieldPermissionsField;
function serializeFolderSharedLinkFieldPermissionsField(val) {
    return { ["can_download"]: val.canDownload, ["can_preview"]: val.canPreview, ["can_edit"]: val.canEdit };
}
exports.serializeFolderSharedLinkFieldPermissionsField = serializeFolderSharedLinkFieldPermissionsField;
function deserializeFolderSharedLinkField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderSharedLinkField\"";
    }
    if (val.url === void 0) {
        throw "Expecting \"url\" of type \"FolderSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"FolderSharedLinkField\"";
    }
    const url = val.url;
    if (!(val.download_url === void 0) && !(0, json_js_1.isJson)(val.download_url, "string")) {
        throw "Expecting string for \"download_url\" of type \"FolderSharedLinkField\"";
    }
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    if (!(val.vanity_url === void 0) && !(0, json_js_1.isJson)(val.vanity_url, "string")) {
        throw "Expecting string for \"vanity_url\" of type \"FolderSharedLinkField\"";
    }
    const vanityUrl = (0, json_js_1.isJson)(val.vanity_url, "string") ? val.vanity_url : void 0;
    if (!(val.vanity_name === void 0) && !(0, json_js_1.isJson)(val.vanity_name, "string")) {
        throw "Expecting string for \"vanity_name\" of type \"FolderSharedLinkField\"";
    }
    const vanityName = (0, json_js_1.isJson)(val.vanity_name, "string") ? val.vanity_name : void 0;
    const access = val.access === void 0 ? void 0 : deserializeFolderSharedLinkFieldAccessField(val.access);
    if (val.effective_access === void 0) {
        throw "Expecting \"effective_access\" of type \"FolderSharedLinkField\" to be defined";
    }
    const effectiveAccess = deserializeFolderSharedLinkFieldEffectiveAccessField(val.effective_access);
    if (val.effective_permission === void 0) {
        throw "Expecting \"effective_permission\" of type \"FolderSharedLinkField\" to be defined";
    }
    const effectivePermission = deserializeFolderSharedLinkFieldEffectivePermissionField(val.effective_permission);
    if (!(val.unshared_at === void 0) && !(0, json_js_1.isJson)(val.unshared_at, "string")) {
        throw "Expecting string for \"unshared_at\" of type \"FolderSharedLinkField\"";
    }
    const unsharedAt = (0, json_js_1.isJson)(val.unshared_at, "string") ? val.unshared_at : void 0;
    if (val.is_password_enabled === void 0) {
        throw "Expecting \"is_password_enabled\" of type \"FolderSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.is_password_enabled, "boolean")) {
        throw "Expecting boolean for \"is_password_enabled\" of type \"FolderSharedLinkField\"";
    }
    const isPasswordEnabled = val.is_password_enabled;
    const permissions = val.permissions === void 0 ? void 0 : deserializeFolderSharedLinkFieldPermissionsField(val.permissions);
    if (val.download_count === void 0) {
        throw "Expecting \"download_count\" of type \"FolderSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.download_count, "number")) {
        throw "Expecting number for \"download_count\" of type \"FolderSharedLinkField\"";
    }
    const downloadCount = val.download_count;
    if (val.preview_count === void 0) {
        throw "Expecting \"preview_count\" of type \"FolderSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.preview_count, "number")) {
        throw "Expecting number for \"preview_count\" of type \"FolderSharedLinkField\"";
    }
    const previewCount = val.preview_count;
    return { url: url, downloadUrl: downloadUrl, vanityUrl: vanityUrl, vanityName: vanityName, access: access, effectiveAccess: effectiveAccess, effectivePermission: effectivePermission, unsharedAt: unsharedAt, isPasswordEnabled: isPasswordEnabled, permissions: permissions, downloadCount: downloadCount, previewCount: previewCount };
}
exports.deserializeFolderSharedLinkField = deserializeFolderSharedLinkField;
function serializeFolderSharedLinkField(val) {
    return { ["url"]: val.url, ["download_url"]: val.downloadUrl, ["vanity_url"]: val.vanityUrl, ["vanity_name"]: val.vanityName, ["access"]: val.access === void 0 ? void 0 : serializeFolderSharedLinkFieldAccessField(val.access), ["effective_access"]: serializeFolderSharedLinkFieldEffectiveAccessField(val.effectiveAccess), ["effective_permission"]: serializeFolderSharedLinkFieldEffectivePermissionField(val.effectivePermission), ["unshared_at"]: val.unsharedAt, ["is_password_enabled"]: val.isPasswordEnabled, ["permissions"]: val.permissions === void 0 ? void 0 : serializeFolderSharedLinkFieldPermissionsField(val.permissions), ["download_count"]: val.downloadCount, ["preview_count"]: val.previewCount };
}
exports.serializeFolderSharedLinkField = serializeFolderSharedLinkField;
function deserializeFolderFolderUploadEmailFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFolderUploadEmailFieldAccessField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderFolderUploadEmailFieldAccessField = deserializeFolderFolderUploadEmailFieldAccessField;
function serializeFolderFolderUploadEmailFieldAccessField(val) {
    return val;
}
exports.serializeFolderFolderUploadEmailFieldAccessField = serializeFolderFolderUploadEmailFieldAccessField;
function deserializeFolderFolderUploadEmailField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderFolderUploadEmailField\"";
    }
    const access = val.access === void 0 ? void 0 : deserializeFolderFolderUploadEmailFieldAccessField(val.access);
    if (!(val.email === void 0) && !(0, json_js_1.isJson)(val.email, "string")) {
        throw "Expecting string for \"email\" of type \"FolderFolderUploadEmailField\"";
    }
    const email = (0, json_js_1.isJson)(val.email, "string") ? val.email : void 0;
    return { access: access, email: email };
}
exports.deserializeFolderFolderUploadEmailField = deserializeFolderFolderUploadEmailField;
function serializeFolderFolderUploadEmailField(val) {
    return { ["access"]: val.access === void 0 ? void 0 : serializeFolderFolderUploadEmailFieldAccessField(val.access), ["email"]: val.email };
}
exports.serializeFolderFolderUploadEmailField = serializeFolderFolderUploadEmailField;
function deserializeFolderItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderItemStatusField = deserializeFolderItemStatusField;
function serializeFolderItemStatusField(val) {
    return val;
}
exports.serializeFolderItemStatusField = serializeFolderItemStatusField;
function deserializeFolderFullSyncStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFullSyncStateField\"";
    }
    if (val === "synced") {
        return "synced";
    }
    if (val === "not_synced") {
        return "not_synced";
    }
    if (val === "partially_synced") {
        return "partially_synced";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderFullSyncStateField = deserializeFolderFullSyncStateField;
function serializeFolderFullSyncStateField(val) {
    return val;
}
exports.serializeFolderFullSyncStateField = serializeFolderFullSyncStateField;
function deserializeFolderFullPermissionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderFullPermissionsField\"";
    }
    if (val.can_delete === void 0) {
        throw "Expecting \"can_delete\" of type \"FolderFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_delete, "boolean")) {
        throw "Expecting boolean for \"can_delete\" of type \"FolderFullPermissionsField\"";
    }
    const canDelete = val.can_delete;
    if (val.can_download === void 0) {
        throw "Expecting \"can_download\" of type \"FolderFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_download, "boolean")) {
        throw "Expecting boolean for \"can_download\" of type \"FolderFullPermissionsField\"";
    }
    const canDownload = val.can_download;
    if (val.can_invite_collaborator === void 0) {
        throw "Expecting \"can_invite_collaborator\" of type \"FolderFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_invite_collaborator, "boolean")) {
        throw "Expecting boolean for \"can_invite_collaborator\" of type \"FolderFullPermissionsField\"";
    }
    const canInviteCollaborator = val.can_invite_collaborator;
    if (val.can_rename === void 0) {
        throw "Expecting \"can_rename\" of type \"FolderFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_rename, "boolean")) {
        throw "Expecting boolean for \"can_rename\" of type \"FolderFullPermissionsField\"";
    }
    const canRename = val.can_rename;
    if (val.can_set_share_access === void 0) {
        throw "Expecting \"can_set_share_access\" of type \"FolderFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_set_share_access, "boolean")) {
        throw "Expecting boolean for \"can_set_share_access\" of type \"FolderFullPermissionsField\"";
    }
    const canSetShareAccess = val.can_set_share_access;
    if (val.can_share === void 0) {
        throw "Expecting \"can_share\" of type \"FolderFullPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_share, "boolean")) {
        throw "Expecting boolean for \"can_share\" of type \"FolderFullPermissionsField\"";
    }
    const canShare = val.can_share;
    if (!(val.can_upload === void 0) && !(0, json_js_1.isJson)(val.can_upload, "boolean")) {
        throw "Expecting boolean for \"can_upload\" of type \"FolderFullPermissionsField\"";
    }
    const canUpload = (0, json_js_1.isJson)(val.can_upload, "boolean") ? val.can_upload : void 0;
    return { canDelete: canDelete, canDownload: canDownload, canInviteCollaborator: canInviteCollaborator, canRename: canRename, canSetShareAccess: canSetShareAccess, canShare: canShare, canUpload: canUpload };
}
exports.deserializeFolderFullPermissionsField = deserializeFolderFullPermissionsField;
function serializeFolderFullPermissionsField(val) {
    return { ["can_delete"]: val.canDelete, ["can_download"]: val.canDownload, ["can_invite_collaborator"]: val.canInviteCollaborator, ["can_rename"]: val.canRename, ["can_set_share_access"]: val.canSetShareAccess, ["can_share"]: val.canShare, ["can_upload"]: val.canUpload };
}
exports.serializeFolderFullPermissionsField = serializeFolderFullPermissionsField;
function deserializeFolderFullMetadataField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderFullMetadataField\"";
    }
    return {};
}
exports.deserializeFolderFullMetadataField = deserializeFolderFullMetadataField;
function serializeFolderFullMetadataField(val) {
    return {};
}
exports.serializeFolderFullMetadataField = serializeFolderFullMetadataField;
function deserializeFolderFullAllowedSharedLinkAccessLevelsField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFullAllowedSharedLinkAccessLevelsField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderFullAllowedSharedLinkAccessLevelsField = deserializeFolderFullAllowedSharedLinkAccessLevelsField;
function serializeFolderFullAllowedSharedLinkAccessLevelsField(val) {
    return val;
}
exports.serializeFolderFullAllowedSharedLinkAccessLevelsField = serializeFolderFullAllowedSharedLinkAccessLevelsField;
function deserializeFolderFullAllowedInviteeRolesField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderFullAllowedInviteeRolesField\"";
    }
    if (val === "editor") {
        return "editor";
    }
    if (val === "viewer") {
        return "viewer";
    }
    if (val === "previewer") {
        return "previewer";
    }
    if (val === "uploader") {
        return "uploader";
    }
    if (val === "previewer uploader") {
        return "previewer uploader";
    }
    if (val === "viewer uploader") {
        return "viewer uploader";
    }
    if (val === "co-owner") {
        return "co-owner";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderFullAllowedInviteeRolesField = deserializeFolderFullAllowedInviteeRolesField;
function serializeFolderFullAllowedInviteeRolesField(val) {
    return val;
}
exports.serializeFolderFullAllowedInviteeRolesField = serializeFolderFullAllowedInviteeRolesField;
function deserializeFolderFullWatermarkInfoField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderFullWatermarkInfoField\"";
    }
    if (!(val.is_watermarked === void 0) && !(0, json_js_1.isJson)(val.is_watermarked, "boolean")) {
        throw "Expecting boolean for \"is_watermarked\" of type \"FolderFullWatermarkInfoField\"";
    }
    const isWatermarked = (0, json_js_1.isJson)(val.is_watermarked, "boolean") ? val.is_watermarked : void 0;
    return { isWatermarked: isWatermarked };
}
exports.deserializeFolderFullWatermarkInfoField = deserializeFolderFullWatermarkInfoField;
function serializeFolderFullWatermarkInfoField(val) {
    return { ["is_watermarked"]: val.isWatermarked };
}
exports.serializeFolderFullWatermarkInfoField = serializeFolderFullWatermarkInfoField;
function deserializeFolderFullClassificationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderFullClassificationField\"";
    }
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FolderFullClassificationField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.definition === void 0) && !(0, json_js_1.isJson)(val.definition, "string")) {
        throw "Expecting string for \"definition\" of type \"FolderFullClassificationField\"";
    }
    const definition = (0, json_js_1.isJson)(val.definition, "string") ? val.definition : void 0;
    if (!(val.color === void 0) && !(0, json_js_1.isJson)(val.color, "string")) {
        throw "Expecting string for \"color\" of type \"FolderFullClassificationField\"";
    }
    const color = (0, json_js_1.isJson)(val.color, "string") ? val.color : void 0;
    return { name: name, definition: definition, color: color };
}
exports.deserializeFolderFullClassificationField = deserializeFolderFullClassificationField;
function serializeFolderFullClassificationField(val) {
    return { ["name"]: val.name, ["definition"]: val.definition, ["color"]: val.color };
}
exports.serializeFolderFullClassificationField = serializeFolderFullClassificationField;
function deserializeFolderBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FolderBaseTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFolderBaseTypeField = deserializeFolderBaseTypeField;
function serializeFolderBaseTypeField(val) {
    return val;
}
exports.serializeFolderBaseTypeField = serializeFolderBaseTypeField;
function deserializeFolderBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderBase\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FolderBase\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FolderBase\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FolderBase\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FolderBase\" to be defined";
    }
    const type = deserializeFolderBaseTypeField(val.type);
    return { id: id, etag: etag, type: type };
}
exports.deserializeFolderBase = deserializeFolderBase;
function serializeFolderBase(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: serializeFolderBaseTypeField(val.type) };
}
exports.serializeFolderBase = serializeFolderBase;
function deserializeFolderMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderMini\"";
    }
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"FolderMini\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FolderMini\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FolderMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FolderMini\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FolderMini\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FolderMini\" to be defined";
    }
    const type = deserializeFolderBaseTypeField(val.type);
    return { sequenceId: sequenceId, name: name, id: id, etag: etag, type: type };
}
exports.deserializeFolderMini = deserializeFolderMini;
function serializeFolderMini(val) {
    const base = serializeFolderBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FolderMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["sequence_id"]: val.sequenceId, ["name"]: val.name });
}
exports.serializeFolderMini = serializeFolderMini;
function deserializeWebLinkPathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebLinkPathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"WebLinkPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"WebLinkPathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"WebLinkPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"WebLinkPathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeWebLinkPathCollectionField = deserializeWebLinkPathCollectionField;
function serializeWebLinkPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeFolderMini(item);
        }) };
}
exports.serializeWebLinkPathCollectionField = serializeWebLinkPathCollectionField;
function deserializeTrashWebLinkRestoredPathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashWebLinkRestoredPathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"TrashWebLinkRestoredPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TrashWebLinkRestoredPathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TrashWebLinkRestoredPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TrashWebLinkRestoredPathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTrashWebLinkRestoredPathCollectionField = deserializeTrashWebLinkRestoredPathCollectionField;
function serializeTrashWebLinkRestoredPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeFolderMini(item);
        }) };
}
exports.serializeTrashWebLinkRestoredPathCollectionField = serializeTrashWebLinkRestoredPathCollectionField;
function deserializeTrashFolderRestoredPathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFolderRestoredPathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"TrashFolderRestoredPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TrashFolderRestoredPathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TrashFolderRestoredPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TrashFolderRestoredPathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTrashFolderRestoredPathCollectionField = deserializeTrashFolderRestoredPathCollectionField;
function serializeTrashFolderRestoredPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeFolderMini(item);
        }) };
}
exports.serializeTrashFolderRestoredPathCollectionField = serializeTrashFolderRestoredPathCollectionField;
function deserializeTrashFileRestoredPathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFileRestoredPathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"TrashFileRestoredPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TrashFileRestoredPathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TrashFileRestoredPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TrashFileRestoredPathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTrashFileRestoredPathCollectionField = deserializeTrashFileRestoredPathCollectionField;
function serializeTrashFileRestoredPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeFolderMini(item);
        }) };
}
exports.serializeTrashFileRestoredPathCollectionField = serializeTrashFileRestoredPathCollectionField;
function deserializeFolderPathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderPathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"FolderPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"FolderPathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"FolderPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FolderPathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeFolderPathCollectionField = deserializeFolderPathCollectionField;
function serializeFolderPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeFolderMini(item);
        }) };
}
exports.serializeFolderPathCollectionField = serializeFolderPathCollectionField;
function deserializeFilePathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FilePathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"FilePathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"FilePathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"FilePathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FilePathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeFolderMini(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeFilePathCollectionField = deserializeFilePathCollectionField;
function serializeFilePathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeFolderMini(item);
        }) };
}
exports.serializeFilePathCollectionField = serializeFilePathCollectionField;
function deserializeFolderLockLockedOperationsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderLockLockedOperationsField\"";
    }
    if (val.move === void 0) {
        throw "Expecting \"move\" of type \"FolderLockLockedOperationsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.move, "boolean")) {
        throw "Expecting boolean for \"move\" of type \"FolderLockLockedOperationsField\"";
    }
    const move = val.move;
    if (val.delete === void 0) {
        throw "Expecting \"delete\" of type \"FolderLockLockedOperationsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.delete, "boolean")) {
        throw "Expecting boolean for \"delete\" of type \"FolderLockLockedOperationsField\"";
    }
    const _delete = val.delete;
    return { move: move, delete: _delete };
}
exports.deserializeFolderLockLockedOperationsField = deserializeFolderLockLockedOperationsField;
function serializeFolderLockLockedOperationsField(val) {
    return { ["move"]: val.move, ["delete"]: val.delete };
}
exports.serializeFolderLockLockedOperationsField = serializeFolderLockLockedOperationsField;
function deserializeGroupsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupsOrderFieldDirectionField = deserializeGroupsOrderFieldDirectionField;
function serializeGroupsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeGroupsOrderFieldDirectionField = serializeGroupsOrderFieldDirectionField;
function deserializeGroupsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"GroupsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeGroupsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeGroupsOrderField = deserializeGroupsOrderField;
function serializeGroupsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeGroupsOrderFieldDirectionField(val.direction) };
}
exports.serializeGroupsOrderField = serializeGroupsOrderField;
function deserializeGroupBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupBaseTypeField\"";
    }
    if (val === "group") {
        return "group";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupBaseTypeField = deserializeGroupBaseTypeField;
function serializeGroupBaseTypeField(val) {
    return val;
}
exports.serializeGroupBaseTypeField = serializeGroupBaseTypeField;
function deserializeGroupBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"GroupBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeGroupBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeGroupBase = deserializeGroupBase;
function serializeGroupBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeGroupBaseTypeField(val.type) };
}
exports.serializeGroupBase = serializeGroupBase;
function deserializeGroupFullInvitabilityLevelField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupFullInvitabilityLevelField\"";
    }
    if (val === "admins_only") {
        return "admins_only";
    }
    if (val === "admins_and_members") {
        return "admins_and_members";
    }
    if (val === "all_managed_users") {
        return "all_managed_users";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupFullInvitabilityLevelField = deserializeGroupFullInvitabilityLevelField;
function serializeGroupFullInvitabilityLevelField(val) {
    return val;
}
exports.serializeGroupFullInvitabilityLevelField = serializeGroupFullInvitabilityLevelField;
function deserializeGroupFullMemberViewabilityLevelField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupFullMemberViewabilityLevelField\"";
    }
    if (val === "admins_only") {
        return "admins_only";
    }
    if (val === "admins_and_members") {
        return "admins_and_members";
    }
    if (val === "all_managed_users") {
        return "all_managed_users";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupFullMemberViewabilityLevelField = deserializeGroupFullMemberViewabilityLevelField;
function serializeGroupFullMemberViewabilityLevelField(val) {
    return val;
}
exports.serializeGroupFullMemberViewabilityLevelField = serializeGroupFullMemberViewabilityLevelField;
function deserializeGroupFullPermissionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupFullPermissionsField\"";
    }
    if (!(val.can_invite_as_collaborator === void 0) && !(0, json_js_1.isJson)(val.can_invite_as_collaborator, "boolean")) {
        throw "Expecting boolean for \"can_invite_as_collaborator\" of type \"GroupFullPermissionsField\"";
    }
    const canInviteAsCollaborator = (0, json_js_1.isJson)(val.can_invite_as_collaborator, "boolean") ? val.can_invite_as_collaborator : void 0;
    return { canInviteAsCollaborator: canInviteAsCollaborator };
}
exports.deserializeGroupFullPermissionsField = deserializeGroupFullPermissionsField;
function serializeGroupFullPermissionsField(val) {
    return { ["can_invite_as_collaborator"]: val.canInviteAsCollaborator };
}
exports.serializeGroupFullPermissionsField = serializeGroupFullPermissionsField;
function deserializeGroupMiniGroupTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMiniGroupTypeField\"";
    }
    if (val === "managed_group") {
        return "managed_group";
    }
    if (val === "all_users_group") {
        return "all_users_group";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupMiniGroupTypeField = deserializeGroupMiniGroupTypeField;
function serializeGroupMiniGroupTypeField(val) {
    return val;
}
exports.serializeGroupMiniGroupTypeField = serializeGroupMiniGroupTypeField;
function deserializeGroupMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupMini\"";
    }
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"GroupMini\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const groupType = val.group_type === void 0 ? void 0 : deserializeGroupMiniGroupTypeField(val.group_type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"GroupMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeGroupBaseTypeField(val.type);
    return { name: name, groupType: groupType, id: id, type: type };
}
exports.deserializeGroupMini = deserializeGroupMini;
function serializeGroupMini(val) {
    const base = serializeGroupBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"GroupMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["group_type"]: val.groupType === void 0 ? void 0 : serializeGroupMiniGroupTypeField(val.groupType) });
}
exports.serializeGroupMini = serializeGroupMini;
function deserializeGroups(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Groups\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Groups\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Groups\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"Groups\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"Groups\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeGroupsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Groups\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeGroupMini(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeGroups = deserializeGroups;
function serializeGroups(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeGroupsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeGroupMini(item);
        }) };
}
exports.serializeGroups = serializeGroups;
function deserializeGroup(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Group\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Group\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"Group\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"Group\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const groupType = val.group_type === void 0 ? void 0 : deserializeGroupMiniGroupTypeField(val.group_type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Group\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeGroupBaseTypeField(val.type);
    return { createdAt: createdAt, modifiedAt: modifiedAt, name: name, groupType: groupType, id: id, type: type };
}
exports.deserializeGroup = deserializeGroup;
function serializeGroup(val) {
    const base = serializeGroupMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Group\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt });
}
exports.serializeGroup = serializeGroup;
function deserializeGroupFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupFull\"";
    }
    if (!(val.provenance === void 0) && !(0, json_js_1.isJson)(val.provenance, "string")) {
        throw "Expecting string for \"provenance\" of type \"GroupFull\"";
    }
    const provenance = (0, json_js_1.isJson)(val.provenance, "string") ? val.provenance : void 0;
    if (!(val.external_sync_identifier === void 0) && !(0, json_js_1.isJson)(val.external_sync_identifier, "string")) {
        throw "Expecting string for \"external_sync_identifier\" of type \"GroupFull\"";
    }
    const externalSyncIdentifier = (0, json_js_1.isJson)(val.external_sync_identifier, "string") ? val.external_sync_identifier : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"GroupFull\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const invitabilityLevel = val.invitability_level === void 0 ? void 0 : deserializeGroupFullInvitabilityLevelField(val.invitability_level);
    const memberViewabilityLevel = val.member_viewability_level === void 0 ? void 0 : deserializeGroupFullMemberViewabilityLevelField(val.member_viewability_level);
    const permissions = val.permissions === void 0 ? void 0 : deserializeGroupFullPermissionsField(val.permissions);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"GroupFull\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"GroupFull\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"GroupFull\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const groupType = val.group_type === void 0 ? void 0 : deserializeGroupMiniGroupTypeField(val.group_type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"GroupFull\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeGroupBaseTypeField(val.type);
    return { provenance: provenance, externalSyncIdentifier: externalSyncIdentifier, description: description, invitabilityLevel: invitabilityLevel, memberViewabilityLevel: memberViewabilityLevel, permissions: permissions, createdAt: createdAt, modifiedAt: modifiedAt, name: name, groupType: groupType, id: id, type: type };
}
exports.deserializeGroupFull = deserializeGroupFull;
function serializeGroupFull(val) {
    const base = serializeGroup(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"GroupFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["provenance"]: val.provenance, ["external_sync_identifier"]: val.externalSyncIdentifier, ["description"]: val.description, ["invitability_level"]: val.invitabilityLevel === void 0 ? void 0 : serializeGroupFullInvitabilityLevelField(val.invitabilityLevel), ["member_viewability_level"]: val.memberViewabilityLevel === void 0 ? void 0 : serializeGroupFullMemberViewabilityLevelField(val.memberViewabilityLevel), ["permissions"]: val.permissions === void 0 ? void 0 : serializeGroupFullPermissionsField(val.permissions) });
}
exports.serializeGroupFull = serializeGroupFull;
function deserializeGroupMembershipTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMembershipTypeField\"";
    }
    if (val === "group_membership") {
        return "group_membership";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupMembershipTypeField = deserializeGroupMembershipTypeField;
function serializeGroupMembershipTypeField(val) {
    return val;
}
exports.serializeGroupMembershipTypeField = serializeGroupMembershipTypeField;
function deserializeGroupMembershipRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMembershipRoleField\"";
    }
    if (val === "member") {
        return "member";
    }
    if (val === "admin") {
        return "admin";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupMembershipRoleField = deserializeGroupMembershipRoleField;
function serializeGroupMembershipRoleField(val) {
    return val;
}
exports.serializeGroupMembershipRoleField = serializeGroupMembershipRoleField;
function deserializeGroupMembershipsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"GroupMembershipsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeGroupMembershipsOrderFieldDirectionField = deserializeGroupMembershipsOrderFieldDirectionField;
function serializeGroupMembershipsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeGroupMembershipsOrderFieldDirectionField = serializeGroupMembershipsOrderFieldDirectionField;
function deserializeGroupMembershipsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupMembershipsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"GroupMembershipsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeGroupMembershipsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeGroupMembershipsOrderField = deserializeGroupMembershipsOrderField;
function serializeGroupMembershipsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeGroupMembershipsOrderFieldDirectionField(val.direction) };
}
exports.serializeGroupMembershipsOrderField = serializeGroupMembershipsOrderField;
function deserializeInviteTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"InviteTypeField\"";
    }
    if (val === "invite") {
        return "invite";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeInviteTypeField = deserializeInviteTypeField;
function serializeInviteTypeField(val) {
    return val;
}
exports.serializeInviteTypeField = serializeInviteTypeField;
function deserializeInviteInvitedToFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"InviteInvitedToFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeInviteInvitedToFieldTypeField = deserializeInviteInvitedToFieldTypeField;
function serializeInviteInvitedToFieldTypeField(val) {
    return val;
}
exports.serializeInviteInvitedToFieldTypeField = serializeInviteInvitedToFieldTypeField;
function deserializeInviteInvitedToField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"InviteInvitedToField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"InviteInvitedToField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeInviteInvitedToFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"InviteInvitedToField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.deserializeInviteInvitedToField = deserializeInviteInvitedToField;
function serializeInviteInvitedToField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeInviteInvitedToFieldTypeField(val.type), ["name"]: val.name };
}
exports.serializeInviteInvitedToField = serializeInviteInvitedToField;
function deserializeItemsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ItemsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeItemsOrderFieldDirectionField = deserializeItemsOrderFieldDirectionField;
function serializeItemsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeItemsOrderFieldDirectionField = serializeItemsOrderFieldDirectionField;
function deserializeItemsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ItemsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"ItemsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeItemsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeItemsOrderField = deserializeItemsOrderField;
function serializeItemsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeItemsOrderFieldDirectionField(val.direction) };
}
exports.serializeItemsOrderField = serializeItemsOrderField;
function deserializeLegalHoldPolicyStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"LegalHoldPolicyStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "applying") {
        return "applying";
    }
    if (val === "releasing") {
        return "releasing";
    }
    if (val === "released") {
        return "released";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeLegalHoldPolicyStatusField = deserializeLegalHoldPolicyStatusField;
function serializeLegalHoldPolicyStatusField(val) {
    return val;
}
exports.serializeLegalHoldPolicyStatusField = serializeLegalHoldPolicyStatusField;
function deserializeLegalHoldPolicyAssignmentCountsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyAssignmentCountsField\"";
    }
    if (!(val.user === void 0) && !(0, json_js_1.isJson)(val.user, "number")) {
        throw "Expecting number for \"user\" of type \"LegalHoldPolicyAssignmentCountsField\"";
    }
    const user = (0, json_js_1.isJson)(val.user, "number") ? val.user : void 0;
    if (!(val.folder === void 0) && !(0, json_js_1.isJson)(val.folder, "number")) {
        throw "Expecting number for \"folder\" of type \"LegalHoldPolicyAssignmentCountsField\"";
    }
    const folder = (0, json_js_1.isJson)(val.folder, "number") ? val.folder : void 0;
    if (!(val.file === void 0) && !(0, json_js_1.isJson)(val.file, "number")) {
        throw "Expecting number for \"file\" of type \"LegalHoldPolicyAssignmentCountsField\"";
    }
    const file = (0, json_js_1.isJson)(val.file, "number") ? val.file : void 0;
    if (!(val.file_version === void 0) && !(0, json_js_1.isJson)(val.file_version, "number")) {
        throw "Expecting number for \"file_version\" of type \"LegalHoldPolicyAssignmentCountsField\"";
    }
    const fileVersion = (0, json_js_1.isJson)(val.file_version, "number") ? val.file_version : void 0;
    return { user: user, folder: folder, file: file, fileVersion: fileVersion };
}
exports.deserializeLegalHoldPolicyAssignmentCountsField = deserializeLegalHoldPolicyAssignmentCountsField;
function serializeLegalHoldPolicyAssignmentCountsField(val) {
    return { ["user"]: val.user, ["folder"]: val.folder, ["file"]: val.file, ["file_version"]: val.fileVersion };
}
exports.serializeLegalHoldPolicyAssignmentCountsField = serializeLegalHoldPolicyAssignmentCountsField;
function deserializeLegalHoldPolicyMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"LegalHoldPolicyMiniTypeField\"";
    }
    if (val === "legal_hold_policy") {
        return "legal_hold_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeLegalHoldPolicyMiniTypeField = deserializeLegalHoldPolicyMiniTypeField;
function serializeLegalHoldPolicyMiniTypeField(val) {
    return val;
}
exports.serializeLegalHoldPolicyMiniTypeField = serializeLegalHoldPolicyMiniTypeField;
function deserializeLegalHoldPolicyMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyMini\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"LegalHoldPolicyMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeLegalHoldPolicyMiniTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeLegalHoldPolicyMini = deserializeLegalHoldPolicyMini;
function serializeLegalHoldPolicyMini(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeLegalHoldPolicyMiniTypeField(val.type) };
}
exports.serializeLegalHoldPolicyMini = serializeLegalHoldPolicyMini;
function deserializeLegalHoldPolicyAssignmentBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"LegalHoldPolicyAssignmentBaseTypeField\"";
    }
    if (val === "legal_hold_policy_assignment") {
        return "legal_hold_policy_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeLegalHoldPolicyAssignmentBaseTypeField = deserializeLegalHoldPolicyAssignmentBaseTypeField;
function serializeLegalHoldPolicyAssignmentBaseTypeField(val) {
    return val;
}
exports.serializeLegalHoldPolicyAssignmentBaseTypeField = serializeLegalHoldPolicyAssignmentBaseTypeField;
function deserializeLegalHoldPolicyAssignmentBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyAssignmentBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"LegalHoldPolicyAssignmentBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeLegalHoldPolicyAssignmentBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeLegalHoldPolicyAssignmentBase = deserializeLegalHoldPolicyAssignmentBase;
function serializeLegalHoldPolicyAssignmentBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeLegalHoldPolicyAssignmentBaseTypeField(val.type) };
}
exports.serializeLegalHoldPolicyAssignmentBase = serializeLegalHoldPolicyAssignmentBase;
function deserializeLegalHoldPolicyAssignments(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyAssignments\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"LegalHoldPolicyAssignments\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"LegalHoldPolicyAssignments\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"LegalHoldPolicyAssignments\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"LegalHoldPolicyAssignments\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeLegalHoldPolicyAssignmentBase(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeLegalHoldPolicyAssignments = deserializeLegalHoldPolicyAssignments;
function serializeLegalHoldPolicyAssignments(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeLegalHoldPolicyAssignmentBase(item);
        }) };
}
exports.serializeLegalHoldPolicyAssignments = serializeLegalHoldPolicyAssignments;
function deserializeMetadata(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Metadata\"";
    }
    return {};
}
exports.deserializeMetadata = deserializeMetadata;
function serializeMetadata(val) {
    return {};
}
exports.serializeMetadata = serializeMetadata;
function deserializeMetadatas(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Metadatas\"";
    }
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Metadatas\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeMetadata(itm);
    }) : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Metadatas\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    return { entries: entries, limit: limit };
}
exports.deserializeMetadatas = deserializeMetadatas;
function serializeMetadatas(val) {
    return { ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeMetadata(item);
        }), ["limit"]: val.limit };
}
exports.serializeMetadatas = serializeMetadatas;
function deserializeMetadataFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFull\"";
    }
    if (!(val.$canEdit === void 0) && !(0, json_js_1.isJson)(val.$canEdit, "boolean")) {
        throw "Expecting boolean for \"$canEdit\" of type \"MetadataFull\"";
    }
    const canEdit = (0, json_js_1.isJson)(val.$canEdit, "boolean") ? val.$canEdit : void 0;
    if (!(val.$id === void 0) && !(0, json_js_1.isJson)(val.$id, "string")) {
        throw "Expecting string for \"$id\" of type \"MetadataFull\"";
    }
    const id = (0, json_js_1.isJson)(val.$id, "string") ? val.$id : void 0;
    if (!(val.$type === void 0) && !(0, json_js_1.isJson)(val.$type, "string")) {
        throw "Expecting string for \"$type\" of type \"MetadataFull\"";
    }
    const type = (0, json_js_1.isJson)(val.$type, "string") ? val.$type : void 0;
    if (!(val.$typeVersion === void 0) && !(0, json_js_1.isJson)(val.$typeVersion, "number")) {
        throw "Expecting number for \"$typeVersion\" of type \"MetadataFull\"";
    }
    const typeVersion = (0, json_js_1.isJson)(val.$typeVersion, "number") ? val.$typeVersion : void 0;
    return { canEdit: canEdit, id: id, type: type, typeVersion: typeVersion };
}
exports.deserializeMetadataFull = deserializeMetadataFull;
function serializeMetadataFull(val) {
    const base = serializeMetadata(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"MetadataFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["$canEdit"]: val.canEdit, ["$id"]: val.id, ["$type"]: val.type, ["$typeVersion"]: val.typeVersion });
}
exports.serializeMetadataFull = serializeMetadataFull;
function deserializeMetadataBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataBase\"";
    }
    if (!(val.$parent === void 0) && !(0, json_js_1.isJson)(val.$parent, "string")) {
        throw "Expecting string for \"$parent\" of type \"MetadataBase\"";
    }
    const parent = (0, json_js_1.isJson)(val.$parent, "string") ? val.$parent : void 0;
    if (!(val.$template === void 0) && !(0, json_js_1.isJson)(val.$template, "string")) {
        throw "Expecting string for \"$template\" of type \"MetadataBase\"";
    }
    const template = (0, json_js_1.isJson)(val.$template, "string") ? val.$template : void 0;
    if (!(val.$scope === void 0) && !(0, json_js_1.isJson)(val.$scope, "string")) {
        throw "Expecting string for \"$scope\" of type \"MetadataBase\"";
    }
    const scope = (0, json_js_1.isJson)(val.$scope, "string") ? val.$scope : void 0;
    if (!(val.$version === void 0) && !(0, json_js_1.isJson)(val.$version, "number")) {
        throw "Expecting number for \"$version\" of type \"MetadataBase\"";
    }
    const version = (0, json_js_1.isJson)(val.$version, "number") ? val.$version : void 0;
    return { parent: parent, template: template, scope: scope, version: version };
}
exports.deserializeMetadataBase = deserializeMetadataBase;
function serializeMetadataBase(val) {
    return { ["$parent"]: val.parent, ["$template"]: val.template, ["$scope"]: val.scope, ["$version"]: val.version };
}
exports.serializeMetadataBase = serializeMetadataBase;
function deserializeMetadataCascadePolicyTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyTypeField\"";
    }
    if (val === "metadata_cascade_policy") {
        return "metadata_cascade_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataCascadePolicyTypeField = deserializeMetadataCascadePolicyTypeField;
function serializeMetadataCascadePolicyTypeField(val) {
    return val;
}
exports.serializeMetadataCascadePolicyTypeField = serializeMetadataCascadePolicyTypeField;
function deserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyOwnerEnterpriseFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = deserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField;
function serializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val) {
    return val;
}
exports.serializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField = serializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField;
function deserializeMetadataCascadePolicyOwnerEnterpriseField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataCascadePolicyOwnerEnterpriseField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"MetadataCascadePolicyOwnerEnterpriseField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.deserializeMetadataCascadePolicyOwnerEnterpriseField = deserializeMetadataCascadePolicyOwnerEnterpriseField;
function serializeMetadataCascadePolicyOwnerEnterpriseField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeMetadataCascadePolicyOwnerEnterpriseFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeMetadataCascadePolicyOwnerEnterpriseField = serializeMetadataCascadePolicyOwnerEnterpriseField;
function deserializeMetadataCascadePolicyParentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyParentFieldTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataCascadePolicyParentFieldTypeField = deserializeMetadataCascadePolicyParentFieldTypeField;
function serializeMetadataCascadePolicyParentFieldTypeField(val) {
    return val;
}
exports.serializeMetadataCascadePolicyParentFieldTypeField = serializeMetadataCascadePolicyParentFieldTypeField;
function deserializeMetadataCascadePolicyParentField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataCascadePolicyParentField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeMetadataCascadePolicyParentFieldTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"MetadataCascadePolicyParentField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.deserializeMetadataCascadePolicyParentField = deserializeMetadataCascadePolicyParentField;
function serializeMetadataCascadePolicyParentField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeMetadataCascadePolicyParentFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeMetadataCascadePolicyParentField = serializeMetadataCascadePolicyParentField;
function deserializeMetadataCascadePolicyScopeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataCascadePolicyScopeField\"";
    }
    if (val === "global") {
        return "global";
    }
    if (val === "enterprise_*") {
        return "enterprise_*";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataCascadePolicyScopeField = deserializeMetadataCascadePolicyScopeField;
function serializeMetadataCascadePolicyScopeField(val) {
    return val;
}
exports.serializeMetadataCascadePolicyScopeField = serializeMetadataCascadePolicyScopeField;
function deserializeMetadataCascadePolicy(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataCascadePolicy\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"MetadataCascadePolicy\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeMetadataCascadePolicyTypeField(val.type);
    const ownerEnterprise = val.owner_enterprise === void 0 ? void 0 : deserializeMetadataCascadePolicyOwnerEnterpriseField(val.owner_enterprise);
    const parent = val.parent === void 0 ? void 0 : deserializeMetadataCascadePolicyParentField(val.parent);
    const scope = val.scope === void 0 ? void 0 : deserializeMetadataCascadePolicyScopeField(val.scope);
    if (!(val.templateKey === void 0) && !(0, json_js_1.isJson)(val.templateKey, "string")) {
        throw "Expecting string for \"templateKey\" of type \"MetadataCascadePolicy\"";
    }
    const templateKey = (0, json_js_1.isJson)(val.templateKey, "string") ? val.templateKey : void 0;
    return { id: id, type: type, ownerEnterprise: ownerEnterprise, parent: parent, scope: scope, templateKey: templateKey };
}
exports.deserializeMetadataCascadePolicy = deserializeMetadataCascadePolicy;
function serializeMetadataCascadePolicy(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeMetadataCascadePolicyTypeField(val.type), ["owner_enterprise"]: val.ownerEnterprise === void 0 ? void 0 : serializeMetadataCascadePolicyOwnerEnterpriseField(val.ownerEnterprise), ["parent"]: val.parent === void 0 ? void 0 : serializeMetadataCascadePolicyParentField(val.parent), ["scope"]: val.scope === void 0 ? void 0 : serializeMetadataCascadePolicyScopeField(val.scope), ["templateKey"]: val.templateKey };
}
exports.serializeMetadataCascadePolicy = serializeMetadataCascadePolicy;
function deserializeMetadataCascadePolicies(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataCascadePolicies\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"MetadataCascadePolicies\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"MetadataCascadePolicies\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"MetadataCascadePolicies\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"MetadataCascadePolicies\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeMetadataCascadePolicy(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeMetadataCascadePolicies = deserializeMetadataCascadePolicies;
function serializeMetadataCascadePolicies(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeMetadataCascadePolicy(item);
        }) };
}
exports.serializeMetadataCascadePolicies = serializeMetadataCascadePolicies;
function deserializeMetadataQueryIndexStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataQueryIndexStatusField\"";
    }
    if (val === "building") {
        return "building";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "disabled") {
        return "disabled";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataQueryIndexStatusField = deserializeMetadataQueryIndexStatusField;
function serializeMetadataQueryIndexStatusField(val) {
    return val;
}
exports.serializeMetadataQueryIndexStatusField = serializeMetadataQueryIndexStatusField;
function deserializeMetadataQueryIndexFieldsFieldSortDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataQueryIndexFieldsFieldSortDirectionField\"";
    }
    if (val === "asc") {
        return "asc";
    }
    if (val === "desc") {
        return "desc";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataQueryIndexFieldsFieldSortDirectionField = deserializeMetadataQueryIndexFieldsFieldSortDirectionField;
function serializeMetadataQueryIndexFieldsFieldSortDirectionField(val) {
    return val;
}
exports.serializeMetadataQueryIndexFieldsFieldSortDirectionField = serializeMetadataQueryIndexFieldsFieldSortDirectionField;
function deserializeMetadataQueryIndexFieldsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQueryIndexFieldsField\"";
    }
    if (!(val.key === void 0) && !(0, json_js_1.isJson)(val.key, "string")) {
        throw "Expecting string for \"key\" of type \"MetadataQueryIndexFieldsField\"";
    }
    const key = (0, json_js_1.isJson)(val.key, "string") ? val.key : void 0;
    const sortDirection = val.sort_direction === void 0 ? void 0 : deserializeMetadataQueryIndexFieldsFieldSortDirectionField(val.sort_direction);
    return { key: key, sortDirection: sortDirection };
}
exports.deserializeMetadataQueryIndexFieldsField = deserializeMetadataQueryIndexFieldsField;
function serializeMetadataQueryIndexFieldsField(val) {
    return { ["key"]: val.key, ["sort_direction"]: val.sortDirection === void 0 ? void 0 : serializeMetadataQueryIndexFieldsFieldSortDirectionField(val.sortDirection) };
}
exports.serializeMetadataQueryIndexFieldsField = serializeMetadataQueryIndexFieldsField;
function deserializeMetadataQueryIndex(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQueryIndex\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"MetadataQueryIndex\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"MetadataQueryIndex\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"MetadataQueryIndex\"";
    }
    const type = val.type;
    if (val.status === void 0) {
        throw "Expecting \"status\" of type \"MetadataQueryIndex\" to be defined";
    }
    const status = deserializeMetadataQueryIndexStatusField(val.status);
    if (!(val.fields === void 0) && !(0, json_js_1.isJson)(val.fields, "array")) {
        throw "Expecting array for \"fields\" of type \"MetadataQueryIndex\"";
    }
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return deserializeMetadataQueryIndexFieldsField(itm);
    }) : void 0;
    return { id: id, type: type, status: status, fields: fields };
}
exports.deserializeMetadataQueryIndex = deserializeMetadataQueryIndex;
function serializeMetadataQueryIndex(val) {
    return { ["id"]: val.id, ["type"]: val.type, ["status"]: serializeMetadataQueryIndexStatusField(val.status), ["fields"]: val.fields === void 0 ? void 0 : val.fields.map(function (item) {
            return serializeMetadataQueryIndexFieldsField(item);
        }) };
}
exports.serializeMetadataQueryIndex = serializeMetadataQueryIndex;
function deserializeMetadataQueryIndices(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQueryIndices\"";
    }
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"MetadataQueryIndices\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeMetadataQueryIndex(itm);
    }) : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"MetadataQueryIndices\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "string")) {
        throw "Expecting string for \"next_marker\" of type \"MetadataQueryIndices\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.deserializeMetadataQueryIndices = deserializeMetadataQueryIndices;
function serializeMetadataQueryIndices(val) {
    return { ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeMetadataQueryIndex(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.serializeMetadataQueryIndices = serializeMetadataQueryIndices;
function deserializeMetadataTemplateTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataTemplateTypeField\"";
    }
    if (val === "metadata_template") {
        return "metadata_template";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataTemplateTypeField = deserializeMetadataTemplateTypeField;
function serializeMetadataTemplateTypeField(val) {
    return val;
}
exports.serializeMetadataTemplateTypeField = serializeMetadataTemplateTypeField;
function deserializeMetadataTemplateFieldsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataTemplateFieldsFieldTypeField\"";
    }
    if (val === "string") {
        return "string";
    }
    if (val === "float") {
        return "float";
    }
    if (val === "date") {
        return "date";
    }
    if (val === "enum") {
        return "enum";
    }
    if (val === "multiSelect") {
        return "multiSelect";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataTemplateFieldsFieldTypeField = deserializeMetadataTemplateFieldsFieldTypeField;
function serializeMetadataTemplateFieldsFieldTypeField(val) {
    return val;
}
exports.serializeMetadataTemplateFieldsFieldTypeField = serializeMetadataTemplateFieldsFieldTypeField;
function deserializeMetadataTemplateFieldsFieldOptionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataTemplateFieldsFieldOptionsField\"";
    }
    if (val.key === void 0) {
        throw "Expecting \"key\" of type \"MetadataTemplateFieldsFieldOptionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.key, "string")) {
        throw "Expecting string for \"key\" of type \"MetadataTemplateFieldsFieldOptionsField\"";
    }
    const key = val.key;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"MetadataTemplateFieldsFieldOptionsField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { key: key, id: id };
}
exports.deserializeMetadataTemplateFieldsFieldOptionsField = deserializeMetadataTemplateFieldsFieldOptionsField;
function serializeMetadataTemplateFieldsFieldOptionsField(val) {
    return { ["key"]: val.key, ["id"]: val.id };
}
exports.serializeMetadataTemplateFieldsFieldOptionsField = serializeMetadataTemplateFieldsFieldOptionsField;
function deserializeMetadataTemplateFieldsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataTemplateFieldsField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"MetadataTemplateFieldsField\" to be defined";
    }
    const type = deserializeMetadataTemplateFieldsFieldTypeField(val.type);
    if (val.key === void 0) {
        throw "Expecting \"key\" of type \"MetadataTemplateFieldsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.key, "string")) {
        throw "Expecting string for \"key\" of type \"MetadataTemplateFieldsField\"";
    }
    const key = val.key;
    if (val.displayName === void 0) {
        throw "Expecting \"displayName\" of type \"MetadataTemplateFieldsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.displayName, "string")) {
        throw "Expecting string for \"displayName\" of type \"MetadataTemplateFieldsField\"";
    }
    const displayName = val.displayName;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"MetadataTemplateFieldsField\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (!(val.hidden === void 0) && !(0, json_js_1.isJson)(val.hidden, "boolean")) {
        throw "Expecting boolean for \"hidden\" of type \"MetadataTemplateFieldsField\"";
    }
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    if (!(val.options === void 0) && !(0, json_js_1.isJson)(val.options, "array")) {
        throw "Expecting array for \"options\" of type \"MetadataTemplateFieldsField\"";
    }
    const options = (0, json_js_1.isJson)(val.options, "array") ? val.options.map(function (itm) {
        return deserializeMetadataTemplateFieldsFieldOptionsField(itm);
    }) : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"MetadataTemplateFieldsField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, key: key, displayName: displayName, description: description, hidden: hidden, options: options, id: id };
}
exports.deserializeMetadataTemplateFieldsField = deserializeMetadataTemplateFieldsField;
function serializeMetadataTemplateFieldsField(val) {
    return { ["type"]: serializeMetadataTemplateFieldsFieldTypeField(val.type), ["key"]: val.key, ["displayName"]: val.displayName, ["description"]: val.description, ["hidden"]: val.hidden, ["options"]: val.options === void 0 ? void 0 : val.options.map(function (item) {
            return serializeMetadataTemplateFieldsFieldOptionsField(item);
        }), ["id"]: val.id };
}
exports.serializeMetadataTemplateFieldsField = serializeMetadataTemplateFieldsField;
function deserializeMetadataTemplate(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataTemplate\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"MetadataTemplate\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"MetadataTemplate\" to be defined";
    }
    const type = deserializeMetadataTemplateTypeField(val.type);
    if (!(val.scope === void 0) && !(0, json_js_1.isJson)(val.scope, "string")) {
        throw "Expecting string for \"scope\" of type \"MetadataTemplate\"";
    }
    const scope = (0, json_js_1.isJson)(val.scope, "string") ? val.scope : void 0;
    if (!(val.templateKey === void 0) && !(0, json_js_1.isJson)(val.templateKey, "string")) {
        throw "Expecting string for \"templateKey\" of type \"MetadataTemplate\"";
    }
    const templateKey = (0, json_js_1.isJson)(val.templateKey, "string") ? val.templateKey : void 0;
    if (!(val.displayName === void 0) && !(0, json_js_1.isJson)(val.displayName, "string")) {
        throw "Expecting string for \"displayName\" of type \"MetadataTemplate\"";
    }
    const displayName = (0, json_js_1.isJson)(val.displayName, "string") ? val.displayName : void 0;
    if (!(val.hidden === void 0) && !(0, json_js_1.isJson)(val.hidden, "boolean")) {
        throw "Expecting boolean for \"hidden\" of type \"MetadataTemplate\"";
    }
    const hidden = (0, json_js_1.isJson)(val.hidden, "boolean") ? val.hidden : void 0;
    if (!(val.fields === void 0) && !(0, json_js_1.isJson)(val.fields, "array")) {
        throw "Expecting array for \"fields\" of type \"MetadataTemplate\"";
    }
    const fields = (0, json_js_1.isJson)(val.fields, "array") ? val.fields.map(function (itm) {
        return deserializeMetadataTemplateFieldsField(itm);
    }) : void 0;
    if (!(val.copyInstanceOnItemCopy === void 0) && !(0, json_js_1.isJson)(val.copyInstanceOnItemCopy, "boolean")) {
        throw "Expecting boolean for \"copyInstanceOnItemCopy\" of type \"MetadataTemplate\"";
    }
    const copyInstanceOnItemCopy = (0, json_js_1.isJson)(val.copyInstanceOnItemCopy, "boolean") ? val.copyInstanceOnItemCopy : void 0;
    return { id: id, type: type, scope: scope, templateKey: templateKey, displayName: displayName, hidden: hidden, fields: fields, copyInstanceOnItemCopy: copyInstanceOnItemCopy };
}
exports.deserializeMetadataTemplate = deserializeMetadataTemplate;
function serializeMetadataTemplate(val) {
    return { ["id"]: val.id, ["type"]: serializeMetadataTemplateTypeField(val.type), ["scope"]: val.scope, ["templateKey"]: val.templateKey, ["displayName"]: val.displayName, ["hidden"]: val.hidden, ["fields"]: val.fields === void 0 ? void 0 : val.fields.map(function (item) {
            return serializeMetadataTemplateFieldsField(item);
        }), ["copyInstanceOnItemCopy"]: val.copyInstanceOnItemCopy };
}
exports.serializeMetadataTemplate = serializeMetadataTemplate;
function deserializeMetadataTemplates(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataTemplates\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"MetadataTemplates\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"MetadataTemplates\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"MetadataTemplates\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"MetadataTemplates\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeMetadataTemplate(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeMetadataTemplates = deserializeMetadataTemplates;
function serializeMetadataTemplates(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeMetadataTemplate(item);
        }) };
}
exports.serializeMetadataTemplates = serializeMetadataTemplates;
function deserializeRealtimeServer(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RealtimeServer\"";
    }
    if (!(val.type === void 0) && !(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"RealtimeServer\"";
    }
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"RealtimeServer\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    if (!(val.ttl === void 0) && !(0, json_js_1.isJson)(val.ttl, "number")) {
        throw "Expecting number for \"ttl\" of type \"RealtimeServer\"";
    }
    const ttl = (0, json_js_1.isJson)(val.ttl, "number") ? val.ttl : void 0;
    if (!(val.max_retries === void 0) && !(0, json_js_1.isJson)(val.max_retries, "number")) {
        throw "Expecting number for \"max_retries\" of type \"RealtimeServer\"";
    }
    const maxRetries = (0, json_js_1.isJson)(val.max_retries, "number") ? val.max_retries : void 0;
    if (!(val.retry_timeout === void 0) && !(0, json_js_1.isJson)(val.retry_timeout, "number")) {
        throw "Expecting number for \"retry_timeout\" of type \"RealtimeServer\"";
    }
    const retryTimeout = (0, json_js_1.isJson)(val.retry_timeout, "number") ? val.retry_timeout : void 0;
    return { type: type, url: url, ttl: ttl, maxRetries: maxRetries, retryTimeout: retryTimeout };
}
exports.deserializeRealtimeServer = deserializeRealtimeServer;
function serializeRealtimeServer(val) {
    return { ["type"]: val.type, ["url"]: val.url, ["ttl"]: val.ttl, ["max_retries"]: val.maxRetries, ["retry_timeout"]: val.retryTimeout };
}
exports.serializeRealtimeServer = serializeRealtimeServer;
function deserializeRealtimeServers(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RealtimeServers\"";
    }
    if (!(val.chunk_size === void 0) && !(0, json_js_1.isJson)(val.chunk_size, "number")) {
        throw "Expecting number for \"chunk_size\" of type \"RealtimeServers\"";
    }
    const chunkSize = (0, json_js_1.isJson)(val.chunk_size, "number") ? val.chunk_size : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"RealtimeServers\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeRealtimeServer(itm);
    }) : void 0;
    return { chunkSize: chunkSize, entries: entries };
}
exports.deserializeRealtimeServers = deserializeRealtimeServers;
function serializeRealtimeServers(val) {
    return { ["chunk_size"]: val.chunkSize, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeRealtimeServer(item);
        }) };
}
exports.serializeRealtimeServers = serializeRealtimeServers;
function deserializeRecentItemInteractionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RecentItemInteractionTypeField\"";
    }
    if (val === "item_preview") {
        return "item_preview";
    }
    if (val === "item_upload") {
        return "item_upload";
    }
    if (val === "item_comment") {
        return "item_comment";
    }
    if (val === "item_open") {
        return "item_open";
    }
    if (val === "item_modify") {
        return "item_modify";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRecentItemInteractionTypeField = deserializeRecentItemInteractionTypeField;
function serializeRecentItemInteractionTypeField(val) {
    return val;
}
exports.serializeRecentItemInteractionTypeField = serializeRecentItemInteractionTypeField;
function deserializeRetentionPolicyPolicyTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyPolicyTypeField\"";
    }
    if (val === "finite") {
        return "finite";
    }
    if (val === "indefinite") {
        return "indefinite";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyPolicyTypeField = deserializeRetentionPolicyPolicyTypeField;
function serializeRetentionPolicyPolicyTypeField(val) {
    return val;
}
exports.serializeRetentionPolicyPolicyTypeField = serializeRetentionPolicyPolicyTypeField;
function deserializeRetentionPolicyRetentionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyRetentionTypeField\"";
    }
    if (val === "modifiable") {
        return "modifiable";
    }
    if (val === "non-modifiable") {
        return "non-modifiable";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyRetentionTypeField = deserializeRetentionPolicyRetentionTypeField;
function serializeRetentionPolicyRetentionTypeField(val) {
    return val;
}
exports.serializeRetentionPolicyRetentionTypeField = serializeRetentionPolicyRetentionTypeField;
function deserializeRetentionPolicyStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "retired") {
        return "retired";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyStatusField = deserializeRetentionPolicyStatusField;
function serializeRetentionPolicyStatusField(val) {
    return val;
}
exports.serializeRetentionPolicyStatusField = serializeRetentionPolicyStatusField;
function deserializeRetentionPolicyAssignmentCountsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyAssignmentCountsField\"";
    }
    if (!(val.enterprise === void 0) && !(0, json_js_1.isJson)(val.enterprise, "number")) {
        throw "Expecting number for \"enterprise\" of type \"RetentionPolicyAssignmentCountsField\"";
    }
    const enterprise = (0, json_js_1.isJson)(val.enterprise, "number") ? val.enterprise : void 0;
    if (!(val.folder === void 0) && !(0, json_js_1.isJson)(val.folder, "number")) {
        throw "Expecting number for \"folder\" of type \"RetentionPolicyAssignmentCountsField\"";
    }
    const folder = (0, json_js_1.isJson)(val.folder, "number") ? val.folder : void 0;
    if (!(val.metadata_template === void 0) && !(0, json_js_1.isJson)(val.metadata_template, "number")) {
        throw "Expecting number for \"metadata_template\" of type \"RetentionPolicyAssignmentCountsField\"";
    }
    const metadataTemplate = (0, json_js_1.isJson)(val.metadata_template, "number") ? val.metadata_template : void 0;
    return { enterprise: enterprise, folder: folder, metadataTemplate: metadataTemplate };
}
exports.deserializeRetentionPolicyAssignmentCountsField = deserializeRetentionPolicyAssignmentCountsField;
function serializeRetentionPolicyAssignmentCountsField(val) {
    return { ["enterprise"]: val.enterprise, ["folder"]: val.folder, ["metadata_template"]: val.metadataTemplate };
}
exports.serializeRetentionPolicyAssignmentCountsField = serializeRetentionPolicyAssignmentCountsField;
function deserializeRetentionPolicyMiniDispositionActionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyMiniDispositionActionField\"";
    }
    if (val === "permanently_delete") {
        return "permanently_delete";
    }
    if (val === "remove_retention") {
        return "remove_retention";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyMiniDispositionActionField = deserializeRetentionPolicyMiniDispositionActionField;
function serializeRetentionPolicyMiniDispositionActionField(val) {
    return val;
}
exports.serializeRetentionPolicyMiniDispositionActionField = serializeRetentionPolicyMiniDispositionActionField;
function deserializeRetentionPolicyBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyBaseTypeField\"";
    }
    if (val === "retention_policy") {
        return "retention_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyBaseTypeField = deserializeRetentionPolicyBaseTypeField;
function serializeRetentionPolicyBaseTypeField(val) {
    return val;
}
exports.serializeRetentionPolicyBaseTypeField = serializeRetentionPolicyBaseTypeField;
function deserializeRetentionPolicyBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyBase\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"RetentionPolicyBase\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"RetentionPolicyBase\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"RetentionPolicyBase\" to be defined";
    }
    const type = deserializeRetentionPolicyBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeRetentionPolicyBase = deserializeRetentionPolicyBase;
function serializeRetentionPolicyBase(val) {
    return { ["id"]: val.id, ["type"]: serializeRetentionPolicyBaseTypeField(val.type) };
}
exports.serializeRetentionPolicyBase = serializeRetentionPolicyBase;
function deserializeRetentionPolicyMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyMini\"";
    }
    if (!(val.policy_name === void 0) && !(0, json_js_1.isJson)(val.policy_name, "string")) {
        throw "Expecting string for \"policy_name\" of type \"RetentionPolicyMini\"";
    }
    const policyName = (0, json_js_1.isJson)(val.policy_name, "string") ? val.policy_name : void 0;
    if (!(val.retention_length === void 0) && !(0, json_js_1.isJson)(val.retention_length, "string")) {
        throw "Expecting string for \"retention_length\" of type \"RetentionPolicyMini\"";
    }
    const retentionLength = (0, json_js_1.isJson)(val.retention_length, "string") ? val.retention_length : void 0;
    const dispositionAction = val.disposition_action === void 0 ? void 0 : deserializeRetentionPolicyMiniDispositionActionField(val.disposition_action);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"RetentionPolicyMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"RetentionPolicyMini\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"RetentionPolicyMini\" to be defined";
    }
    const type = deserializeRetentionPolicyBaseTypeField(val.type);
    return { policyName: policyName, retentionLength: retentionLength, dispositionAction: dispositionAction, id: id, type: type };
}
exports.deserializeRetentionPolicyMini = deserializeRetentionPolicyMini;
function serializeRetentionPolicyMini(val) {
    const base = serializeRetentionPolicyBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"RetentionPolicyMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["policy_name"]: val.policyName, ["retention_length"]: val.retentionLength, ["disposition_action"]: val.dispositionAction === void 0 ? void 0 : serializeRetentionPolicyMiniDispositionActionField(val.dispositionAction) });
}
exports.serializeRetentionPolicyMini = serializeRetentionPolicyMini;
function deserializeRetentionPolicies(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicies\"";
    }
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"RetentionPolicies\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeRetentionPolicyMini(itm);
    }) : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"RetentionPolicies\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "string")) {
        throw "Expecting string for \"next_marker\" of type \"RetentionPolicies\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.deserializeRetentionPolicies = deserializeRetentionPolicies;
function serializeRetentionPolicies(val) {
    return { ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeRetentionPolicyMini(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.serializeRetentionPolicies = serializeRetentionPolicies;
function deserializeFileVersionRetention(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionRetention\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileVersionRetention\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeFileVersionRetentionTypeField(val.type);
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    const file = val.file === void 0 ? void 0 : deserializeFileMini(val.file);
    if (!(val.applied_at === void 0) && !(0, json_js_1.isJson)(val.applied_at, "string")) {
        throw "Expecting string for \"applied_at\" of type \"FileVersionRetention\"";
    }
    const appliedAt = (0, json_js_1.isJson)(val.applied_at, "string") ? val.applied_at : void 0;
    if (!(val.disposition_at === void 0) && !(0, json_js_1.isJson)(val.disposition_at, "string")) {
        throw "Expecting string for \"disposition_at\" of type \"FileVersionRetention\"";
    }
    const dispositionAt = (0, json_js_1.isJson)(val.disposition_at, "string") ? val.disposition_at : void 0;
    const winningRetentionPolicy = val.winning_retention_policy === void 0 ? void 0 : deserializeRetentionPolicyMini(val.winning_retention_policy);
    return { id: id, type: type, fileVersion: fileVersion, file: file, appliedAt: appliedAt, dispositionAt: dispositionAt, winningRetentionPolicy: winningRetentionPolicy };
}
exports.deserializeFileVersionRetention = deserializeFileVersionRetention;
function serializeFileVersionRetention(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeFileVersionRetentionTypeField(val.type), ["file_version"]: val.fileVersion === void 0 ? void 0 : serializeFileVersionMini(val.fileVersion), ["file"]: val.file === void 0 ? void 0 : serializeFileMini(val.file), ["applied_at"]: val.appliedAt, ["disposition_at"]: val.dispositionAt, ["winning_retention_policy"]: val.winningRetentionPolicy === void 0 ? void 0 : serializeRetentionPolicyMini(val.winningRetentionPolicy) };
}
exports.serializeFileVersionRetention = serializeFileVersionRetention;
function deserializeFileVersionRetentions(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionRetentions\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"FileVersionRetentions\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"FileVersionRetentions\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"FileVersionRetentions\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FileVersionRetentions\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeFileVersionRetention(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeFileVersionRetentions = deserializeFileVersionRetentions;
function serializeFileVersionRetentions(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeFileVersionRetention(item);
        }) };
}
exports.serializeFileVersionRetentions = serializeFileVersionRetentions;
function deserializeRetentionPolicyAssignmentBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyAssignmentBaseTypeField\"";
    }
    if (val === "retention_policy_assignment") {
        return "retention_policy_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyAssignmentBaseTypeField = deserializeRetentionPolicyAssignmentBaseTypeField;
function serializeRetentionPolicyAssignmentBaseTypeField(val) {
    return val;
}
exports.serializeRetentionPolicyAssignmentBaseTypeField = serializeRetentionPolicyAssignmentBaseTypeField;
function deserializeRetentionPolicyAssignmentBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyAssignmentBase\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"RetentionPolicyAssignmentBase\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"RetentionPolicyAssignmentBase\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"RetentionPolicyAssignmentBase\" to be defined";
    }
    const type = deserializeRetentionPolicyAssignmentBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeRetentionPolicyAssignmentBase = deserializeRetentionPolicyAssignmentBase;
function serializeRetentionPolicyAssignmentBase(val) {
    return { ["id"]: val.id, ["type"]: serializeRetentionPolicyAssignmentBaseTypeField(val.type) };
}
exports.serializeRetentionPolicyAssignmentBase = serializeRetentionPolicyAssignmentBase;
function deserializeRetentionPolicyAssignments(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyAssignments\"";
    }
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"RetentionPolicyAssignments\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeRetentionPolicyAssignmentBase(itm);
    }) : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"RetentionPolicyAssignments\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "string")) {
        throw "Expecting string for \"next_marker\" of type \"RetentionPolicyAssignments\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.deserializeRetentionPolicyAssignments = deserializeRetentionPolicyAssignments;
function serializeRetentionPolicyAssignments(val) {
    return { ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeRetentionPolicyAssignmentBase(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.serializeRetentionPolicyAssignments = serializeRetentionPolicyAssignments;
function deserializeRetentionPolicyAssignmentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyAssignmentTypeField\"";
    }
    if (val === "retention_policy_assignment") {
        return "retention_policy_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyAssignmentTypeField = deserializeRetentionPolicyAssignmentTypeField;
function serializeRetentionPolicyAssignmentTypeField(val) {
    return val;
}
exports.serializeRetentionPolicyAssignmentTypeField = serializeRetentionPolicyAssignmentTypeField;
function deserializeRetentionPolicyAssignmentAssignedToFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"RetentionPolicyAssignmentAssignedToFieldTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    if (val === "metadata_template") {
        return "metadata_template";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeRetentionPolicyAssignmentAssignedToFieldTypeField = deserializeRetentionPolicyAssignmentAssignedToFieldTypeField;
function serializeRetentionPolicyAssignmentAssignedToFieldTypeField(val) {
    return val;
}
exports.serializeRetentionPolicyAssignmentAssignedToFieldTypeField = serializeRetentionPolicyAssignmentAssignedToFieldTypeField;
function deserializeRetentionPolicyAssignmentAssignedToField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyAssignmentAssignedToField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"RetentionPolicyAssignmentAssignedToField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeRetentionPolicyAssignmentAssignedToFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeRetentionPolicyAssignmentAssignedToField = deserializeRetentionPolicyAssignmentAssignedToField;
function serializeRetentionPolicyAssignmentAssignedToField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeRetentionPolicyAssignmentAssignedToFieldTypeField(val.type) };
}
exports.serializeRetentionPolicyAssignmentAssignedToField = serializeRetentionPolicyAssignmentAssignedToField;
function deserializeRetentionPolicyAssignmentFilterFieldsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyAssignmentFilterFieldsField\"";
    }
    if (!(val.field === void 0) && !(0, json_js_1.isJson)(val.field, "string")) {
        throw "Expecting string for \"field\" of type \"RetentionPolicyAssignmentFilterFieldsField\"";
    }
    const field = (0, json_js_1.isJson)(val.field, "string") ? val.field : void 0;
    if (!(val.value === void 0) && !(0, json_js_1.isJson)(val.value, "string")) {
        throw "Expecting string for \"value\" of type \"RetentionPolicyAssignmentFilterFieldsField\"";
    }
    const value = (0, json_js_1.isJson)(val.value, "string") ? val.value : void 0;
    return { field: field, value: value };
}
exports.deserializeRetentionPolicyAssignmentFilterFieldsField = deserializeRetentionPolicyAssignmentFilterFieldsField;
function serializeRetentionPolicyAssignmentFilterFieldsField(val) {
    return { ["field"]: val.field, ["value"]: val.value };
}
exports.serializeRetentionPolicyAssignmentFilterFieldsField = serializeRetentionPolicyAssignmentFilterFieldsField;
function deserializeShieldInformationBarrierTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierTypeField\"";
    }
    if (val === "shield_information_barrier") {
        return "shield_information_barrier";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierTypeField = deserializeShieldInformationBarrierTypeField;
function serializeShieldInformationBarrierTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierTypeField = serializeShieldInformationBarrierTypeField;
function deserializeShieldInformationBarrierStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierStatusField\"";
    }
    if (val === "draft") {
        return "draft";
    }
    if (val === "pending") {
        return "pending";
    }
    if (val === "disabled") {
        return "disabled";
    }
    if (val === "enabled") {
        return "enabled";
    }
    if (val === "invalid") {
        return "invalid";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierStatusField = deserializeShieldInformationBarrierStatusField;
function serializeShieldInformationBarrierStatusField(val) {
    return val;
}
exports.serializeShieldInformationBarrierStatusField = serializeShieldInformationBarrierStatusField;
function deserializeShieldInformationBarrierBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierBaseTypeField\"";
    }
    if (val === "shield_information_barrier") {
        return "shield_information_barrier";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierBaseTypeField = deserializeShieldInformationBarrierBaseTypeField;
function serializeShieldInformationBarrierBaseTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierBaseTypeField = serializeShieldInformationBarrierBaseTypeField;
function deserializeShieldInformationBarrierBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeShieldInformationBarrierBase = deserializeShieldInformationBarrierBase;
function serializeShieldInformationBarrierBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierBaseTypeField(val.type) };
}
exports.serializeShieldInformationBarrierBase = serializeShieldInformationBarrierBase;
function deserializeShieldInformationBarrierReference(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReference\"";
    }
    const shieldInformationBarrier = val.shield_information_barrier === void 0 ? void 0 : deserializeShieldInformationBarrierBase(val.shield_information_barrier);
    return { shieldInformationBarrier: shieldInformationBarrier };
}
exports.deserializeShieldInformationBarrierReference = deserializeShieldInformationBarrierReference;
function serializeShieldInformationBarrierReference(val) {
    return { ["shield_information_barrier"]: val.shieldInformationBarrier === void 0 ? void 0 : serializeShieldInformationBarrierBase(val.shieldInformationBarrier) };
}
exports.serializeShieldInformationBarrierReference = serializeShieldInformationBarrierReference;
function deserializeShieldInformationBarrierReportShieldInformationBarrierField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReportShieldInformationBarrierField\"";
    }
    return {};
}
exports.deserializeShieldInformationBarrierReportShieldInformationBarrierField = deserializeShieldInformationBarrierReportShieldInformationBarrierField;
function serializeShieldInformationBarrierReportShieldInformationBarrierField(val) {
    return {};
}
exports.serializeShieldInformationBarrierReportShieldInformationBarrierField = serializeShieldInformationBarrierReportShieldInformationBarrierField;
function deserializeShieldInformationBarrierReportStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierReportStatusField\"";
    }
    if (val === "pending") {
        return "pending";
    }
    if (val === "error") {
        return "error";
    }
    if (val === "done") {
        return "done";
    }
    if (val === "cancelled") {
        return "cancelled";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierReportStatusField = deserializeShieldInformationBarrierReportStatusField;
function serializeShieldInformationBarrierReportStatusField(val) {
    return val;
}
exports.serializeShieldInformationBarrierReportStatusField = serializeShieldInformationBarrierReportStatusField;
function deserializeShieldInformationBarrierReportDetailsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReportDetailsField\"";
    }
    return {};
}
exports.deserializeShieldInformationBarrierReportDetailsField = deserializeShieldInformationBarrierReportDetailsField;
function serializeShieldInformationBarrierReportDetailsField(val) {
    return {};
}
exports.serializeShieldInformationBarrierReportDetailsField = serializeShieldInformationBarrierReportDetailsField;
function deserializeShieldInformationBarrierReportBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierReportBaseTypeField\"";
    }
    if (val === "shield_information_barrier_report") {
        return "shield_information_barrier_report";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierReportBaseTypeField = deserializeShieldInformationBarrierReportBaseTypeField;
function serializeShieldInformationBarrierReportBaseTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierReportBaseTypeField = serializeShieldInformationBarrierReportBaseTypeField;
function deserializeShieldInformationBarrierReportBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReportBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierReportBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierReportBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeShieldInformationBarrierReportBase = deserializeShieldInformationBarrierReportBase;
function serializeShieldInformationBarrierReportBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierReportBaseTypeField(val.type) };
}
exports.serializeShieldInformationBarrierReportBase = serializeShieldInformationBarrierReportBase;
function deserializeShieldInformationBarrierSegmentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentTypeField\"";
    }
    if (val === "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierSegmentTypeField = deserializeShieldInformationBarrierSegmentTypeField;
function serializeShieldInformationBarrierSegmentTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierSegmentTypeField = serializeShieldInformationBarrierSegmentTypeField;
function deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField\"";
    }
    if (val === "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField;
function serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField = serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField;
function deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField;
function serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentFieldTypeField(val.type) };
}
exports.serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField = serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField;
function deserializeShieldInformationBarrierSegmentMemberBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentMemberBaseTypeField\"";
    }
    if (val === "shield_information_barrier_segment_member") {
        return "shield_information_barrier_segment_member";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierSegmentMemberBaseTypeField = deserializeShieldInformationBarrierSegmentMemberBaseTypeField;
function serializeShieldInformationBarrierSegmentMemberBaseTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierSegmentMemberBaseTypeField = serializeShieldInformationBarrierSegmentMemberBaseTypeField;
function deserializeShieldInformationBarrierSegmentMemberBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMemberBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentMemberBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeShieldInformationBarrierSegmentMemberBase = deserializeShieldInformationBarrierSegmentMemberBase;
function serializeShieldInformationBarrierSegmentMemberBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type) };
}
exports.serializeShieldInformationBarrierSegmentMemberBase = serializeShieldInformationBarrierSegmentMemberBase;
function deserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentRestrictionBaseTypeField\"";
    }
    if (val === "shield_information_barrier_segment_restriction") {
        return "shield_information_barrier_segment_restriction";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierSegmentRestrictionBaseTypeField = deserializeShieldInformationBarrierSegmentRestrictionBaseTypeField;
function serializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierSegmentRestrictionBaseTypeField = serializeShieldInformationBarrierSegmentRestrictionBaseTypeField;
function deserializeShieldInformationBarrierSegmentRestrictionBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestrictionBase\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentRestrictionBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.deserializeShieldInformationBarrierSegmentRestrictionBase = deserializeShieldInformationBarrierSegmentRestrictionBase;
function serializeShieldInformationBarrierSegmentRestrictionBase(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type), ["id"]: val.id };
}
exports.serializeShieldInformationBarrierSegmentRestrictionBase = serializeShieldInformationBarrierSegmentRestrictionBase;
function deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField\"";
    }
    if (val === "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField;
function serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField = serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField;
function deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField;
function serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentFieldTypeField(val.type) };
}
exports.serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField = serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField;
function deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField\"";
    }
    if (val === "shield_information_barrier_segment") {
        return "shield_information_barrier_segment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField;
function serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val) {
    return val;
}
exports.serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField = serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField;
function deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField;
function serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentFieldTypeField(val.type) };
}
exports.serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField = serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField;
function deserializeShieldInformationBarrierSegmentRestrictionMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestrictionMini\"";
    }
    if (val.shield_information_barrier_segment === void 0) {
        throw "Expecting \"shield_information_barrier_segment\" of type \"ShieldInformationBarrierSegmentRestrictionMini\" to be defined";
    }
    const shieldInformationBarrierSegment = deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val.shield_information_barrier_segment);
    if (val.restricted_segment === void 0) {
        throw "Expecting \"restricted_segment\" of type \"ShieldInformationBarrierSegmentRestrictionMini\" to be defined";
    }
    const restrictedSegment = deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val.restricted_segment);
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentRestrictionMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { shieldInformationBarrierSegment: shieldInformationBarrierSegment, restrictedSegment: restrictedSegment, type: type, id: id };
}
exports.deserializeShieldInformationBarrierSegmentRestrictionMini = deserializeShieldInformationBarrierSegmentRestrictionMini;
function serializeShieldInformationBarrierSegmentRestrictionMini(val) {
    const base = serializeShieldInformationBarrierSegmentRestrictionBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestrictionMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier_segment"]: serializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val.shieldInformationBarrierSegment), ["restricted_segment"]: serializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val.restrictedSegment) });
}
exports.serializeShieldInformationBarrierSegmentRestrictionMini = serializeShieldInformationBarrierSegmentRestrictionMini;
function deserializeSessionTerminationMessage(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SessionTerminationMessage\"";
    }
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"SessionTerminationMessage\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    return { message: message };
}
exports.deserializeSessionTerminationMessage = deserializeSessionTerminationMessage;
function serializeSessionTerminationMessage(val) {
    return { ["message"]: val.message };
}
exports.serializeSessionTerminationMessage = serializeSessionTerminationMessage;
function deserializeStoragePolicyMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StoragePolicyMiniTypeField\"";
    }
    if (val === "storage_policy") {
        return "storage_policy";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeStoragePolicyMiniTypeField = deserializeStoragePolicyMiniTypeField;
function serializeStoragePolicyMiniTypeField(val) {
    return val;
}
exports.serializeStoragePolicyMiniTypeField = serializeStoragePolicyMiniTypeField;
function deserializeStoragePolicyMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StoragePolicyMini\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"StoragePolicyMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeStoragePolicyMiniTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeStoragePolicyMini = deserializeStoragePolicyMini;
function serializeStoragePolicyMini(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeStoragePolicyMiniTypeField(val.type) };
}
exports.serializeStoragePolicyMini = serializeStoragePolicyMini;
function deserializeStoragePolicy(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StoragePolicy\"";
    }
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"StoragePolicy\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"StoragePolicy\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeStoragePolicyMiniTypeField(val.type);
    return { name: name, id: id, type: type };
}
exports.deserializeStoragePolicy = deserializeStoragePolicy;
function serializeStoragePolicy(val) {
    const base = serializeStoragePolicyMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"StoragePolicy\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name });
}
exports.serializeStoragePolicy = serializeStoragePolicy;
function deserializeStoragePolicies(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StoragePolicies\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"StoragePolicies\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"StoragePolicies\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"StoragePolicies\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"StoragePolicies\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeStoragePolicy(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeStoragePolicies = deserializeStoragePolicies;
function serializeStoragePolicies(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeStoragePolicy(item);
        }) };
}
exports.serializeStoragePolicies = serializeStoragePolicies;
function deserializeStoragePolicyAssignmentAssignedToField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StoragePolicyAssignmentAssignedToField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"StoragePolicyAssignmentAssignedToField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.type === void 0) && !(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"StoragePolicyAssignmentAssignedToField\"";
    }
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    return { id: id, type: type };
}
exports.deserializeStoragePolicyAssignmentAssignedToField = deserializeStoragePolicyAssignmentAssignedToField;
function serializeStoragePolicyAssignmentAssignedToField(val) {
    return { ["id"]: val.id, ["type"]: val.type };
}
exports.serializeStoragePolicyAssignmentAssignedToField = serializeStoragePolicyAssignmentAssignedToField;
function deserializeStoragePolicyAssignment(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StoragePolicyAssignment\"";
    }
    const storagePolicy = val.storage_policy === void 0 ? void 0 : deserializeStoragePolicyMini(val.storage_policy);
    const assignedTo = val.assigned_to === void 0 ? void 0 : deserializeStoragePolicyAssignmentAssignedToField(val.assigned_to);
    return { storagePolicy: storagePolicy, assignedTo: assignedTo };
}
exports.deserializeStoragePolicyAssignment = deserializeStoragePolicyAssignment;
function serializeStoragePolicyAssignment(val) {
    return { ["storage_policy"]: val.storagePolicy === void 0 ? void 0 : serializeStoragePolicyMini(val.storagePolicy), ["assigned_to"]: val.assignedTo === void 0 ? void 0 : serializeStoragePolicyAssignmentAssignedToField(val.assignedTo) };
}
exports.serializeStoragePolicyAssignment = serializeStoragePolicyAssignment;
function deserializeStoragePolicyAssignments(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StoragePolicyAssignments\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"StoragePolicyAssignments\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"StoragePolicyAssignments\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"StoragePolicyAssignments\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"StoragePolicyAssignments\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeStoragePolicyAssignment(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeStoragePolicyAssignments = deserializeStoragePolicyAssignments;
function serializeStoragePolicyAssignments(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeStoragePolicyAssignment(item);
        }) };
}
exports.serializeStoragePolicyAssignments = serializeStoragePolicyAssignments;
function deserializeTaskTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskTypeField\"";
    }
    if (val === "task") {
        return "task";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTaskTypeField = deserializeTaskTypeField;
function serializeTaskTypeField(val) {
    return val;
}
exports.serializeTaskTypeField = serializeTaskTypeField;
function deserializeTaskActionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskActionField\"";
    }
    if (val === "review") {
        return "review";
    }
    if (val === "complete") {
        return "complete";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTaskActionField = deserializeTaskActionField;
function serializeTaskActionField(val) {
    return val;
}
exports.serializeTaskActionField = serializeTaskActionField;
function deserializeTaskCompletionRuleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskCompletionRuleField\"";
    }
    if (val === "all_assignees") {
        return "all_assignees";
    }
    if (val === "any_assignee") {
        return "any_assignee";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTaskCompletionRuleField = deserializeTaskCompletionRuleField;
function serializeTaskCompletionRuleField(val) {
    return val;
}
exports.serializeTaskCompletionRuleField = serializeTaskCompletionRuleField;
function deserializeTaskAssignmentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskAssignmentTypeField\"";
    }
    if (val === "task_assignment") {
        return "task_assignment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTaskAssignmentTypeField = deserializeTaskAssignmentTypeField;
function serializeTaskAssignmentTypeField(val) {
    return val;
}
exports.serializeTaskAssignmentTypeField = serializeTaskAssignmentTypeField;
function deserializeTaskAssignmentResolutionStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TaskAssignmentResolutionStateField\"";
    }
    if (val === "completed") {
        return "completed";
    }
    if (val === "incomplete") {
        return "incomplete";
    }
    if (val === "approved") {
        return "approved";
    }
    if (val === "rejected") {
        return "rejected";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTaskAssignmentResolutionStateField = deserializeTaskAssignmentResolutionStateField;
function serializeTaskAssignmentResolutionStateField(val) {
    return val;
}
exports.serializeTaskAssignmentResolutionStateField = serializeTaskAssignmentResolutionStateField;
function deserializeTermsOfServiceStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceStatusField\"";
    }
    if (val === "enabled") {
        return "enabled";
    }
    if (val === "disabled") {
        return "disabled";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTermsOfServiceStatusField = deserializeTermsOfServiceStatusField;
function serializeTermsOfServiceStatusField(val) {
    return val;
}
exports.serializeTermsOfServiceStatusField = serializeTermsOfServiceStatusField;
function deserializeTermsOfServiceEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceEnterpriseFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTermsOfServiceEnterpriseFieldTypeField = deserializeTermsOfServiceEnterpriseFieldTypeField;
function serializeTermsOfServiceEnterpriseFieldTypeField(val) {
    return val;
}
exports.serializeTermsOfServiceEnterpriseFieldTypeField = serializeTermsOfServiceEnterpriseFieldTypeField;
function deserializeTermsOfServiceEnterpriseField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TermsOfServiceEnterpriseField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TermsOfServiceEnterpriseField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeTermsOfServiceEnterpriseFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TermsOfServiceEnterpriseField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.deserializeTermsOfServiceEnterpriseField = deserializeTermsOfServiceEnterpriseField;
function serializeTermsOfServiceEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeTermsOfServiceEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.serializeTermsOfServiceEnterpriseField = serializeTermsOfServiceEnterpriseField;
function deserializeTermsOfServiceTosTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceTosTypeField\"";
    }
    if (val === "managed") {
        return "managed";
    }
    if (val === "external") {
        return "external";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTermsOfServiceTosTypeField = deserializeTermsOfServiceTosTypeField;
function serializeTermsOfServiceTosTypeField(val) {
    return val;
}
exports.serializeTermsOfServiceTosTypeField = serializeTermsOfServiceTosTypeField;
function deserializeTermsOfServiceBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceBaseTypeField\"";
    }
    if (val === "terms_of_service") {
        return "terms_of_service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTermsOfServiceBaseTypeField = deserializeTermsOfServiceBaseTypeField;
function serializeTermsOfServiceBaseTypeField(val) {
    return val;
}
exports.serializeTermsOfServiceBaseTypeField = serializeTermsOfServiceBaseTypeField;
function deserializeTermsOfServiceBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TermsOfServiceBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TermsOfServiceBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeTermsOfServiceBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeTermsOfServiceBase = deserializeTermsOfServiceBase;
function serializeTermsOfServiceBase(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeTermsOfServiceBaseTypeField(val.type) };
}
exports.serializeTermsOfServiceBase = serializeTermsOfServiceBase;
function deserializeTermsOfService(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TermsOfService\"";
    }
    const status = val.status === void 0 ? void 0 : deserializeTermsOfServiceStatusField(val.status);
    const enterprise = val.enterprise === void 0 ? void 0 : deserializeTermsOfServiceEnterpriseField(val.enterprise);
    const tosType = val.tos_type === void 0 ? void 0 : deserializeTermsOfServiceTosTypeField(val.tos_type);
    if (!(val.text === void 0) && !(0, json_js_1.isJson)(val.text, "string")) {
        throw "Expecting string for \"text\" of type \"TermsOfService\"";
    }
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TermsOfService\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TermsOfService\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TermsOfService\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeTermsOfServiceBaseTypeField(val.type);
    return { status: status, enterprise: enterprise, tosType: tosType, text: text, createdAt: createdAt, modifiedAt: modifiedAt, id: id, type: type };
}
exports.deserializeTermsOfService = deserializeTermsOfService;
function serializeTermsOfService(val) {
    const base = serializeTermsOfServiceBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"TermsOfService\"";
    }
    return Object.assign(Object.assign({}, base), { ["status"]: val.status === void 0 ? void 0 : serializeTermsOfServiceStatusField(val.status), ["enterprise"]: val.enterprise === void 0 ? void 0 : serializeTermsOfServiceEnterpriseField(val.enterprise), ["tos_type"]: val.tosType === void 0 ? void 0 : serializeTermsOfServiceTosTypeField(val.tosType), ["text"]: val.text, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt });
}
exports.serializeTermsOfService = serializeTermsOfService;
function deserializeTermsOfServices(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TermsOfServices\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TermsOfServices\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TermsOfServices\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeTermsOfService(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTermsOfServices = deserializeTermsOfServices;
function serializeTermsOfServices(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeTermsOfService(item);
        }) };
}
exports.serializeTermsOfServices = serializeTermsOfServices;
function deserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField\"";
    }
    if (!(val.is_accepted === void 0) && !(0, json_js_1.isJson)(val.is_accepted, "boolean")) {
        throw "Expecting boolean for \"is_accepted\" of type \"CollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField\"";
    }
    const isAccepted = (0, json_js_1.isJson)(val.is_accepted, "boolean") ? val.is_accepted : void 0;
    const termsOfService = val.terms_of_service === void 0 ? void 0 : deserializeTermsOfServiceBase(val.terms_of_service);
    return { isAccepted: isAccepted, termsOfService: termsOfService };
}
exports.deserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = deserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField;
function serializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val) {
    return { ["is_accepted"]: val.isAccepted, ["terms_of_service"]: val.termsOfService === void 0 ? void 0 : serializeTermsOfServiceBase(val.termsOfService) };
}
exports.serializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField = serializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField;
function deserializeCollaborationAcceptanceRequirementsStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationAcceptanceRequirementsStatusField\"";
    }
    const termsOfServiceRequirement = val.terms_of_service_requirement === void 0 ? void 0 : deserializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val.terms_of_service_requirement);
    const strongPasswordRequirement = val.strong_password_requirement === void 0 ? void 0 : deserializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val.strong_password_requirement);
    const twoFactorAuthenticationRequirement = val.two_factor_authentication_requirement === void 0 ? void 0 : deserializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val.two_factor_authentication_requirement);
    return { termsOfServiceRequirement: termsOfServiceRequirement, strongPasswordRequirement: strongPasswordRequirement, twoFactorAuthenticationRequirement: twoFactorAuthenticationRequirement };
}
exports.deserializeCollaborationAcceptanceRequirementsStatusField = deserializeCollaborationAcceptanceRequirementsStatusField;
function serializeCollaborationAcceptanceRequirementsStatusField(val) {
    return { ["terms_of_service_requirement"]: val.termsOfServiceRequirement === void 0 ? void 0 : serializeCollaborationAcceptanceRequirementsStatusFieldTermsOfServiceRequirementField(val.termsOfServiceRequirement), ["strong_password_requirement"]: val.strongPasswordRequirement === void 0 ? void 0 : serializeCollaborationAcceptanceRequirementsStatusFieldStrongPasswordRequirementField(val.strongPasswordRequirement), ["two_factor_authentication_requirement"]: val.twoFactorAuthenticationRequirement === void 0 ? void 0 : serializeCollaborationAcceptanceRequirementsStatusFieldTwoFactorAuthenticationRequirementField(val.twoFactorAuthenticationRequirement) };
}
exports.serializeCollaborationAcceptanceRequirementsStatusField = serializeCollaborationAcceptanceRequirementsStatusField;
function deserializeTermsOfServiceUserStatusTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TermsOfServiceUserStatusTypeField\"";
    }
    if (val === "terms_of_service_user_status") {
        return "terms_of_service_user_status";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTermsOfServiceUserStatusTypeField = deserializeTermsOfServiceUserStatusTypeField;
function serializeTermsOfServiceUserStatusTypeField(val) {
    return val;
}
exports.serializeTermsOfServiceUserStatusTypeField = serializeTermsOfServiceUserStatusTypeField;
function deserializeTrashFileTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileTypeField\"";
    }
    if (val === "file") {
        return "file";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFileTypeField = deserializeTrashFileTypeField;
function serializeTrashFileTypeField(val) {
    return val;
}
exports.serializeTrashFileTypeField = serializeTrashFileTypeField;
function deserializeTrashFilePathCollectionFieldEntriesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFilePathCollectionFieldEntriesFieldTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFilePathCollectionFieldEntriesFieldTypeField = deserializeTrashFilePathCollectionFieldEntriesFieldTypeField;
function serializeTrashFilePathCollectionFieldEntriesFieldTypeField(val) {
    return val;
}
exports.serializeTrashFilePathCollectionFieldEntriesFieldTypeField = serializeTrashFilePathCollectionFieldEntriesFieldTypeField;
function deserializeTrashFilePathCollectionFieldEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFilePathCollectionFieldEntriesField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeTrashFilePathCollectionFieldEntriesFieldTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashFilePathCollectionFieldEntriesField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashFilePathCollectionFieldEntriesField\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashFilePathCollectionFieldEntriesField\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashFilePathCollectionFieldEntriesField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name };
}
exports.deserializeTrashFilePathCollectionFieldEntriesField = deserializeTrashFilePathCollectionFieldEntriesField;
function serializeTrashFilePathCollectionFieldEntriesField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeTrashFilePathCollectionFieldEntriesFieldTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name };
}
exports.serializeTrashFilePathCollectionFieldEntriesField = serializeTrashFilePathCollectionFieldEntriesField;
function deserializeTrashFilePathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFilePathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"TrashFilePathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TrashFilePathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TrashFilePathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TrashFilePathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeTrashFilePathCollectionFieldEntriesField(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTrashFilePathCollectionField = deserializeTrashFilePathCollectionField;
function serializeTrashFilePathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeTrashFilePathCollectionFieldEntriesField(item);
        }) };
}
exports.serializeTrashFilePathCollectionField = serializeTrashFilePathCollectionField;
function deserializeTrashFileItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFileItemStatusField = deserializeTrashFileItemStatusField;
function serializeTrashFileItemStatusField(val) {
    return val;
}
exports.serializeTrashFileItemStatusField = serializeTrashFileItemStatusField;
function deserializeTrashFolderTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFolderTypeField = deserializeTrashFolderTypeField;
function serializeTrashFolderTypeField(val) {
    return val;
}
exports.serializeTrashFolderTypeField = serializeTrashFolderTypeField;
function deserializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderPathCollectionFieldEntriesFieldTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFolderPathCollectionFieldEntriesFieldTypeField = deserializeTrashFolderPathCollectionFieldEntriesFieldTypeField;
function serializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val) {
    return val;
}
exports.serializeTrashFolderPathCollectionFieldEntriesFieldTypeField = serializeTrashFolderPathCollectionFieldEntriesFieldTypeField;
function deserializeTrashFolderPathCollectionFieldEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFolderPathCollectionFieldEntriesField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashFolderPathCollectionFieldEntriesField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashFolderPathCollectionFieldEntriesField\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashFolderPathCollectionFieldEntriesField\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashFolderPathCollectionFieldEntriesField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name };
}
exports.deserializeTrashFolderPathCollectionFieldEntriesField = deserializeTrashFolderPathCollectionFieldEntriesField;
function serializeTrashFolderPathCollectionFieldEntriesField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeTrashFolderPathCollectionFieldEntriesFieldTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name };
}
exports.serializeTrashFolderPathCollectionFieldEntriesField = serializeTrashFolderPathCollectionFieldEntriesField;
function deserializeTrashFolderPathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFolderPathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"TrashFolderPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TrashFolderPathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TrashFolderPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TrashFolderPathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeTrashFolderPathCollectionFieldEntriesField(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTrashFolderPathCollectionField = deserializeTrashFolderPathCollectionField;
function serializeTrashFolderPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeTrashFolderPathCollectionFieldEntriesField(item);
        }) };
}
exports.serializeTrashFolderPathCollectionField = serializeTrashFolderPathCollectionField;
function deserializeTrashFolderItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFolderItemStatusField = deserializeTrashFolderItemStatusField;
function serializeTrashFolderItemStatusField(val) {
    return val;
}
exports.serializeTrashFolderItemStatusField = serializeTrashFolderItemStatusField;
function deserializeTrashWebLinkTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkTypeField\"";
    }
    if (val === "web_link") {
        return "web_link";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashWebLinkTypeField = deserializeTrashWebLinkTypeField;
function serializeTrashWebLinkTypeField(val) {
    return val;
}
exports.serializeTrashWebLinkTypeField = serializeTrashWebLinkTypeField;
function deserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkPathCollectionFieldEntriesFieldTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = deserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField;
function serializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val) {
    return val;
}
exports.serializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField = serializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField;
function deserializeTrashWebLinkPathCollectionFieldEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashWebLinkPathCollectionFieldEntriesField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashWebLinkPathCollectionFieldEntriesField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashWebLinkPathCollectionFieldEntriesField\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashWebLinkPathCollectionFieldEntriesField\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashWebLinkPathCollectionFieldEntriesField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name };
}
exports.deserializeTrashWebLinkPathCollectionFieldEntriesField = deserializeTrashWebLinkPathCollectionFieldEntriesField;
function serializeTrashWebLinkPathCollectionFieldEntriesField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeTrashWebLinkPathCollectionFieldEntriesFieldTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name };
}
exports.serializeTrashWebLinkPathCollectionFieldEntriesField = serializeTrashWebLinkPathCollectionFieldEntriesField;
function deserializeTrashWebLinkPathCollectionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashWebLinkPathCollectionField\"";
    }
    if (val.total_count === void 0) {
        throw "Expecting \"total_count\" of type \"TrashWebLinkPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TrashWebLinkPathCollectionField\"";
    }
    const totalCount = val.total_count;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TrashWebLinkPathCollectionField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TrashWebLinkPathCollectionField\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeTrashWebLinkPathCollectionFieldEntriesField(itm);
    });
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTrashWebLinkPathCollectionField = deserializeTrashWebLinkPathCollectionField;
function serializeTrashWebLinkPathCollectionField(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries.map(function (item) {
            return serializeTrashWebLinkPathCollectionFieldEntriesField(item);
        }) };
}
exports.serializeTrashWebLinkPathCollectionField = serializeTrashWebLinkPathCollectionField;
function deserializeTrashWebLinkItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashWebLinkItemStatusField = deserializeTrashWebLinkItemStatusField;
function serializeTrashWebLinkItemStatusField(val) {
    return val;
}
exports.serializeTrashWebLinkItemStatusField = serializeTrashWebLinkItemStatusField;
function deserializeTrashFileRestoredTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileRestoredTypeField\"";
    }
    if (val === "file") {
        return "file";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFileRestoredTypeField = deserializeTrashFileRestoredTypeField;
function serializeTrashFileRestoredTypeField(val) {
    return val;
}
exports.serializeTrashFileRestoredTypeField = serializeTrashFileRestoredTypeField;
function deserializeTrashFileRestoredItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFileRestoredItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFileRestoredItemStatusField = deserializeTrashFileRestoredItemStatusField;
function serializeTrashFileRestoredItemStatusField(val) {
    return val;
}
exports.serializeTrashFileRestoredItemStatusField = serializeTrashFileRestoredItemStatusField;
function deserializeTrashFolderRestoredTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderRestoredTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFolderRestoredTypeField = deserializeTrashFolderRestoredTypeField;
function serializeTrashFolderRestoredTypeField(val) {
    return val;
}
exports.serializeTrashFolderRestoredTypeField = serializeTrashFolderRestoredTypeField;
function deserializeTrashFolderRestoredItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashFolderRestoredItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashFolderRestoredItemStatusField = deserializeTrashFolderRestoredItemStatusField;
function serializeTrashFolderRestoredItemStatusField(val) {
    return val;
}
exports.serializeTrashFolderRestoredItemStatusField = serializeTrashFolderRestoredItemStatusField;
function deserializeTrashWebLinkRestoredTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkRestoredTypeField\"";
    }
    if (val === "web_link") {
        return "web_link";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashWebLinkRestoredTypeField = deserializeTrashWebLinkRestoredTypeField;
function serializeTrashWebLinkRestoredTypeField(val) {
    return val;
}
exports.serializeTrashWebLinkRestoredTypeField = serializeTrashWebLinkRestoredTypeField;
function deserializeTrashWebLinkRestoredItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrashWebLinkRestoredItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrashWebLinkRestoredItemStatusField = deserializeTrashWebLinkRestoredItemStatusField;
function serializeTrashWebLinkRestoredItemStatusField(val) {
    return val;
}
exports.serializeTrashWebLinkRestoredItemStatusField = serializeTrashWebLinkRestoredItemStatusField;
function deserializeUploadPartMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadPartMini\"";
    }
    if (!(val.part_id === void 0) && !(0, json_js_1.isJson)(val.part_id, "string")) {
        throw "Expecting string for \"part_id\" of type \"UploadPartMini\"";
    }
    const partId = (0, json_js_1.isJson)(val.part_id, "string") ? val.part_id : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"UploadPartMini\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.size === void 0) && !(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"UploadPartMini\"";
    }
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    return { partId: partId, offset: offset, size: size };
}
exports.deserializeUploadPartMini = deserializeUploadPartMini;
function serializeUploadPartMini(val) {
    return { ["part_id"]: val.partId, ["offset"]: val.offset, ["size"]: val.size };
}
exports.serializeUploadPartMini = serializeUploadPartMini;
function deserializeUploadPart(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadPart\"";
    }
    if (!(val.sha1 === void 0) && !(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"UploadPart\"";
    }
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    if (!(val.part_id === void 0) && !(0, json_js_1.isJson)(val.part_id, "string")) {
        throw "Expecting string for \"part_id\" of type \"UploadPart\"";
    }
    const partId = (0, json_js_1.isJson)(val.part_id, "string") ? val.part_id : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"UploadPart\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.size === void 0) && !(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"UploadPart\"";
    }
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    return { sha1: sha1, partId: partId, offset: offset, size: size };
}
exports.deserializeUploadPart = deserializeUploadPart;
function serializeUploadPart(val) {
    const base = serializeUploadPartMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UploadPart\"";
    }
    return Object.assign(Object.assign({}, base), { ["sha1"]: val.sha1 });
}
exports.serializeUploadPart = serializeUploadPart;
function deserializeUploadedPart(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadedPart\"";
    }
    const part = val.part === void 0 ? void 0 : deserializeUploadPart(val.part);
    return { part: part };
}
exports.deserializeUploadedPart = deserializeUploadedPart;
function serializeUploadedPart(val) {
    return { ["part"]: val.part === void 0 ? void 0 : serializeUploadPart(val.part) };
}
exports.serializeUploadedPart = serializeUploadedPart;
function deserializeUploadPartsOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UploadPartsOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeUploadPartsOrderFieldDirectionField = deserializeUploadPartsOrderFieldDirectionField;
function serializeUploadPartsOrderFieldDirectionField(val) {
    return val;
}
exports.serializeUploadPartsOrderFieldDirectionField = serializeUploadPartsOrderFieldDirectionField;
function deserializeUploadPartsOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadPartsOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"UploadPartsOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeUploadPartsOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeUploadPartsOrderField = deserializeUploadPartsOrderField;
function serializeUploadPartsOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeUploadPartsOrderFieldDirectionField(val.direction) };
}
exports.serializeUploadPartsOrderField = serializeUploadPartsOrderField;
function deserializeUploadParts(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadParts\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"UploadParts\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"UploadParts\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"UploadParts\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"UploadParts\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeUploadPartsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"UploadParts\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeUploadPart(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeUploadParts = deserializeUploadParts;
function serializeUploadParts(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeUploadPartsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeUploadPart(item);
        }) };
}
exports.serializeUploadParts = serializeUploadParts;
function deserializeUploadSessionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UploadSessionTypeField\"";
    }
    if (val === "upload_session") {
        return "upload_session";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeUploadSessionTypeField = deserializeUploadSessionTypeField;
function serializeUploadSessionTypeField(val) {
    return val;
}
exports.serializeUploadSessionTypeField = serializeUploadSessionTypeField;
function deserializeUploadSessionSessionEndpointsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadSessionSessionEndpointsField\"";
    }
    if (!(val.upload_part === void 0) && !(0, json_js_1.isJson)(val.upload_part, "string")) {
        throw "Expecting string for \"upload_part\" of type \"UploadSessionSessionEndpointsField\"";
    }
    const uploadPart = (0, json_js_1.isJson)(val.upload_part, "string") ? val.upload_part : void 0;
    if (!(val.commit === void 0) && !(0, json_js_1.isJson)(val.commit, "string")) {
        throw "Expecting string for \"commit\" of type \"UploadSessionSessionEndpointsField\"";
    }
    const commit = (0, json_js_1.isJson)(val.commit, "string") ? val.commit : void 0;
    if (!(val.abort === void 0) && !(0, json_js_1.isJson)(val.abort, "string")) {
        throw "Expecting string for \"abort\" of type \"UploadSessionSessionEndpointsField\"";
    }
    const abort = (0, json_js_1.isJson)(val.abort, "string") ? val.abort : void 0;
    if (!(val.list_parts === void 0) && !(0, json_js_1.isJson)(val.list_parts, "string")) {
        throw "Expecting string for \"list_parts\" of type \"UploadSessionSessionEndpointsField\"";
    }
    const listParts = (0, json_js_1.isJson)(val.list_parts, "string") ? val.list_parts : void 0;
    if (!(val.status === void 0) && !(0, json_js_1.isJson)(val.status, "string")) {
        throw "Expecting string for \"status\" of type \"UploadSessionSessionEndpointsField\"";
    }
    const status = (0, json_js_1.isJson)(val.status, "string") ? val.status : void 0;
    if (!(val.log_event === void 0) && !(0, json_js_1.isJson)(val.log_event, "string")) {
        throw "Expecting string for \"log_event\" of type \"UploadSessionSessionEndpointsField\"";
    }
    const logEvent = (0, json_js_1.isJson)(val.log_event, "string") ? val.log_event : void 0;
    return { uploadPart: uploadPart, commit: commit, abort: abort, listParts: listParts, status: status, logEvent: logEvent };
}
exports.deserializeUploadSessionSessionEndpointsField = deserializeUploadSessionSessionEndpointsField;
function serializeUploadSessionSessionEndpointsField(val) {
    return { ["upload_part"]: val.uploadPart, ["commit"]: val.commit, ["abort"]: val.abort, ["list_parts"]: val.listParts, ["status"]: val.status, ["log_event"]: val.logEvent };
}
exports.serializeUploadSessionSessionEndpointsField = serializeUploadSessionSessionEndpointsField;
function deserializeUploadSession(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadSession\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"UploadSession\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeUploadSessionTypeField(val.type);
    if (!(val.session_expires_at === void 0) && !(0, json_js_1.isJson)(val.session_expires_at, "string")) {
        throw "Expecting string for \"session_expires_at\" of type \"UploadSession\"";
    }
    const sessionExpiresAt = (0, json_js_1.isJson)(val.session_expires_at, "string") ? val.session_expires_at : void 0;
    if (!(val.part_size === void 0) && !(0, json_js_1.isJson)(val.part_size, "number")) {
        throw "Expecting number for \"part_size\" of type \"UploadSession\"";
    }
    const partSize = (0, json_js_1.isJson)(val.part_size, "number") ? val.part_size : void 0;
    if (!(val.total_parts === void 0) && !(0, json_js_1.isJson)(val.total_parts, "number")) {
        throw "Expecting number for \"total_parts\" of type \"UploadSession\"";
    }
    const totalParts = (0, json_js_1.isJson)(val.total_parts, "number") ? val.total_parts : void 0;
    if (!(val.num_parts_processed === void 0) && !(0, json_js_1.isJson)(val.num_parts_processed, "number")) {
        throw "Expecting number for \"num_parts_processed\" of type \"UploadSession\"";
    }
    const numPartsProcessed = (0, json_js_1.isJson)(val.num_parts_processed, "number") ? val.num_parts_processed : void 0;
    const sessionEndpoints = val.session_endpoints === void 0 ? void 0 : deserializeUploadSessionSessionEndpointsField(val.session_endpoints);
    return { id: id, type: type, sessionExpiresAt: sessionExpiresAt, partSize: partSize, totalParts: totalParts, numPartsProcessed: numPartsProcessed, sessionEndpoints: sessionEndpoints };
}
exports.deserializeUploadSession = deserializeUploadSession;
function serializeUploadSession(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeUploadSessionTypeField(val.type), ["session_expires_at"]: val.sessionExpiresAt, ["part_size"]: val.partSize, ["total_parts"]: val.totalParts, ["num_parts_processed"]: val.numPartsProcessed, ["session_endpoints"]: val.sessionEndpoints === void 0 ? void 0 : serializeUploadSessionSessionEndpointsField(val.sessionEndpoints) };
}
exports.serializeUploadSession = serializeUploadSession;
function deserializeUploadUrl(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UploadUrl\"";
    }
    if (!(val.upload_url === void 0) && !(0, json_js_1.isJson)(val.upload_url, "string")) {
        throw "Expecting string for \"upload_url\" of type \"UploadUrl\"";
    }
    const uploadUrl = (0, json_js_1.isJson)(val.upload_url, "string") ? val.upload_url : void 0;
    if (!(val.upload_token === void 0) && !(0, json_js_1.isJson)(val.upload_token, "string")) {
        throw "Expecting string for \"upload_token\" of type \"UploadUrl\"";
    }
    const uploadToken = (0, json_js_1.isJson)(val.upload_token, "string") ? val.upload_token : void 0;
    return { uploadUrl: uploadUrl, uploadToken: uploadToken };
}
exports.deserializeUploadUrl = deserializeUploadUrl;
function serializeUploadUrl(val) {
    return { ["upload_url"]: val.uploadUrl, ["upload_token"]: val.uploadToken };
}
exports.serializeUploadUrl = serializeUploadUrl;
function deserializeUserStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "inactive") {
        return "inactive";
    }
    if (val === "cannot_delete_edit") {
        return "cannot_delete_edit";
    }
    if (val === "cannot_delete_edit_upload") {
        return "cannot_delete_edit_upload";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeUserStatusField = deserializeUserStatusField;
function serializeUserStatusField(val) {
    return val;
}
exports.serializeUserStatusField = serializeUserStatusField;
function deserializeUserNotificationEmailField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserNotificationEmailField\"";
    }
    if (!(val.email === void 0) && !(0, json_js_1.isJson)(val.email, "string")) {
        throw "Expecting string for \"email\" of type \"UserNotificationEmailField\"";
    }
    const email = (0, json_js_1.isJson)(val.email, "string") ? val.email : void 0;
    if (!(val.is_confirmed === void 0) && !(0, json_js_1.isJson)(val.is_confirmed, "boolean")) {
        throw "Expecting boolean for \"is_confirmed\" of type \"UserNotificationEmailField\"";
    }
    const isConfirmed = (0, json_js_1.isJson)(val.is_confirmed, "boolean") ? val.is_confirmed : void 0;
    return { email: email, isConfirmed: isConfirmed };
}
exports.deserializeUserNotificationEmailField = deserializeUserNotificationEmailField;
function serializeUserNotificationEmailField(val) {
    return { ["email"]: val.email, ["is_confirmed"]: val.isConfirmed };
}
exports.serializeUserNotificationEmailField = serializeUserNotificationEmailField;
function deserializeUserAvatarPicUrlsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserAvatarPicUrlsField\"";
    }
    if (!(val.small === void 0) && !(0, json_js_1.isJson)(val.small, "string")) {
        throw "Expecting string for \"small\" of type \"UserAvatarPicUrlsField\"";
    }
    const small = (0, json_js_1.isJson)(val.small, "string") ? val.small : void 0;
    if (!(val.large === void 0) && !(0, json_js_1.isJson)(val.large, "string")) {
        throw "Expecting string for \"large\" of type \"UserAvatarPicUrlsField\"";
    }
    const large = (0, json_js_1.isJson)(val.large, "string") ? val.large : void 0;
    if (!(val.preview === void 0) && !(0, json_js_1.isJson)(val.preview, "string")) {
        throw "Expecting string for \"preview\" of type \"UserAvatarPicUrlsField\"";
    }
    const preview = (0, json_js_1.isJson)(val.preview, "string") ? val.preview : void 0;
    return { small: small, large: large, preview: preview };
}
exports.deserializeUserAvatarPicUrlsField = deserializeUserAvatarPicUrlsField;
function serializeUserAvatarPicUrlsField(val) {
    return { ["small"]: val.small, ["large"]: val.large, ["preview"]: val.preview };
}
exports.serializeUserAvatarPicUrlsField = serializeUserAvatarPicUrlsField;
function deserializeUserAvatar(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserAvatar\"";
    }
    const picUrls = val.pic_urls === void 0 ? void 0 : deserializeUserAvatarPicUrlsField(val.pic_urls);
    return { picUrls: picUrls };
}
exports.deserializeUserAvatar = deserializeUserAvatar;
function serializeUserAvatar(val) {
    return { ["pic_urls"]: val.picUrls === void 0 ? void 0 : serializeUserAvatarPicUrlsField(val.picUrls) };
}
exports.serializeUserAvatar = serializeUserAvatar;
function deserializeUsersOrderFieldDirectionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UsersOrderFieldDirectionField\"";
    }
    if (val === "ASC") {
        return "ASC";
    }
    if (val === "DESC") {
        return "DESC";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeUsersOrderFieldDirectionField = deserializeUsersOrderFieldDirectionField;
function serializeUsersOrderFieldDirectionField(val) {
    return val;
}
exports.serializeUsersOrderFieldDirectionField = serializeUsersOrderFieldDirectionField;
function deserializeUsersOrderField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UsersOrderField\"";
    }
    if (!(val.by === void 0) && !(0, json_js_1.isJson)(val.by, "string")) {
        throw "Expecting string for \"by\" of type \"UsersOrderField\"";
    }
    const by = (0, json_js_1.isJson)(val.by, "string") ? val.by : void 0;
    const direction = val.direction === void 0 ? void 0 : deserializeUsersOrderFieldDirectionField(val.direction);
    return { by: by, direction: direction };
}
exports.deserializeUsersOrderField = deserializeUsersOrderField;
function serializeUsersOrderField(val) {
    return { ["by"]: val.by, ["direction"]: val.direction === void 0 ? void 0 : serializeUsersOrderFieldDirectionField(val.direction) };
}
exports.serializeUsersOrderField = serializeUsersOrderField;
function deserializeUserFullRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserFullRoleField\"";
    }
    if (val === "admin") {
        return "admin";
    }
    if (val === "coadmin") {
        return "coadmin";
    }
    if (val === "user") {
        return "user";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeUserFullRoleField = deserializeUserFullRoleField;
function serializeUserFullRoleField(val) {
    return val;
}
exports.serializeUserFullRoleField = serializeUserFullRoleField;
function deserializeUserFullEnterpriseFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserFullEnterpriseFieldTypeField\"";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeUserFullEnterpriseFieldTypeField = deserializeUserFullEnterpriseFieldTypeField;
function serializeUserFullEnterpriseFieldTypeField(val) {
    return val;
}
exports.serializeUserFullEnterpriseFieldTypeField = serializeUserFullEnterpriseFieldTypeField;
function deserializeUserFullEnterpriseField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserFullEnterpriseField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"UserFullEnterpriseField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeUserFullEnterpriseFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"UserFullEnterpriseField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { id: id, type: type, name: name };
}
exports.deserializeUserFullEnterpriseField = deserializeUserFullEnterpriseField;
function serializeUserFullEnterpriseField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeUserFullEnterpriseFieldTypeField(val.type), ["name"]: val.name };
}
exports.serializeUserFullEnterpriseField = serializeUserFullEnterpriseField;
function deserializeUserBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"UserBaseTypeField\"";
    }
    if (val === "user") {
        return "user";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeUserBaseTypeField = deserializeUserBaseTypeField;
function serializeUserBaseTypeField(val) {
    return val;
}
exports.serializeUserBaseTypeField = serializeUserBaseTypeField;
function deserializeUserBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserBase\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"UserBase\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"UserBase\" to be defined";
    }
    const type = deserializeUserBaseTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeUserBase = deserializeUserBase;
function serializeUserBase(val) {
    return { ["id"]: val.id, ["type"]: serializeUserBaseTypeField(val.type) };
}
exports.serializeUserBase = serializeUserBase;
function deserializeUserCollaborations(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserCollaborations\"";
    }
    if (val.name === void 0) {
        throw "Expecting \"name\" of type \"UserCollaborations\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"UserCollaborations\"";
    }
    const name = val.name;
    if (val.login === void 0) {
        throw "Expecting \"login\" of type \"UserCollaborations\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.login, "string")) {
        throw "Expecting string for \"login\" of type \"UserCollaborations\"";
    }
    const login = val.login;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"UserCollaborations\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"UserCollaborations\" to be defined";
    }
    const type = deserializeUserBaseTypeField(val.type);
    return { name: name, login: login, id: id, type: type };
}
exports.deserializeUserCollaborations = deserializeUserCollaborations;
function serializeUserCollaborations(val) {
    const base = serializeUserBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UserCollaborations\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["login"]: val.login });
}
exports.serializeUserCollaborations = serializeUserCollaborations;
function deserializeUserMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserMini\"";
    }
    if (val.name === void 0) {
        throw "Expecting \"name\" of type \"UserMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"UserMini\"";
    }
    const name = val.name;
    if (val.login === void 0) {
        throw "Expecting \"login\" of type \"UserMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.login, "string")) {
        throw "Expecting string for \"login\" of type \"UserMini\"";
    }
    const login = val.login;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"UserMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"UserMini\" to be defined";
    }
    const type = deserializeUserBaseTypeField(val.type);
    return { name: name, login: login, id: id, type: type };
}
exports.deserializeUserMini = deserializeUserMini;
function serializeUserMini(val) {
    const base = serializeUserBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UserMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["login"]: val.login });
}
exports.serializeUserMini = serializeUserMini;
function deserializeUser(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"User\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"User\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"User\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.language === void 0) && !(0, json_js_1.isJson)(val.language, "string")) {
        throw "Expecting string for \"language\" of type \"User\"";
    }
    const language = (0, json_js_1.isJson)(val.language, "string") ? val.language : void 0;
    if (!(val.timezone === void 0) && !(0, json_js_1.isJson)(val.timezone, "string")) {
        throw "Expecting string for \"timezone\" of type \"User\"";
    }
    const timezone = (0, json_js_1.isJson)(val.timezone, "string") ? val.timezone : void 0;
    if (!(val.space_amount === void 0) && !(0, json_js_1.isJson)(val.space_amount, "number")) {
        throw "Expecting number for \"space_amount\" of type \"User\"";
    }
    const spaceAmount = (0, json_js_1.isJson)(val.space_amount, "number") ? val.space_amount : void 0;
    if (!(val.space_used === void 0) && !(0, json_js_1.isJson)(val.space_used, "number")) {
        throw "Expecting number for \"space_used\" of type \"User\"";
    }
    const spaceUsed = (0, json_js_1.isJson)(val.space_used, "number") ? val.space_used : void 0;
    if (!(val.max_upload_size === void 0) && !(0, json_js_1.isJson)(val.max_upload_size, "number")) {
        throw "Expecting number for \"max_upload_size\" of type \"User\"";
    }
    const maxUploadSize = (0, json_js_1.isJson)(val.max_upload_size, "number") ? val.max_upload_size : void 0;
    const status = val.status === void 0 ? void 0 : deserializeUserStatusField(val.status);
    if (!(val.job_title === void 0) && !(0, json_js_1.isJson)(val.job_title, "string")) {
        throw "Expecting string for \"job_title\" of type \"User\"";
    }
    const jobTitle = (0, json_js_1.isJson)(val.job_title, "string") ? val.job_title : void 0;
    if (!(val.phone === void 0) && !(0, json_js_1.isJson)(val.phone, "string")) {
        throw "Expecting string for \"phone\" of type \"User\"";
    }
    const phone = (0, json_js_1.isJson)(val.phone, "string") ? val.phone : void 0;
    if (!(val.address === void 0) && !(0, json_js_1.isJson)(val.address, "string")) {
        throw "Expecting string for \"address\" of type \"User\"";
    }
    const address = (0, json_js_1.isJson)(val.address, "string") ? val.address : void 0;
    if (!(val.avatar_url === void 0) && !(0, json_js_1.isJson)(val.avatar_url, "string")) {
        throw "Expecting string for \"avatar_url\" of type \"User\"";
    }
    const avatarUrl = (0, json_js_1.isJson)(val.avatar_url, "string") ? val.avatar_url : void 0;
    const notificationEmail = val.notification_email === void 0 ? void 0 : deserializeUserNotificationEmailField(val.notification_email);
    if (val.name === void 0) {
        throw "Expecting \"name\" of type \"User\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"User\"";
    }
    const name = val.name;
    if (val.login === void 0) {
        throw "Expecting \"login\" of type \"User\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.login, "string")) {
        throw "Expecting string for \"login\" of type \"User\"";
    }
    const login = val.login;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"User\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"User\" to be defined";
    }
    const type = deserializeUserBaseTypeField(val.type);
    return { createdAt: createdAt, modifiedAt: modifiedAt, language: language, timezone: timezone, spaceAmount: spaceAmount, spaceUsed: spaceUsed, maxUploadSize: maxUploadSize, status: status, jobTitle: jobTitle, phone: phone, address: address, avatarUrl: avatarUrl, notificationEmail: notificationEmail, name: name, login: login, id: id, type: type };
}
exports.deserializeUser = deserializeUser;
function serializeUser(val) {
    const base = serializeUserMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"User\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["language"]: val.language, ["timezone"]: val.timezone, ["space_amount"]: val.spaceAmount, ["space_used"]: val.spaceUsed, ["max_upload_size"]: val.maxUploadSize, ["status"]: val.status === void 0 ? void 0 : serializeUserStatusField(val.status), ["job_title"]: val.jobTitle, ["phone"]: val.phone, ["address"]: val.address, ["avatar_url"]: val.avatarUrl, ["notification_email"]: val.notificationEmail === void 0 ? void 0 : serializeUserNotificationEmailField(val.notificationEmail) });
}
exports.serializeUser = serializeUser;
function deserializeUsers(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Users\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Users\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Users\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"Users\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"Users\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeUsersOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Users\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeUser(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeUsers = deserializeUsers;
function serializeUsers(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeUsersOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeUser(item);
        }) };
}
exports.serializeUsers = serializeUsers;
function deserializeTrashWebLinkRestored(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashWebLinkRestored\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeTrashWebLinkRestoredTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashWebLinkRestored\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.sequence_id === void 0) {
        throw "Expecting \"sequence_id\" of type \"TrashWebLinkRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashWebLinkRestored\"";
    }
    const sequenceId = val.sequence_id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashWebLinkRestored\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashWebLinkRestored\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"TrashWebLinkRestored\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"TrashWebLinkRestored\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"TrashWebLinkRestored\" to be defined";
    }
    const pathCollection = deserializeTrashWebLinkRestoredPathCollectionField(val.path_collection);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TrashWebLinkRestored\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TrashWebLinkRestored\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"TrashWebLinkRestored\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"TrashWebLinkRestored\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by === void 0 ? void 0 : deserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by === void 0 ? void 0 : deserializeUserMini(val.owned_by);
    if (!(val.shared_link === void 0) && !(0, json_js_1.isJson)(val.shared_link, "string")) {
        throw "Expecting string for \"shared_link\" of type \"TrashWebLinkRestored\"";
    }
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const itemStatus = val.item_status === void 0 ? void 0 : deserializeTrashWebLinkRestoredItemStatusField(val.item_status);
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name, url: url, parent: parent, description: description, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, itemStatus: itemStatus };
}
exports.deserializeTrashWebLinkRestored = deserializeTrashWebLinkRestored;
function serializeTrashWebLinkRestored(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeTrashWebLinkRestoredTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name, ["url"]: val.url, ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["description"]: val.description, ["path_collection"]: serializeTrashWebLinkRestoredPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy === void 0 ? void 0 : serializeUserMini(val.modifiedBy), ["owned_by"]: val.ownedBy === void 0 ? void 0 : serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["item_status"]: val.itemStatus === void 0 ? void 0 : serializeTrashWebLinkRestoredItemStatusField(val.itemStatus) };
}
exports.serializeTrashWebLinkRestored = serializeTrashWebLinkRestored;
function deserializeTrashFolderRestored(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFolderRestored\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashFolderRestored\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashFolderRestored\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const type = val.type === void 0 ? void 0 : deserializeTrashFolderRestoredTypeField(val.type);
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashFolderRestored\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashFolderRestored\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TrashFolderRestored\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TrashFolderRestored\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"TrashFolderRestored\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (!(val.size === void 0) && !(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"TrashFolderRestored\"";
    }
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    const pathCollection = val.path_collection === void 0 ? void 0 : deserializeTrashFolderRestoredPathCollectionField(val.path_collection);
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by === void 0 ? void 0 : deserializeUserMini(val.modified_by);
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"TrashFolderRestored\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"TrashFolderRestored\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"TrashFolderRestored\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"TrashFolderRestored\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const ownedBy = val.owned_by === void 0 ? void 0 : deserializeUserMini(val.owned_by);
    if (!(val.shared_link === void 0) && !(0, json_js_1.isJson)(val.shared_link, "string")) {
        throw "Expecting string for \"shared_link\" of type \"TrashFolderRestored\"";
    }
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    if (!(val.folder_upload_email === void 0) && !(0, json_js_1.isJson)(val.folder_upload_email, "string")) {
        throw "Expecting string for \"folder_upload_email\" of type \"TrashFolderRestored\"";
    }
    const folderUploadEmail = (0, json_js_1.isJson)(val.folder_upload_email, "string") ? val.folder_upload_email : void 0;
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    const itemStatus = val.item_status === void 0 ? void 0 : deserializeTrashFolderRestoredItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus };
}
exports.deserializeTrashFolderRestored = deserializeTrashFolderRestored;
function serializeTrashFolderRestored(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: val.type === void 0 ? void 0 : serializeTrashFolderRestoredTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["description"]: val.description, ["size"]: val.size, ["path_collection"]: val.pathCollection === void 0 ? void 0 : serializeTrashFolderRestoredPathCollectionField(val.pathCollection), ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy === void 0 ? void 0 : serializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["owned_by"]: val.ownedBy === void 0 ? void 0 : serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["folder_upload_email"]: val.folderUploadEmail, ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["item_status"]: val.itemStatus === void 0 ? void 0 : serializeTrashFolderRestoredItemStatusField(val.itemStatus) };
}
exports.serializeTrashFolderRestored = serializeTrashFolderRestored;
function deserializeTrashFileRestored(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFileRestored\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"TrashFileRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashFileRestored\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashFileRestored\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TrashFileRestored\" to be defined";
    }
    const type = deserializeTrashFileRestoredTypeField(val.type);
    if (val.sequence_id === void 0) {
        throw "Expecting \"sequence_id\" of type \"TrashFileRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashFileRestored\"";
    }
    const sequenceId = val.sequence_id;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashFileRestored\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.sha1 === void 0) {
        throw "Expecting \"sha1\" of type \"TrashFileRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"TrashFileRestored\"";
    }
    const sha1 = val.sha1;
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    if (val.description === void 0) {
        throw "Expecting \"description\" of type \"TrashFileRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"TrashFileRestored\"";
    }
    const description = val.description;
    if (val.size === void 0) {
        throw "Expecting \"size\" of type \"TrashFileRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"TrashFileRestored\"";
    }
    const size = val.size;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"TrashFileRestored\" to be defined";
    }
    const pathCollection = deserializeTrashFileRestoredPathCollectionField(val.path_collection);
    if (val.created_at === void 0) {
        throw "Expecting \"created_at\" of type \"TrashFileRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TrashFileRestored\"";
    }
    const createdAt = val.created_at;
    if (val.modified_at === void 0) {
        throw "Expecting \"modified_at\" of type \"TrashFileRestored\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TrashFileRestored\"";
    }
    const modifiedAt = val.modified_at;
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"TrashFileRestored\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"TrashFileRestored\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"TrashFileRestored\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"TrashFileRestored\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (val.modified_by === void 0) {
        throw "Expecting \"modified_by\" of type \"TrashFileRestored\" to be defined";
    }
    const modifiedBy = deserializeUserMini(val.modified_by);
    if (val.owned_by === void 0) {
        throw "Expecting \"owned_by\" of type \"TrashFileRestored\" to be defined";
    }
    const ownedBy = deserializeUserMini(val.owned_by);
    if (!(val.shared_link === void 0) && !(0, json_js_1.isJson)(val.shared_link, "string")) {
        throw "Expecting string for \"shared_link\" of type \"TrashFileRestored\"";
    }
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (val.item_status === void 0) {
        throw "Expecting \"item_status\" of type \"TrashFileRestored\" to be defined";
    }
    const itemStatus = deserializeTrashFileRestoredItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus };
}
exports.deserializeTrashFileRestored = deserializeTrashFileRestored;
function serializeTrashFileRestored(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: serializeTrashFileRestoredTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["sha1"]: val.sha1, ["file_version"]: val.fileVersion === void 0 ? void 0 : serializeFileVersionMini(val.fileVersion), ["description"]: val.description, ["size"]: val.size, ["path_collection"]: serializeTrashFileRestoredPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["modified_by"]: serializeUserMini(val.modifiedBy), ["owned_by"]: serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["item_status"]: serializeTrashFileRestoredItemStatusField(val.itemStatus) };
}
exports.serializeTrashFileRestored = serializeTrashFileRestored;
function deserializeTrashWebLink(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashWebLink\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeTrashWebLinkTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashWebLink\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashWebLink\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashWebLink\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashWebLink\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"TrashWebLink\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"TrashWebLink\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const pathCollection = val.path_collection === void 0 ? void 0 : deserializeTrashWebLinkPathCollectionField(val.path_collection);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TrashWebLink\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TrashWebLink\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"TrashWebLink\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"TrashWebLink\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by === void 0 ? void 0 : deserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by === void 0 ? void 0 : deserializeUserMini(val.owned_by);
    if (!(val.shared_link === void 0) && !(0, json_js_1.isJson)(val.shared_link, "string")) {
        throw "Expecting string for \"shared_link\" of type \"TrashWebLink\"";
    }
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const itemStatus = val.item_status === void 0 ? void 0 : deserializeTrashWebLinkItemStatusField(val.item_status);
    return { type: type, id: id, sequenceId: sequenceId, etag: etag, name: name, url: url, parent: parent, description: description, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, itemStatus: itemStatus };
}
exports.deserializeTrashWebLink = deserializeTrashWebLink;
function serializeTrashWebLink(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeTrashWebLinkTypeField(val.type), ["id"]: val.id, ["sequence_id"]: val.sequenceId, ["etag"]: val.etag, ["name"]: val.name, ["url"]: val.url, ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["description"]: val.description, ["path_collection"]: val.pathCollection === void 0 ? void 0 : serializeTrashWebLinkPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy === void 0 ? void 0 : serializeUserMini(val.modifiedBy), ["owned_by"]: val.ownedBy === void 0 ? void 0 : serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["item_status"]: val.itemStatus === void 0 ? void 0 : serializeTrashWebLinkItemStatusField(val.itemStatus) };
}
exports.serializeTrashWebLink = serializeTrashWebLink;
function deserializeTrashFolder(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFolder\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"TrashFolder\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashFolder\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashFolder\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TrashFolder\" to be defined";
    }
    const type = deserializeTrashFolderTypeField(val.type);
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashFolder\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (val.name === void 0) {
        throw "Expecting \"name\" of type \"TrashFolder\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashFolder\"";
    }
    const name = val.name;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TrashFolder\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TrashFolder\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (val.description === void 0) {
        throw "Expecting \"description\" of type \"TrashFolder\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"TrashFolder\"";
    }
    const description = val.description;
    if (val.size === void 0) {
        throw "Expecting \"size\" of type \"TrashFolder\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"TrashFolder\"";
    }
    const size = val.size;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"TrashFolder\" to be defined";
    }
    const pathCollection = deserializeTrashFolderPathCollectionField(val.path_collection);
    if (val.created_by === void 0) {
        throw "Expecting \"created_by\" of type \"TrashFolder\" to be defined";
    }
    const createdBy = deserializeUserMini(val.created_by);
    if (val.modified_by === void 0) {
        throw "Expecting \"modified_by\" of type \"TrashFolder\" to be defined";
    }
    const modifiedBy = deserializeUserMini(val.modified_by);
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"TrashFolder\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"TrashFolder\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"TrashFolder\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"TrashFolder\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    if (val.owned_by === void 0) {
        throw "Expecting \"owned_by\" of type \"TrashFolder\" to be defined";
    }
    const ownedBy = deserializeUserMini(val.owned_by);
    if (!(val.shared_link === void 0) && !(0, json_js_1.isJson)(val.shared_link, "string")) {
        throw "Expecting string for \"shared_link\" of type \"TrashFolder\"";
    }
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    if (!(val.folder_upload_email === void 0) && !(0, json_js_1.isJson)(val.folder_upload_email, "string")) {
        throw "Expecting string for \"folder_upload_email\" of type \"TrashFolder\"";
    }
    const folderUploadEmail = (0, json_js_1.isJson)(val.folder_upload_email, "string") ? val.folder_upload_email : void 0;
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (val.item_status === void 0) {
        throw "Expecting \"item_status\" of type \"TrashFolder\" to be defined";
    }
    const itemStatus = deserializeTrashFolderItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus };
}
exports.deserializeTrashFolder = deserializeTrashFolder;
function serializeTrashFolder(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: serializeTrashFolderTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["description"]: val.description, ["size"]: val.size, ["path_collection"]: serializeTrashFolderPathCollectionField(val.pathCollection), ["created_by"]: serializeUserMini(val.createdBy), ["modified_by"]: serializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["owned_by"]: serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["folder_upload_email"]: val.folderUploadEmail, ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["item_status"]: serializeTrashFolderItemStatusField(val.itemStatus) };
}
exports.serializeTrashFolder = serializeTrashFolder;
function deserializeTrashFile(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrashFile\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"TrashFile\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TrashFile\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"TrashFile\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TrashFile\" to be defined";
    }
    const type = deserializeTrashFileTypeField(val.type);
    if (val.sequence_id === void 0) {
        throw "Expecting \"sequence_id\" of type \"TrashFile\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"TrashFile\"";
    }
    const sequenceId = val.sequence_id;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrashFile\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.sha1 === void 0) {
        throw "Expecting \"sha1\" of type \"TrashFile\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"TrashFile\"";
    }
    const sha1 = val.sha1;
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    if (val.description === void 0) {
        throw "Expecting \"description\" of type \"TrashFile\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"TrashFile\"";
    }
    const description = val.description;
    if (val.size === void 0) {
        throw "Expecting \"size\" of type \"TrashFile\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"TrashFile\"";
    }
    const size = val.size;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"TrashFile\" to be defined";
    }
    const pathCollection = deserializeTrashFilePathCollectionField(val.path_collection);
    if (val.created_at === void 0) {
        throw "Expecting \"created_at\" of type \"TrashFile\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TrashFile\"";
    }
    const createdAt = val.created_at;
    if (val.modified_at === void 0) {
        throw "Expecting \"modified_at\" of type \"TrashFile\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TrashFile\"";
    }
    const modifiedAt = val.modified_at;
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"TrashFile\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"TrashFile\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"TrashFile\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"TrashFile\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (val.modified_by === void 0) {
        throw "Expecting \"modified_by\" of type \"TrashFile\" to be defined";
    }
    const modifiedBy = deserializeUserMini(val.modified_by);
    if (val.owned_by === void 0) {
        throw "Expecting \"owned_by\" of type \"TrashFile\" to be defined";
    }
    const ownedBy = deserializeUserMini(val.owned_by);
    if (!(val.shared_link === void 0) && !(0, json_js_1.isJson)(val.shared_link, "string")) {
        throw "Expecting string for \"shared_link\" of type \"TrashFile\"";
    }
    const sharedLink = (0, json_js_1.isJson)(val.shared_link, "string") ? val.shared_link : void 0;
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (val.item_status === void 0) {
        throw "Expecting \"item_status\" of type \"TrashFile\" to be defined";
    }
    const itemStatus = deserializeTrashFileItemStatusField(val.item_status);
    return { id: id, etag: etag, type: type, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus };
}
exports.deserializeTrashFile = deserializeTrashFile;
function serializeTrashFile(val) {
    return { ["id"]: val.id, ["etag"]: val.etag, ["type"]: serializeTrashFileTypeField(val.type), ["sequence_id"]: val.sequenceId, ["name"]: val.name, ["sha1"]: val.sha1, ["file_version"]: val.fileVersion === void 0 ? void 0 : serializeFileVersionMini(val.fileVersion), ["description"]: val.description, ["size"]: val.size, ["path_collection"]: serializeTrashFilePathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["modified_by"]: serializeUserMini(val.modifiedBy), ["owned_by"]: serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink, ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["item_status"]: serializeTrashFileItemStatusField(val.itemStatus) };
}
exports.serializeTrashFile = serializeTrashFile;
function deserializeTermsOfServiceUserStatus(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TermsOfServiceUserStatus\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TermsOfServiceUserStatus\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeTermsOfServiceUserStatusTypeField(val.type);
    const tos = val.tos === void 0 ? void 0 : deserializeTermsOfServiceBase(val.tos);
    const user = val.user === void 0 ? void 0 : deserializeUserMini(val.user);
    if (!(val.is_accepted === void 0) && !(0, json_js_1.isJson)(val.is_accepted, "boolean")) {
        throw "Expecting boolean for \"is_accepted\" of type \"TermsOfServiceUserStatus\"";
    }
    const isAccepted = (0, json_js_1.isJson)(val.is_accepted, "boolean") ? val.is_accepted : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TermsOfServiceUserStatus\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"TermsOfServiceUserStatus\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, tos: tos, user: user, isAccepted: isAccepted, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.deserializeTermsOfServiceUserStatus = deserializeTermsOfServiceUserStatus;
function serializeTermsOfServiceUserStatus(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeTermsOfServiceUserStatusTypeField(val.type), ["tos"]: val.tos === void 0 ? void 0 : serializeTermsOfServiceBase(val.tos), ["user"]: val.user === void 0 ? void 0 : serializeUserMini(val.user), ["is_accepted"]: val.isAccepted, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.serializeTermsOfServiceUserStatus = serializeTermsOfServiceUserStatus;
function deserializeTermsOfServiceUserStatuses(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TermsOfServiceUserStatuses\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TermsOfServiceUserStatuses\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TermsOfServiceUserStatuses\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeTermsOfServiceUserStatus(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTermsOfServiceUserStatuses = deserializeTermsOfServiceUserStatuses;
function serializeTermsOfServiceUserStatuses(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeTermsOfServiceUserStatus(item);
        }) };
}
exports.serializeTermsOfServiceUserStatuses = serializeTermsOfServiceUserStatuses;
function deserializeTaskAssignment(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TaskAssignment\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TaskAssignment\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeTaskAssignmentTypeField(val.type);
    const item = val.item === void 0 ? void 0 : deserializeFileMini(val.item);
    const assignedTo = val.assigned_to === void 0 ? void 0 : deserializeUserMini(val.assigned_to);
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"TaskAssignment\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    if (!(val.completed_at === void 0) && !(0, json_js_1.isJson)(val.completed_at, "string")) {
        throw "Expecting string for \"completed_at\" of type \"TaskAssignment\"";
    }
    const completedAt = (0, json_js_1.isJson)(val.completed_at, "string") ? val.completed_at : void 0;
    if (!(val.assigned_at === void 0) && !(0, json_js_1.isJson)(val.assigned_at, "string")) {
        throw "Expecting string for \"assigned_at\" of type \"TaskAssignment\"";
    }
    const assignedAt = (0, json_js_1.isJson)(val.assigned_at, "string") ? val.assigned_at : void 0;
    if (!(val.reminded_at === void 0) && !(0, json_js_1.isJson)(val.reminded_at, "string")) {
        throw "Expecting string for \"reminded_at\" of type \"TaskAssignment\"";
    }
    const remindedAt = (0, json_js_1.isJson)(val.reminded_at, "string") ? val.reminded_at : void 0;
    const resolutionState = val.resolution_state === void 0 ? void 0 : deserializeTaskAssignmentResolutionStateField(val.resolution_state);
    const assignedBy = val.assigned_by === void 0 ? void 0 : deserializeUserMini(val.assigned_by);
    return { id: id, type: type, item: item, assignedTo: assignedTo, message: message, completedAt: completedAt, assignedAt: assignedAt, remindedAt: remindedAt, resolutionState: resolutionState, assignedBy: assignedBy };
}
exports.deserializeTaskAssignment = deserializeTaskAssignment;
function serializeTaskAssignment(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeTaskAssignmentTypeField(val.type), ["item"]: val.item === void 0 ? void 0 : serializeFileMini(val.item), ["assigned_to"]: val.assignedTo === void 0 ? void 0 : serializeUserMini(val.assignedTo), ["message"]: val.message, ["completed_at"]: val.completedAt, ["assigned_at"]: val.assignedAt, ["reminded_at"]: val.remindedAt, ["resolution_state"]: val.resolutionState === void 0 ? void 0 : serializeTaskAssignmentResolutionStateField(val.resolutionState), ["assigned_by"]: val.assignedBy === void 0 ? void 0 : serializeUserMini(val.assignedBy) };
}
exports.serializeTaskAssignment = serializeTaskAssignment;
function deserializeTaskAssignments(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TaskAssignments\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"TaskAssignments\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TaskAssignments\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeTaskAssignment(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTaskAssignments = deserializeTaskAssignments;
function serializeTaskAssignments(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeTaskAssignment(item);
        }) };
}
exports.serializeTaskAssignments = serializeTaskAssignments;
function deserializeTask(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Task\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Task\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeTaskTypeField(val.type);
    const item = val.item === void 0 ? void 0 : deserializeFileMini(val.item);
    if (!(val.due_at === void 0) && !(0, json_js_1.isJson)(val.due_at, "string")) {
        throw "Expecting string for \"due_at\" of type \"Task\"";
    }
    const dueAt = (0, json_js_1.isJson)(val.due_at, "string") ? val.due_at : void 0;
    const action = val.action === void 0 ? void 0 : deserializeTaskActionField(val.action);
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"Task\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const taskAssignmentCollection = val.task_assignment_collection === void 0 ? void 0 : deserializeTaskAssignments(val.task_assignment_collection);
    if (!(val.is_completed === void 0) && !(0, json_js_1.isJson)(val.is_completed, "boolean")) {
        throw "Expecting boolean for \"is_completed\" of type \"Task\"";
    }
    const isCompleted = (0, json_js_1.isJson)(val.is_completed, "boolean") ? val.is_completed : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Task\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const completionRule = val.completion_rule === void 0 ? void 0 : deserializeTaskCompletionRuleField(val.completion_rule);
    return { id: id, type: type, item: item, dueAt: dueAt, action: action, message: message, taskAssignmentCollection: taskAssignmentCollection, isCompleted: isCompleted, createdBy: createdBy, createdAt: createdAt, completionRule: completionRule };
}
exports.deserializeTask = deserializeTask;
function serializeTask(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeTaskTypeField(val.type), ["item"]: val.item === void 0 ? void 0 : serializeFileMini(val.item), ["due_at"]: val.dueAt, ["action"]: val.action === void 0 ? void 0 : serializeTaskActionField(val.action), ["message"]: val.message, ["task_assignment_collection"]: val.taskAssignmentCollection === void 0 ? void 0 : serializeTaskAssignments(val.taskAssignmentCollection), ["is_completed"]: val.isCompleted, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["completion_rule"]: val.completionRule === void 0 ? void 0 : serializeTaskCompletionRuleField(val.completionRule) };
}
exports.serializeTask = serializeTask;
function deserializeTasks(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Tasks\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Tasks\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Tasks\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeTask(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeTasks = deserializeTasks;
function serializeTasks(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeTask(item);
        }) };
}
exports.serializeTasks = serializeTasks;
function deserializeRetentionPolicyAssignment(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicyAssignment\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"RetentionPolicyAssignment\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeRetentionPolicyAssignmentTypeField(val.type);
    const retentionPolicy = val.retention_policy === void 0 ? void 0 : deserializeRetentionPolicyMini(val.retention_policy);
    const assignedTo = val.assigned_to === void 0 ? void 0 : deserializeRetentionPolicyAssignmentAssignedToField(val.assigned_to);
    if (!(val.filter_fields === void 0) && !(0, json_js_1.isJson)(val.filter_fields, "array")) {
        throw "Expecting array for \"filter_fields\" of type \"RetentionPolicyAssignment\"";
    }
    const filterFields = (0, json_js_1.isJson)(val.filter_fields, "array") ? val.filter_fields.map(function (itm) {
        return deserializeRetentionPolicyAssignmentFilterFieldsField(itm);
    }) : void 0;
    const assignedBy = val.assigned_by === void 0 ? void 0 : deserializeUserMini(val.assigned_by);
    if (!(val.assigned_at === void 0) && !(0, json_js_1.isJson)(val.assigned_at, "string")) {
        throw "Expecting string for \"assigned_at\" of type \"RetentionPolicyAssignment\"";
    }
    const assignedAt = (0, json_js_1.isJson)(val.assigned_at, "string") ? val.assigned_at : void 0;
    if (!(val.start_date_field === void 0) && !(0, json_js_1.isJson)(val.start_date_field, "string")) {
        throw "Expecting string for \"start_date_field\" of type \"RetentionPolicyAssignment\"";
    }
    const startDateField = (0, json_js_1.isJson)(val.start_date_field, "string") ? val.start_date_field : void 0;
    return { id: id, type: type, retentionPolicy: retentionPolicy, assignedTo: assignedTo, filterFields: filterFields, assignedBy: assignedBy, assignedAt: assignedAt, startDateField: startDateField };
}
exports.deserializeRetentionPolicyAssignment = deserializeRetentionPolicyAssignment;
function serializeRetentionPolicyAssignment(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeRetentionPolicyAssignmentTypeField(val.type), ["retention_policy"]: val.retentionPolicy === void 0 ? void 0 : serializeRetentionPolicyMini(val.retentionPolicy), ["assigned_to"]: val.assignedTo === void 0 ? void 0 : serializeRetentionPolicyAssignmentAssignedToField(val.assignedTo), ["filter_fields"]: val.filterFields === void 0 ? void 0 : val.filterFields.map(function (item) {
            return serializeRetentionPolicyAssignmentFilterFieldsField(item);
        }), ["assigned_by"]: val.assignedBy === void 0 ? void 0 : serializeUserMini(val.assignedBy), ["assigned_at"]: val.assignedAt, ["start_date_field"]: val.startDateField };
}
exports.serializeRetentionPolicyAssignment = serializeRetentionPolicyAssignment;
function deserializeRetentionPolicy(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RetentionPolicy\"";
    }
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"RetentionPolicy\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const policyType = val.policy_type === void 0 ? void 0 : deserializeRetentionPolicyPolicyTypeField(val.policy_type);
    const retentionType = val.retention_type === void 0 ? void 0 : deserializeRetentionPolicyRetentionTypeField(val.retention_type);
    const status = val.status === void 0 ? void 0 : deserializeRetentionPolicyStatusField(val.status);
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"RetentionPolicy\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"RetentionPolicy\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.can_owner_extend_retention === void 0) && !(0, json_js_1.isJson)(val.can_owner_extend_retention, "boolean")) {
        throw "Expecting boolean for \"can_owner_extend_retention\" of type \"RetentionPolicy\"";
    }
    const canOwnerExtendRetention = (0, json_js_1.isJson)(val.can_owner_extend_retention, "boolean") ? val.can_owner_extend_retention : void 0;
    if (!(val.are_owners_notified === void 0) && !(0, json_js_1.isJson)(val.are_owners_notified, "boolean")) {
        throw "Expecting boolean for \"are_owners_notified\" of type \"RetentionPolicy\"";
    }
    const areOwnersNotified = (0, json_js_1.isJson)(val.are_owners_notified, "boolean") ? val.are_owners_notified : void 0;
    if (!(val.custom_notification_recipients === void 0) && !(0, json_js_1.isJson)(val.custom_notification_recipients, "array")) {
        throw "Expecting array for \"custom_notification_recipients\" of type \"RetentionPolicy\"";
    }
    const customNotificationRecipients = (0, json_js_1.isJson)(val.custom_notification_recipients, "array") ? val.custom_notification_recipients.map(function (itm) {
        return deserializeUserMini(itm);
    }) : void 0;
    const assignmentCounts = val.assignment_counts === void 0 ? void 0 : deserializeRetentionPolicyAssignmentCountsField(val.assignment_counts);
    if (!(val.policy_name === void 0) && !(0, json_js_1.isJson)(val.policy_name, "string")) {
        throw "Expecting string for \"policy_name\" of type \"RetentionPolicy\"";
    }
    const policyName = (0, json_js_1.isJson)(val.policy_name, "string") ? val.policy_name : void 0;
    if (!(val.retention_length === void 0) && !(0, json_js_1.isJson)(val.retention_length, "string")) {
        throw "Expecting string for \"retention_length\" of type \"RetentionPolicy\"";
    }
    const retentionLength = (0, json_js_1.isJson)(val.retention_length, "string") ? val.retention_length : void 0;
    const dispositionAction = val.disposition_action === void 0 ? void 0 : deserializeRetentionPolicyMiniDispositionActionField(val.disposition_action);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"RetentionPolicy\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"RetentionPolicy\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"RetentionPolicy\" to be defined";
    }
    const type = deserializeRetentionPolicyBaseTypeField(val.type);
    return { description: description, policyType: policyType, retentionType: retentionType, status: status, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, canOwnerExtendRetention: canOwnerExtendRetention, areOwnersNotified: areOwnersNotified, customNotificationRecipients: customNotificationRecipients, assignmentCounts: assignmentCounts, policyName: policyName, retentionLength: retentionLength, dispositionAction: dispositionAction, id: id, type: type };
}
exports.deserializeRetentionPolicy = deserializeRetentionPolicy;
function serializeRetentionPolicy(val) {
    const base = serializeRetentionPolicyMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"RetentionPolicy\"";
    }
    return Object.assign(Object.assign({}, base), { ["description"]: val.description, ["policy_type"]: val.policyType === void 0 ? void 0 : serializeRetentionPolicyPolicyTypeField(val.policyType), ["retention_type"]: val.retentionType === void 0 ? void 0 : serializeRetentionPolicyRetentionTypeField(val.retentionType), ["status"]: val.status === void 0 ? void 0 : serializeRetentionPolicyStatusField(val.status), ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["can_owner_extend_retention"]: val.canOwnerExtendRetention, ["are_owners_notified"]: val.areOwnersNotified, ["custom_notification_recipients"]: val.customNotificationRecipients === void 0 ? void 0 : val.customNotificationRecipients.map(function (item) {
            return serializeUserMini(item);
        }), ["assignment_counts"]: val.assignmentCounts === void 0 ? void 0 : serializeRetentionPolicyAssignmentCountsField(val.assignmentCounts) });
}
exports.serializeRetentionPolicy = serializeRetentionPolicy;
function deserializeLegalHoldPolicy(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicy\"";
    }
    if (!(val.policy_name === void 0) && !(0, json_js_1.isJson)(val.policy_name, "string")) {
        throw "Expecting string for \"policy_name\" of type \"LegalHoldPolicy\"";
    }
    const policyName = (0, json_js_1.isJson)(val.policy_name, "string") ? val.policy_name : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"LegalHoldPolicy\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status === void 0 ? void 0 : deserializeLegalHoldPolicyStatusField(val.status);
    const assignmentCounts = val.assignment_counts === void 0 ? void 0 : deserializeLegalHoldPolicyAssignmentCountsField(val.assignment_counts);
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"LegalHoldPolicy\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"LegalHoldPolicy\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.deleted_at === void 0) && !(0, json_js_1.isJson)(val.deleted_at, "string")) {
        throw "Expecting string for \"deleted_at\" of type \"LegalHoldPolicy\"";
    }
    const deletedAt = (0, json_js_1.isJson)(val.deleted_at, "string") ? val.deleted_at : void 0;
    if (!(val.filter_started_at === void 0) && !(0, json_js_1.isJson)(val.filter_started_at, "string")) {
        throw "Expecting string for \"filter_started_at\" of type \"LegalHoldPolicy\"";
    }
    const filterStartedAt = (0, json_js_1.isJson)(val.filter_started_at, "string") ? val.filter_started_at : void 0;
    if (!(val.filter_ended_at === void 0) && !(0, json_js_1.isJson)(val.filter_ended_at, "string")) {
        throw "Expecting string for \"filter_ended_at\" of type \"LegalHoldPolicy\"";
    }
    const filterEndedAt = (0, json_js_1.isJson)(val.filter_ended_at, "string") ? val.filter_ended_at : void 0;
    if (!(val.release_notes === void 0) && !(0, json_js_1.isJson)(val.release_notes, "string")) {
        throw "Expecting string for \"release_notes\" of type \"LegalHoldPolicy\"";
    }
    const releaseNotes = (0, json_js_1.isJson)(val.release_notes, "string") ? val.release_notes : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"LegalHoldPolicy\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeLegalHoldPolicyMiniTypeField(val.type);
    return { policyName: policyName, description: description, status: status, assignmentCounts: assignmentCounts, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, deletedAt: deletedAt, filterStartedAt: filterStartedAt, filterEndedAt: filterEndedAt, releaseNotes: releaseNotes, id: id, type: type };
}
exports.deserializeLegalHoldPolicy = deserializeLegalHoldPolicy;
function serializeLegalHoldPolicy(val) {
    const base = serializeLegalHoldPolicyMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"LegalHoldPolicy\"";
    }
    return Object.assign(Object.assign({}, base), { ["policy_name"]: val.policyName, ["description"]: val.description, ["status"]: val.status === void 0 ? void 0 : serializeLegalHoldPolicyStatusField(val.status), ["assignment_counts"]: val.assignmentCounts === void 0 ? void 0 : serializeLegalHoldPolicyAssignmentCountsField(val.assignmentCounts), ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["deleted_at"]: val.deletedAt, ["filter_started_at"]: val.filterStartedAt, ["filter_ended_at"]: val.filterEndedAt, ["release_notes"]: val.releaseNotes });
}
exports.serializeLegalHoldPolicy = serializeLegalHoldPolicy;
function deserializeLegalHoldPolicies(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicies\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"LegalHoldPolicies\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"LegalHoldPolicies\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"LegalHoldPolicies\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"LegalHoldPolicies\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeLegalHoldPolicy(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeLegalHoldPolicies = deserializeLegalHoldPolicies;
function serializeLegalHoldPolicies(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeLegalHoldPolicy(item);
        }) };
}
exports.serializeLegalHoldPolicies = serializeLegalHoldPolicies;
function deserializeInvite(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Invite\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Invite\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeInviteTypeField(val.type);
    const invitedTo = val.invited_to === void 0 ? void 0 : deserializeInviteInvitedToField(val.invited_to);
    const actionableBy = val.actionable_by === void 0 ? void 0 : deserializeUserMini(val.actionable_by);
    const invitedBy = val.invited_by === void 0 ? void 0 : deserializeUserMini(val.invited_by);
    if (!(val.status === void 0) && !(0, json_js_1.isJson)(val.status, "string")) {
        throw "Expecting string for \"status\" of type \"Invite\"";
    }
    const status = (0, json_js_1.isJson)(val.status, "string") ? val.status : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Invite\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"Invite\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, invitedTo: invitedTo, actionableBy: actionableBy, invitedBy: invitedBy, status: status, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.deserializeInvite = deserializeInvite;
function serializeInvite(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeInviteTypeField(val.type), ["invited_to"]: val.invitedTo === void 0 ? void 0 : serializeInviteInvitedToField(val.invitedTo), ["actionable_by"]: val.actionableBy === void 0 ? void 0 : serializeUserMini(val.actionableBy), ["invited_by"]: val.invitedBy === void 0 ? void 0 : serializeUserMini(val.invitedBy), ["status"]: val.status, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.serializeInvite = serializeInvite;
function deserializeGroupMembership(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupMembership\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"GroupMembership\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeGroupMembershipTypeField(val.type);
    const user = val.user === void 0 ? void 0 : deserializeUserMini(val.user);
    const group = val.group === void 0 ? void 0 : deserializeGroupMini(val.group);
    const role = val.role === void 0 ? void 0 : deserializeGroupMembershipRoleField(val.role);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"GroupMembership\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"GroupMembership\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { id: id, type: type, user: user, group: group, role: role, createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.deserializeGroupMembership = deserializeGroupMembership;
function serializeGroupMembership(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeGroupMembershipTypeField(val.type), ["user"]: val.user === void 0 ? void 0 : serializeUserMini(val.user), ["group"]: val.group === void 0 ? void 0 : serializeGroupMini(val.group), ["role"]: val.role === void 0 ? void 0 : serializeGroupMembershipRoleField(val.role), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.serializeGroupMembership = serializeGroupMembership;
function deserializeGroupMemberships(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"GroupMemberships\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"GroupMemberships\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"GroupMemberships\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"GroupMemberships\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"GroupMemberships\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeGroupMembershipsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"GroupMemberships\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeGroupMembership(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeGroupMemberships = deserializeGroupMemberships;
function serializeGroupMemberships(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeGroupMembershipsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeGroupMembership(item);
        }) };
}
exports.serializeGroupMemberships = serializeGroupMemberships;
function deserializeFileVersion(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersion\"";
    }
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FileVersion\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.size === void 0) && !(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"FileVersion\"";
    }
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"FileVersion\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"FileVersion\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const modifiedBy = val.modified_by === void 0 ? void 0 : deserializeUserMini(val.modified_by);
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"FileVersion\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const trashedBy = val.trashed_by === void 0 ? void 0 : deserializeUserMini(val.trashed_by);
    if (!(val.restored_at === void 0) && !(0, json_js_1.isJson)(val.restored_at, "string")) {
        throw "Expecting string for \"restored_at\" of type \"FileVersion\"";
    }
    const restoredAt = (0, json_js_1.isJson)(val.restored_at, "string") ? val.restored_at : void 0;
    const restoredBy = val.restored_by === void 0 ? void 0 : deserializeUserMini(val.restored_by);
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"FileVersion\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.uploader_display_name === void 0) && !(0, json_js_1.isJson)(val.uploader_display_name, "string")) {
        throw "Expecting string for \"uploader_display_name\" of type \"FileVersion\"";
    }
    const uploaderDisplayName = (0, json_js_1.isJson)(val.uploader_display_name, "string") ? val.uploader_display_name : void 0;
    if (!(val.sha1 === void 0) && !(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"FileVersion\"";
    }
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileVersion\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileVersion\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileVersion\" to be defined";
    }
    const type = deserializeFileVersionBaseTypeField(val.type);
    return { name: name, size: size, createdAt: createdAt, modifiedAt: modifiedAt, modifiedBy: modifiedBy, trashedAt: trashedAt, trashedBy: trashedBy, restoredAt: restoredAt, restoredBy: restoredBy, purgedAt: purgedAt, uploaderDisplayName: uploaderDisplayName, sha1: sha1, id: id, type: type };
}
exports.deserializeFileVersion = deserializeFileVersion;
function serializeFileVersion(val) {
    const base = serializeFileVersionMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileVersion\"";
    }
    return Object.assign(Object.assign({}, base), { ["name"]: val.name, ["size"]: val.size, ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["modified_by"]: val.modifiedBy === void 0 ? void 0 : serializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["trashed_by"]: val.trashedBy === void 0 ? void 0 : serializeUserMini(val.trashedBy), ["restored_at"]: val.restoredAt, ["restored_by"]: val.restoredBy === void 0 ? void 0 : serializeUserMini(val.restoredBy), ["purged_at"]: val.purgedAt, ["uploader_display_name"]: val.uploaderDisplayName });
}
exports.serializeFileVersion = serializeFileVersion;
function deserializeFileVersions(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersions\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"FileVersions\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"FileVersions\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"FileVersions\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"FileVersions\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeFileVersionsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FileVersions\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeFileVersion(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeFileVersions = deserializeFileVersions;
function serializeFileVersions(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeFileVersionsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeFileVersion(item);
        }) };
}
exports.serializeFileVersions = serializeFileVersions;
function deserializeFileVersionFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionFull\"";
    }
    if (!(val.version_number === void 0) && !(0, json_js_1.isJson)(val.version_number, "string")) {
        throw "Expecting string for \"version_number\" of type \"FileVersionFull\"";
    }
    const versionNumber = (0, json_js_1.isJson)(val.version_number, "string") ? val.version_number : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FileVersionFull\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.size === void 0) && !(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"FileVersionFull\"";
    }
    const size = (0, json_js_1.isJson)(val.size, "number") ? val.size : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"FileVersionFull\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"FileVersionFull\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const modifiedBy = val.modified_by === void 0 ? void 0 : deserializeUserMini(val.modified_by);
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"FileVersionFull\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    const trashedBy = val.trashed_by === void 0 ? void 0 : deserializeUserMini(val.trashed_by);
    if (!(val.restored_at === void 0) && !(0, json_js_1.isJson)(val.restored_at, "string")) {
        throw "Expecting string for \"restored_at\" of type \"FileVersionFull\"";
    }
    const restoredAt = (0, json_js_1.isJson)(val.restored_at, "string") ? val.restored_at : void 0;
    const restoredBy = val.restored_by === void 0 ? void 0 : deserializeUserMini(val.restored_by);
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"FileVersionFull\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.uploader_display_name === void 0) && !(0, json_js_1.isJson)(val.uploader_display_name, "string")) {
        throw "Expecting string for \"uploader_display_name\" of type \"FileVersionFull\"";
    }
    const uploaderDisplayName = (0, json_js_1.isJson)(val.uploader_display_name, "string") ? val.uploader_display_name : void 0;
    if (!(val.sha1 === void 0) && !(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"FileVersionFull\"";
    }
    const sha1 = (0, json_js_1.isJson)(val.sha1, "string") ? val.sha1 : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileVersionFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileVersionFull\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileVersionFull\" to be defined";
    }
    const type = deserializeFileVersionBaseTypeField(val.type);
    return { versionNumber: versionNumber, name: name, size: size, createdAt: createdAt, modifiedAt: modifiedAt, modifiedBy: modifiedBy, trashedAt: trashedAt, trashedBy: trashedBy, restoredAt: restoredAt, restoredBy: restoredBy, purgedAt: purgedAt, uploaderDisplayName: uploaderDisplayName, sha1: sha1, id: id, type: type };
}
exports.deserializeFileVersionFull = deserializeFileVersionFull;
function serializeFileVersionFull(val) {
    const base = serializeFileVersion(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileVersionFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["version_number"]: val.versionNumber });
}
exports.serializeFileVersionFull = serializeFileVersionFull;
function deserializeFileRequest(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileRequest\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileRequest\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeFileRequestTypeField(val.type);
    if (!(val.title === void 0) && !(0, json_js_1.isJson)(val.title, "string")) {
        throw "Expecting string for \"title\" of type \"FileRequest\"";
    }
    const title = (0, json_js_1.isJson)(val.title, "string") ? val.title : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"FileRequest\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const status = val.status === void 0 ? void 0 : deserializeFileRequestStatusField(val.status);
    if (!(val.is_email_required === void 0) && !(0, json_js_1.isJson)(val.is_email_required, "boolean")) {
        throw "Expecting boolean for \"is_email_required\" of type \"FileRequest\"";
    }
    const isEmailRequired = (0, json_js_1.isJson)(val.is_email_required, "boolean") ? val.is_email_required : void 0;
    if (!(val.is_description_required === void 0) && !(0, json_js_1.isJson)(val.is_description_required, "boolean")) {
        throw "Expecting boolean for \"is_description_required\" of type \"FileRequest\"";
    }
    const isDescriptionRequired = (0, json_js_1.isJson)(val.is_description_required, "boolean") ? val.is_description_required : void 0;
    if (!(val.expires_at === void 0) && !(0, json_js_1.isJson)(val.expires_at, "string")) {
        throw "Expecting string for \"expires_at\" of type \"FileRequest\"";
    }
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    if (val.folder === void 0) {
        throw "Expecting \"folder\" of type \"FileRequest\" to be defined";
    }
    const folder = deserializeFolderMini(val.folder);
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"FileRequest\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FileRequest\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (val.created_at === void 0) {
        throw "Expecting \"created_at\" of type \"FileRequest\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"FileRequest\"";
    }
    const createdAt = val.created_at;
    const updatedBy = val.updated_by === void 0 ? void 0 : deserializeUserMini(val.updated_by);
    if (val.updated_at === void 0) {
        throw "Expecting \"updated_at\" of type \"FileRequest\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.updated_at, "string")) {
        throw "Expecting string for \"updated_at\" of type \"FileRequest\"";
    }
    const updatedAt = val.updated_at;
    return { id: id, type: type, title: title, description: description, status: status, isEmailRequired: isEmailRequired, isDescriptionRequired: isDescriptionRequired, expiresAt: expiresAt, folder: folder, url: url, etag: etag, createdBy: createdBy, createdAt: createdAt, updatedBy: updatedBy, updatedAt: updatedAt };
}
exports.deserializeFileRequest = deserializeFileRequest;
function serializeFileRequest(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeFileRequestTypeField(val.type), ["title"]: val.title, ["description"]: val.description, ["status"]: val.status === void 0 ? void 0 : serializeFileRequestStatusField(val.status), ["is_email_required"]: val.isEmailRequired, ["is_description_required"]: val.isDescriptionRequired, ["expires_at"]: val.expiresAt, ["folder"]: serializeFolderMini(val.folder), ["url"]: val.url, ["etag"]: val.etag, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["updated_by"]: val.updatedBy === void 0 ? void 0 : serializeUserMini(val.updatedBy), ["updated_at"]: val.updatedAt };
}
exports.serializeFileRequest = serializeFileRequest;
function deserializeFileFullLockField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullLockField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileFullLockField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeFileFullLockFieldTypeField(val.type);
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"FileFullLockField\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.expired_at === void 0) && !(0, json_js_1.isJson)(val.expired_at, "string")) {
        throw "Expecting string for \"expired_at\" of type \"FileFullLockField\"";
    }
    const expiredAt = (0, json_js_1.isJson)(val.expired_at, "string") ? val.expired_at : void 0;
    if (!(val.is_download_prevented === void 0) && !(0, json_js_1.isJson)(val.is_download_prevented, "boolean")) {
        throw "Expecting boolean for \"is_download_prevented\" of type \"FileFullLockField\"";
    }
    const isDownloadPrevented = (0, json_js_1.isJson)(val.is_download_prevented, "boolean") ? val.is_download_prevented : void 0;
    const appType = val.app_type === void 0 ? void 0 : deserializeFileFullLockFieldAppTypeField(val.app_type);
    return { id: id, type: type, createdBy: createdBy, createdAt: createdAt, expiredAt: expiredAt, isDownloadPrevented: isDownloadPrevented, appType: appType };
}
exports.deserializeFileFullLockField = deserializeFileFullLockField;
function serializeFileFullLockField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeFileFullLockFieldTypeField(val.type), ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["expired_at"]: val.expiredAt, ["is_download_prevented"]: val.isDownloadPrevented, ["app_type"]: val.appType === void 0 ? void 0 : serializeFileFullLockFieldAppTypeField(val.appType) };
}
exports.serializeFileFullLockField = serializeFileFullLockField;
function deserializeFile(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"File\"";
    }
    if (val.description === void 0) {
        throw "Expecting \"description\" of type \"File\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"File\"";
    }
    const description = val.description;
    if (val.size === void 0) {
        throw "Expecting \"size\" of type \"File\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"File\"";
    }
    const size = val.size;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"File\" to be defined";
    }
    const pathCollection = deserializeFilePathCollectionField(val.path_collection);
    if (val.created_at === void 0) {
        throw "Expecting \"created_at\" of type \"File\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"File\"";
    }
    const createdAt = val.created_at;
    if (val.modified_at === void 0) {
        throw "Expecting \"modified_at\" of type \"File\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"File\"";
    }
    const modifiedAt = val.modified_at;
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"File\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"File\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"File\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"File\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (val.modified_by === void 0) {
        throw "Expecting \"modified_by\" of type \"File\" to be defined";
    }
    const modifiedBy = deserializeUserMini(val.modified_by);
    if (val.owned_by === void 0) {
        throw "Expecting \"owned_by\" of type \"File\" to be defined";
    }
    const ownedBy = deserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link === void 0 ? void 0 : deserializeFileSharedLinkField(val.shared_link);
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (val.item_status === void 0) {
        throw "Expecting \"item_status\" of type \"File\" to be defined";
    }
    const itemStatus = deserializeFileItemStatusField(val.item_status);
    if (val.sequence_id === void 0) {
        throw "Expecting \"sequence_id\" of type \"File\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"File\"";
    }
    const sequenceId = val.sequence_id;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"File\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.sha1 === void 0) {
        throw "Expecting \"sha1\" of type \"File\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"File\"";
    }
    const sha1 = val.sha1;
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"File\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"File\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"File\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"File\" to be defined";
    }
    const type = deserializeFileBaseTypeField(val.type);
    return { description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, id: id, etag: etag, type: type };
}
exports.deserializeFile = deserializeFile;
function serializeFile(val) {
    const base = serializeFileMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"File\"";
    }
    return Object.assign(Object.assign({}, base), { ["description"]: val.description, ["size"]: val.size, ["path_collection"]: serializeFilePathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["modified_by"]: serializeUserMini(val.modifiedBy), ["owned_by"]: serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink === void 0 ? void 0 : serializeFileSharedLinkField(val.sharedLink), ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["item_status"]: serializeFileItemStatusField(val.itemStatus) });
}
exports.serializeFile = serializeFile;
function deserializeFiles(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Files\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Files\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Files\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeFile(itm);
    }) : void 0;
    return { totalCount: totalCount, entries: entries };
}
exports.deserializeFiles = deserializeFiles;
function serializeFiles(val) {
    return { ["total_count"]: val.totalCount, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeFile(item);
        }) };
}
exports.serializeFiles = serializeFiles;
function deserializeDevicePinner(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"DevicePinner\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"DevicePinner\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeDevicePinnerTypeField(val.type);
    const ownedBy = val.owned_by === void 0 ? void 0 : deserializeUserMini(val.owned_by);
    if (!(val.product_name === void 0) && !(0, json_js_1.isJson)(val.product_name, "string")) {
        throw "Expecting string for \"product_name\" of type \"DevicePinner\"";
    }
    const productName = (0, json_js_1.isJson)(val.product_name, "string") ? val.product_name : void 0;
    return { id: id, type: type, ownedBy: ownedBy, productName: productName };
}
exports.deserializeDevicePinner = deserializeDevicePinner;
function serializeDevicePinner(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeDevicePinnerTypeField(val.type), ["owned_by"]: val.ownedBy === void 0 ? void 0 : serializeUserMini(val.ownedBy), ["product_name"]: val.productName };
}
exports.serializeDevicePinner = serializeDevicePinner;
function deserializeDevicePinners(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"DevicePinners\"";
    }
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"DevicePinners\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeDevicePinner(itm);
    }) : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"DevicePinners\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"DevicePinners\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"DevicePinners\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeDevicePinnersOrderField(itm);
    }) : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker, order: order };
}
exports.deserializeDevicePinners = deserializeDevicePinners;
function serializeDevicePinners(val) {
    return { ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeDevicePinner(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeDevicePinnersOrderField(item);
        }) };
}
exports.serializeDevicePinners = serializeDevicePinners;
function deserializeComment(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Comment\"";
    }
    if (!(val.is_reply_comment === void 0) && !(0, json_js_1.isJson)(val.is_reply_comment, "boolean")) {
        throw "Expecting boolean for \"is_reply_comment\" of type \"Comment\"";
    }
    const isReplyComment = (0, json_js_1.isJson)(val.is_reply_comment, "boolean") ? val.is_reply_comment : void 0;
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"Comment\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Comment\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"Comment\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const item = val.item === void 0 ? void 0 : deserializeCommentItemField(val.item);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Comment\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCommentBaseTypeField(val.type);
    return { isReplyComment: isReplyComment, message: message, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, item: item, id: id, type: type };
}
exports.deserializeComment = deserializeComment;
function serializeComment(val) {
    const base = serializeCommentBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Comment\"";
    }
    return Object.assign(Object.assign({}, base), { ["is_reply_comment"]: val.isReplyComment, ["message"]: val.message, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["item"]: val.item === void 0 ? void 0 : serializeCommentItemField(val.item) });
}
exports.serializeComment = serializeComment;
function deserializeCommentFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CommentFull\"";
    }
    if (!(val.tagged_message === void 0) && !(0, json_js_1.isJson)(val.tagged_message, "string")) {
        throw "Expecting string for \"tagged_message\" of type \"CommentFull\"";
    }
    const taggedMessage = (0, json_js_1.isJson)(val.tagged_message, "string") ? val.tagged_message : void 0;
    if (!(val.is_reply_comment === void 0) && !(0, json_js_1.isJson)(val.is_reply_comment, "boolean")) {
        throw "Expecting boolean for \"is_reply_comment\" of type \"CommentFull\"";
    }
    const isReplyComment = (0, json_js_1.isJson)(val.is_reply_comment, "boolean") ? val.is_reply_comment : void 0;
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"CommentFull\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"CommentFull\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"CommentFull\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const item = val.item === void 0 ? void 0 : deserializeCommentItemField(val.item);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"CommentFull\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCommentBaseTypeField(val.type);
    return { taggedMessage: taggedMessage, isReplyComment: isReplyComment, message: message, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, item: item, id: id, type: type };
}
exports.deserializeCommentFull = deserializeCommentFull;
function serializeCommentFull(val) {
    const base = serializeComment(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"CommentFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["tagged_message"]: val.taggedMessage });
}
exports.serializeCommentFull = serializeCommentFull;
function deserializeComments(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Comments\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Comments\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Comments\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"Comments\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"Comments\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeCommentsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Comments\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeComment(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeComments = deserializeComments;
function serializeComments(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeCommentsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeComment(item);
        }) };
}
exports.serializeComments = serializeComments;
function deserializeShieldInformationBarrierSegmentRestriction(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestriction\"";
    }
    const shieldInformationBarrier = val.shield_information_barrier === void 0 ? void 0 : deserializeShieldInformationBarrierBase(val.shield_information_barrier);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"ShieldInformationBarrierSegmentRestriction\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    if (!(val.updated_at === void 0) && !(0, json_js_1.isJson)(val.updated_at, "string")) {
        throw "Expecting string for \"updated_at\" of type \"ShieldInformationBarrierSegmentRestriction\"";
    }
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by === void 0 ? void 0 : deserializeUserBase(val.updated_by);
    if (val.shield_information_barrier_segment === void 0) {
        throw "Expecting \"shield_information_barrier_segment\" of type \"ShieldInformationBarrierSegmentRestriction\" to be defined";
    }
    const shieldInformationBarrierSegment = deserializeShieldInformationBarrierSegmentRestrictionMiniShieldInformationBarrierSegmentField(val.shield_information_barrier_segment);
    if (val.restricted_segment === void 0) {
        throw "Expecting \"restricted_segment\" of type \"ShieldInformationBarrierSegmentRestriction\" to be defined";
    }
    const restrictedSegment = deserializeShieldInformationBarrierSegmentRestrictionMiniRestrictedSegmentField(val.restricted_segment);
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentRestrictionBaseTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentRestriction\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { shieldInformationBarrier: shieldInformationBarrier, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy, shieldInformationBarrierSegment: shieldInformationBarrierSegment, restrictedSegment: restrictedSegment, type: type, id: id };
}
exports.deserializeShieldInformationBarrierSegmentRestriction = deserializeShieldInformationBarrierSegmentRestriction;
function serializeShieldInformationBarrierSegmentRestriction(val) {
    const base = serializeShieldInformationBarrierSegmentRestrictionMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentRestriction\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier"]: val.shieldInformationBarrier === void 0 ? void 0 : serializeShieldInformationBarrierBase(val.shieldInformationBarrier), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy === void 0 ? void 0 : serializeUserBase(val.updatedBy) });
}
exports.serializeShieldInformationBarrierSegmentRestriction = serializeShieldInformationBarrierSegmentRestriction;
function deserializeShieldInformationBarrierSegmentMemberMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMemberMini\"";
    }
    const user = val.user === void 0 ? void 0 : deserializeUserBase(val.user);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentMemberMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type);
    return { user: user, id: id, type: type };
}
exports.deserializeShieldInformationBarrierSegmentMemberMini = deserializeShieldInformationBarrierSegmentMemberMini;
function serializeShieldInformationBarrierSegmentMemberMini(val) {
    const base = serializeShieldInformationBarrierSegmentMemberBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMemberMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["user"]: val.user === void 0 ? void 0 : serializeUserBase(val.user) });
}
exports.serializeShieldInformationBarrierSegmentMemberMini = serializeShieldInformationBarrierSegmentMemberMini;
function deserializeShieldInformationBarrierSegmentMember(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMember\"";
    }
    const shieldInformationBarrier = val.shield_information_barrier === void 0 ? void 0 : deserializeShieldInformationBarrierBase(val.shield_information_barrier);
    const shieldInformationBarrierSegment = val.shield_information_barrier_segment === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val.shield_information_barrier_segment);
    const user = val.user === void 0 ? void 0 : deserializeUserBase(val.user);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"ShieldInformationBarrierSegmentMember\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    if (!(val.updated_at === void 0) && !(0, json_js_1.isJson)(val.updated_at, "string")) {
        throw "Expecting string for \"updated_at\" of type \"ShieldInformationBarrierSegmentMember\"";
    }
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by === void 0 ? void 0 : deserializeUserBase(val.updated_by);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegmentMember\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentMemberBaseTypeField(val.type);
    return { shieldInformationBarrier: shieldInformationBarrier, shieldInformationBarrierSegment: shieldInformationBarrierSegment, user: user, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy, id: id, type: type };
}
exports.deserializeShieldInformationBarrierSegmentMember = deserializeShieldInformationBarrierSegmentMember;
function serializeShieldInformationBarrierSegmentMember(val) {
    const base = serializeShieldInformationBarrierSegmentMemberMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegmentMember\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier"]: val.shieldInformationBarrier === void 0 ? void 0 : serializeShieldInformationBarrierBase(val.shieldInformationBarrier), ["shield_information_barrier_segment"]: val.shieldInformationBarrierSegment === void 0 ? void 0 : serializeShieldInformationBarrierSegmentMemberShieldInformationBarrierSegmentField(val.shieldInformationBarrierSegment), ["user"]: val.user === void 0 ? void 0 : serializeUserBase(val.user), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy === void 0 ? void 0 : serializeUserBase(val.updatedBy) });
}
exports.serializeShieldInformationBarrierSegmentMember = serializeShieldInformationBarrierSegmentMember;
function deserializeShieldInformationBarrierSegment(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierSegment\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierSegment\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierSegmentTypeField(val.type);
    const shieldInformationBarrier = val.shield_information_barrier === void 0 ? void 0 : deserializeShieldInformationBarrierBase(val.shield_information_barrier);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"ShieldInformationBarrierSegment\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"ShieldInformationBarrierSegment\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"ShieldInformationBarrierSegment\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    if (!(val.updated_at === void 0) && !(0, json_js_1.isJson)(val.updated_at, "string")) {
        throw "Expecting string for \"updated_at\" of type \"ShieldInformationBarrierSegment\"";
    }
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by === void 0 ? void 0 : deserializeUserBase(val.updated_by);
    return { id: id, type: type, shieldInformationBarrier: shieldInformationBarrier, name: name, description: description, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy };
}
exports.deserializeShieldInformationBarrierSegment = deserializeShieldInformationBarrierSegment;
function serializeShieldInformationBarrierSegment(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierSegmentTypeField(val.type), ["shield_information_barrier"]: val.shieldInformationBarrier === void 0 ? void 0 : serializeShieldInformationBarrierBase(val.shieldInformationBarrier), ["name"]: val.name, ["description"]: val.description, ["created_at"]: val.createdAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy === void 0 ? void 0 : serializeUserBase(val.updatedBy) };
}
exports.serializeShieldInformationBarrierSegment = serializeShieldInformationBarrierSegment;
function deserializeShieldInformationBarrierReport(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReport\"";
    }
    const shieldInformationBarrier = val.shield_information_barrier === void 0 ? void 0 : deserializeShieldInformationBarrierReportShieldInformationBarrierField(val.shield_information_barrier);
    const status = val.status === void 0 ? void 0 : deserializeShieldInformationBarrierReportStatusField(val.status);
    const details = val.details === void 0 ? void 0 : deserializeShieldInformationBarrierReportDetailsField(val.details);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"ShieldInformationBarrierReport\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    if (!(val.updated_at === void 0) && !(0, json_js_1.isJson)(val.updated_at, "string")) {
        throw "Expecting string for \"updated_at\" of type \"ShieldInformationBarrierReport\"";
    }
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrierReport\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierReportBaseTypeField(val.type);
    return { shieldInformationBarrier: shieldInformationBarrier, status: status, details: details, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, id: id, type: type };
}
exports.deserializeShieldInformationBarrierReport = deserializeShieldInformationBarrierReport;
function serializeShieldInformationBarrierReport(val) {
    const base = serializeShieldInformationBarrierReportBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReport\"";
    }
    return Object.assign(Object.assign({}, base), { ["shield_information_barrier"]: val.shieldInformationBarrier === void 0 ? void 0 : serializeShieldInformationBarrierReportShieldInformationBarrierField(val.shieldInformationBarrier), ["status"]: val.status === void 0 ? void 0 : serializeShieldInformationBarrierReportStatusField(val.status), ["details"]: val.details === void 0 ? void 0 : serializeShieldInformationBarrierReportDetailsField(val.details), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt });
}
exports.serializeShieldInformationBarrierReport = serializeShieldInformationBarrierReport;
function deserializeShieldInformationBarrier(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrier\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"ShieldInformationBarrier\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeShieldInformationBarrierTypeField(val.type);
    const enterprise = val.enterprise === void 0 ? void 0 : deserializeEnterpriseBase(val.enterprise);
    const status = val.status === void 0 ? void 0 : deserializeShieldInformationBarrierStatusField(val.status);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"ShieldInformationBarrier\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    if (!(val.updated_at === void 0) && !(0, json_js_1.isJson)(val.updated_at, "string")) {
        throw "Expecting string for \"updated_at\" of type \"ShieldInformationBarrier\"";
    }
    const updatedAt = (0, json_js_1.isJson)(val.updated_at, "string") ? val.updated_at : void 0;
    const updatedBy = val.updated_by === void 0 ? void 0 : deserializeUserBase(val.updated_by);
    if (!(val.enabled_at === void 0) && !(0, json_js_1.isJson)(val.enabled_at, "string")) {
        throw "Expecting string for \"enabled_at\" of type \"ShieldInformationBarrier\"";
    }
    const enabledAt = (0, json_js_1.isJson)(val.enabled_at, "string") ? val.enabled_at : void 0;
    const enabledBy = val.enabled_by === void 0 ? void 0 : deserializeUserBase(val.enabled_by);
    return { id: id, type: type, enterprise: enterprise, status: status, createdAt: createdAt, createdBy: createdBy, updatedAt: updatedAt, updatedBy: updatedBy, enabledAt: enabledAt, enabledBy: enabledBy };
}
exports.deserializeShieldInformationBarrier = deserializeShieldInformationBarrier;
function serializeShieldInformationBarrier(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeShieldInformationBarrierTypeField(val.type), ["enterprise"]: val.enterprise === void 0 ? void 0 : serializeEnterpriseBase(val.enterprise), ["status"]: val.status === void 0 ? void 0 : serializeShieldInformationBarrierStatusField(val.status), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy), ["updated_at"]: val.updatedAt, ["updated_by"]: val.updatedBy === void 0 ? void 0 : serializeUserBase(val.updatedBy), ["enabled_at"]: val.enabledAt, ["enabled_by"]: val.enabledBy === void 0 ? void 0 : serializeUserBase(val.enabledBy) };
}
exports.serializeShieldInformationBarrier = serializeShieldInformationBarrier;
function deserializeFolderLock(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderLock\"";
    }
    const folder = val.folder === void 0 ? void 0 : deserializeFolderMini(val.folder);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FolderLock\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.type === void 0) && !(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"FolderLock\"";
    }
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"FolderLock\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const lockedOperations = val.locked_operations === void 0 ? void 0 : deserializeFolderLockLockedOperationsField(val.locked_operations);
    if (!(val.lock_type === void 0) && !(0, json_js_1.isJson)(val.lock_type, "string")) {
        throw "Expecting string for \"lock_type\" of type \"FolderLock\"";
    }
    const lockType = (0, json_js_1.isJson)(val.lock_type, "string") ? val.lock_type : void 0;
    return { folder: folder, id: id, type: type, createdBy: createdBy, createdAt: createdAt, lockedOperations: lockedOperations, lockType: lockType };
}
exports.deserializeFolderLock = deserializeFolderLock;
function serializeFolderLock(val) {
    return { ["folder"]: val.folder === void 0 ? void 0 : serializeFolderMini(val.folder), ["id"]: val.id, ["type"]: val.type, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy), ["created_at"]: val.createdAt, ["locked_operations"]: val.lockedOperations === void 0 ? void 0 : serializeFolderLockLockedOperationsField(val.lockedOperations), ["lock_type"]: val.lockType };
}
exports.serializeFolderLock = serializeFolderLock;
function deserializeFolderLocks(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderLocks\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"FolderLocks\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"FolderLocks\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"FolderLocks\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FolderLocks\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeFolderLock(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeFolderLocks = deserializeFolderLocks;
function serializeFolderLocks(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeFolderLock(item);
        }) };
}
exports.serializeFolderLocks = serializeFolderLocks;
function deserializeWatermarkWatermarkField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WatermarkWatermarkField\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"WatermarkWatermarkField\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"WatermarkWatermarkField\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    return { createdAt: createdAt, modifiedAt: modifiedAt };
}
exports.deserializeWatermarkWatermarkField = deserializeWatermarkWatermarkField;
function serializeWatermarkWatermarkField(val) {
    return { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt };
}
exports.serializeWatermarkWatermarkField = serializeWatermarkWatermarkField;
function deserializeWatermark(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Watermark\"";
    }
    const watermark = val.watermark === void 0 ? void 0 : deserializeWatermarkWatermarkField(val.watermark);
    return { watermark: watermark };
}
exports.deserializeWatermark = deserializeWatermark;
function serializeWatermark(val) {
    return { ["watermark"]: val.watermark === void 0 ? void 0 : serializeWatermarkWatermarkField(val.watermark) };
}
exports.serializeWatermark = serializeWatermark;
function deserializeWebhookTriggersField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookTriggersField\"";
    }
    if (val === "FILE.UPLOADED") {
        return "FILE.UPLOADED";
    }
    if (val === "FILE.PREVIEWED") {
        return "FILE.PREVIEWED";
    }
    if (val === "FILE.DOWNLOADED") {
        return "FILE.DOWNLOADED";
    }
    if (val === "FILE.TRASHED") {
        return "FILE.TRASHED";
    }
    if (val === "FILE.DELETED") {
        return "FILE.DELETED";
    }
    if (val === "FILE.RESTORED") {
        return "FILE.RESTORED";
    }
    if (val === "FILE.COPIED") {
        return "FILE.COPIED";
    }
    if (val === "FILE.MOVED") {
        return "FILE.MOVED";
    }
    if (val === "FILE.LOCKED") {
        return "FILE.LOCKED";
    }
    if (val === "FILE.UNLOCKED") {
        return "FILE.UNLOCKED";
    }
    if (val === "FILE.RENAMED") {
        return "FILE.RENAMED";
    }
    if (val === "COMMENT.CREATED") {
        return "COMMENT.CREATED";
    }
    if (val === "COMMENT.UPDATED") {
        return "COMMENT.UPDATED";
    }
    if (val === "COMMENT.DELETED") {
        return "COMMENT.DELETED";
    }
    if (val === "TASK_ASSIGNMENT.CREATED") {
        return "TASK_ASSIGNMENT.CREATED";
    }
    if (val === "TASK_ASSIGNMENT.UPDATED") {
        return "TASK_ASSIGNMENT.UPDATED";
    }
    if (val === "METADATA_INSTANCE.CREATED") {
        return "METADATA_INSTANCE.CREATED";
    }
    if (val === "METADATA_INSTANCE.UPDATED") {
        return "METADATA_INSTANCE.UPDATED";
    }
    if (val === "METADATA_INSTANCE.DELETED") {
        return "METADATA_INSTANCE.DELETED";
    }
    if (val === "FOLDER.CREATED") {
        return "FOLDER.CREATED";
    }
    if (val === "FOLDER.RENAMED") {
        return "FOLDER.RENAMED";
    }
    if (val === "FOLDER.DOWNLOADED") {
        return "FOLDER.DOWNLOADED";
    }
    if (val === "FOLDER.RESTORED") {
        return "FOLDER.RESTORED";
    }
    if (val === "FOLDER.DELETED") {
        return "FOLDER.DELETED";
    }
    if (val === "FOLDER.COPIED") {
        return "FOLDER.COPIED";
    }
    if (val === "FOLDER.MOVED") {
        return "FOLDER.MOVED";
    }
    if (val === "FOLDER.TRASHED") {
        return "FOLDER.TRASHED";
    }
    if (val === "WEBHOOK.DELETED") {
        return "WEBHOOK.DELETED";
    }
    if (val === "COLLABORATION.CREATED") {
        return "COLLABORATION.CREATED";
    }
    if (val === "COLLABORATION.ACCEPTED") {
        return "COLLABORATION.ACCEPTED";
    }
    if (val === "COLLABORATION.REJECTED") {
        return "COLLABORATION.REJECTED";
    }
    if (val === "COLLABORATION.REMOVED") {
        return "COLLABORATION.REMOVED";
    }
    if (val === "COLLABORATION.UPDATED") {
        return "COLLABORATION.UPDATED";
    }
    if (val === "SHARED_LINK.DELETED") {
        return "SHARED_LINK.DELETED";
    }
    if (val === "SHARED_LINK.CREATED") {
        return "SHARED_LINK.CREATED";
    }
    if (val === "SHARED_LINK.UPDATED") {
        return "SHARED_LINK.UPDATED";
    }
    if (val === "SIGN_REQUEST.COMPLETED") {
        return "SIGN_REQUEST.COMPLETED";
    }
    if (val === "SIGN_REQUEST.DECLINED") {
        return "SIGN_REQUEST.DECLINED";
    }
    if (val === "SIGN_REQUEST.EXPIRED") {
        return "SIGN_REQUEST.EXPIRED";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebhookTriggersField = deserializeWebhookTriggersField;
function serializeWebhookTriggersField(val) {
    return val;
}
exports.serializeWebhookTriggersField = serializeWebhookTriggersField;
function deserializeWebhookMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookMiniTypeField\"";
    }
    if (val === "webhook") {
        return "webhook";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebhookMiniTypeField = deserializeWebhookMiniTypeField;
function serializeWebhookMiniTypeField(val) {
    return val;
}
exports.serializeWebhookMiniTypeField = serializeWebhookMiniTypeField;
function deserializeWebhookMiniTargetFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebhookMiniTargetFieldTypeField\"";
    }
    if (val === "file") {
        return "file";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebhookMiniTargetFieldTypeField = deserializeWebhookMiniTargetFieldTypeField;
function serializeWebhookMiniTargetFieldTypeField(val) {
    return val;
}
exports.serializeWebhookMiniTargetFieldTypeField = serializeWebhookMiniTargetFieldTypeField;
function deserializeWebhookMiniTargetField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebhookMiniTargetField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WebhookMiniTargetField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWebhookMiniTargetFieldTypeField(val.type);
    return { id: id, type: type };
}
exports.deserializeWebhookMiniTargetField = deserializeWebhookMiniTargetField;
function serializeWebhookMiniTargetField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeWebhookMiniTargetFieldTypeField(val.type) };
}
exports.serializeWebhookMiniTargetField = serializeWebhookMiniTargetField;
function deserializeWebhookMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebhookMini\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WebhookMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWebhookMiniTypeField(val.type);
    const target = val.target === void 0 ? void 0 : deserializeWebhookMiniTargetField(val.target);
    return { id: id, type: type, target: target };
}
exports.deserializeWebhookMini = deserializeWebhookMini;
function serializeWebhookMini(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeWebhookMiniTypeField(val.type), ["target"]: val.target === void 0 ? void 0 : serializeWebhookMiniTargetField(val.target) };
}
exports.serializeWebhookMini = serializeWebhookMini;
function deserializeWebhooks(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Webhooks\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Webhooks\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"Webhooks\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"Webhooks\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Webhooks\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeWebhookMini(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeWebhooks = deserializeWebhooks;
function serializeWebhooks(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeWebhookMini(item);
        }) };
}
exports.serializeWebhooks = serializeWebhooks;
function deserializeWebhook(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Webhook\"";
    }
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Webhook\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.address === void 0) && !(0, json_js_1.isJson)(val.address, "string")) {
        throw "Expecting string for \"address\" of type \"Webhook\"";
    }
    const address = (0, json_js_1.isJson)(val.address, "string") ? val.address : void 0;
    if (!(val.triggers === void 0) && !(0, json_js_1.isJson)(val.triggers, "array")) {
        throw "Expecting array for \"triggers\" of type \"Webhook\"";
    }
    const triggers = (0, json_js_1.isJson)(val.triggers, "array") ? val.triggers.map(function (itm) {
        return deserializeWebhookTriggersField(itm);
    }) : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Webhook\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWebhookMiniTypeField(val.type);
    const target = val.target === void 0 ? void 0 : deserializeWebhookMiniTargetField(val.target);
    return { createdBy: createdBy, createdAt: createdAt, address: address, triggers: triggers, id: id, type: type, target: target };
}
exports.deserializeWebhook = deserializeWebhook;
function serializeWebhook(val) {
    const base = serializeWebhookMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Webhook\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["address"]: val.address, ["triggers"]: val.triggers === void 0 ? void 0 : val.triggers.map(function (item) {
            return serializeWebhookTriggersField(item);
        }) });
}
exports.serializeWebhook = serializeWebhook;
function deserializeWebLinkSharedLinkFieldAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkSharedLinkFieldAccessField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebLinkSharedLinkFieldAccessField = deserializeWebLinkSharedLinkFieldAccessField;
function serializeWebLinkSharedLinkFieldAccessField(val) {
    return val;
}
exports.serializeWebLinkSharedLinkFieldAccessField = serializeWebLinkSharedLinkFieldAccessField;
function deserializeWebLinkSharedLinkFieldEffectiveAccessField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkSharedLinkFieldEffectiveAccessField\"";
    }
    if (val === "open") {
        return "open";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "collaborators") {
        return "collaborators";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebLinkSharedLinkFieldEffectiveAccessField = deserializeWebLinkSharedLinkFieldEffectiveAccessField;
function serializeWebLinkSharedLinkFieldEffectiveAccessField(val) {
    return val;
}
exports.serializeWebLinkSharedLinkFieldEffectiveAccessField = serializeWebLinkSharedLinkFieldEffectiveAccessField;
function deserializeWebLinkSharedLinkFieldEffectivePermissionField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkSharedLinkFieldEffectivePermissionField\"";
    }
    if (val === "can_edit") {
        return "can_edit";
    }
    if (val === "can_download") {
        return "can_download";
    }
    if (val === "can_preview") {
        return "can_preview";
    }
    if (val === "no_access") {
        return "no_access";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebLinkSharedLinkFieldEffectivePermissionField = deserializeWebLinkSharedLinkFieldEffectivePermissionField;
function serializeWebLinkSharedLinkFieldEffectivePermissionField(val) {
    return val;
}
exports.serializeWebLinkSharedLinkFieldEffectivePermissionField = serializeWebLinkSharedLinkFieldEffectivePermissionField;
function deserializeWebLinkSharedLinkFieldPermissionsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebLinkSharedLinkFieldPermissionsField\"";
    }
    if (val.can_download === void 0) {
        throw "Expecting \"can_download\" of type \"WebLinkSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_download, "boolean")) {
        throw "Expecting boolean for \"can_download\" of type \"WebLinkSharedLinkFieldPermissionsField\"";
    }
    const canDownload = val.can_download;
    if (val.can_preview === void 0) {
        throw "Expecting \"can_preview\" of type \"WebLinkSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_preview, "boolean")) {
        throw "Expecting boolean for \"can_preview\" of type \"WebLinkSharedLinkFieldPermissionsField\"";
    }
    const canPreview = val.can_preview;
    if (val.can_edit === void 0) {
        throw "Expecting \"can_edit\" of type \"WebLinkSharedLinkFieldPermissionsField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.can_edit, "boolean")) {
        throw "Expecting boolean for \"can_edit\" of type \"WebLinkSharedLinkFieldPermissionsField\"";
    }
    const canEdit = val.can_edit;
    return { canDownload: canDownload, canPreview: canPreview, canEdit: canEdit };
}
exports.deserializeWebLinkSharedLinkFieldPermissionsField = deserializeWebLinkSharedLinkFieldPermissionsField;
function serializeWebLinkSharedLinkFieldPermissionsField(val) {
    return { ["can_download"]: val.canDownload, ["can_preview"]: val.canPreview, ["can_edit"]: val.canEdit };
}
exports.serializeWebLinkSharedLinkFieldPermissionsField = serializeWebLinkSharedLinkFieldPermissionsField;
function deserializeWebLinkSharedLinkField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebLinkSharedLinkField\"";
    }
    if (val.url === void 0) {
        throw "Expecting \"url\" of type \"WebLinkSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"WebLinkSharedLinkField\"";
    }
    const url = val.url;
    if (!(val.download_url === void 0) && !(0, json_js_1.isJson)(val.download_url, "string")) {
        throw "Expecting string for \"download_url\" of type \"WebLinkSharedLinkField\"";
    }
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    if (!(val.vanity_url === void 0) && !(0, json_js_1.isJson)(val.vanity_url, "string")) {
        throw "Expecting string for \"vanity_url\" of type \"WebLinkSharedLinkField\"";
    }
    const vanityUrl = (0, json_js_1.isJson)(val.vanity_url, "string") ? val.vanity_url : void 0;
    if (!(val.vanity_name === void 0) && !(0, json_js_1.isJson)(val.vanity_name, "string")) {
        throw "Expecting string for \"vanity_name\" of type \"WebLinkSharedLinkField\"";
    }
    const vanityName = (0, json_js_1.isJson)(val.vanity_name, "string") ? val.vanity_name : void 0;
    const access = val.access === void 0 ? void 0 : deserializeWebLinkSharedLinkFieldAccessField(val.access);
    if (val.effective_access === void 0) {
        throw "Expecting \"effective_access\" of type \"WebLinkSharedLinkField\" to be defined";
    }
    const effectiveAccess = deserializeWebLinkSharedLinkFieldEffectiveAccessField(val.effective_access);
    if (val.effective_permission === void 0) {
        throw "Expecting \"effective_permission\" of type \"WebLinkSharedLinkField\" to be defined";
    }
    const effectivePermission = deserializeWebLinkSharedLinkFieldEffectivePermissionField(val.effective_permission);
    if (!(val.unshared_at === void 0) && !(0, json_js_1.isJson)(val.unshared_at, "string")) {
        throw "Expecting string for \"unshared_at\" of type \"WebLinkSharedLinkField\"";
    }
    const unsharedAt = (0, json_js_1.isJson)(val.unshared_at, "string") ? val.unshared_at : void 0;
    if (val.is_password_enabled === void 0) {
        throw "Expecting \"is_password_enabled\" of type \"WebLinkSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.is_password_enabled, "boolean")) {
        throw "Expecting boolean for \"is_password_enabled\" of type \"WebLinkSharedLinkField\"";
    }
    const isPasswordEnabled = val.is_password_enabled;
    const permissions = val.permissions === void 0 ? void 0 : deserializeWebLinkSharedLinkFieldPermissionsField(val.permissions);
    if (val.download_count === void 0) {
        throw "Expecting \"download_count\" of type \"WebLinkSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.download_count, "number")) {
        throw "Expecting number for \"download_count\" of type \"WebLinkSharedLinkField\"";
    }
    const downloadCount = val.download_count;
    if (val.preview_count === void 0) {
        throw "Expecting \"preview_count\" of type \"WebLinkSharedLinkField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.preview_count, "number")) {
        throw "Expecting number for \"preview_count\" of type \"WebLinkSharedLinkField\"";
    }
    const previewCount = val.preview_count;
    return { url: url, downloadUrl: downloadUrl, vanityUrl: vanityUrl, vanityName: vanityName, access: access, effectiveAccess: effectiveAccess, effectivePermission: effectivePermission, unsharedAt: unsharedAt, isPasswordEnabled: isPasswordEnabled, permissions: permissions, downloadCount: downloadCount, previewCount: previewCount };
}
exports.deserializeWebLinkSharedLinkField = deserializeWebLinkSharedLinkField;
function serializeWebLinkSharedLinkField(val) {
    return { ["url"]: val.url, ["download_url"]: val.downloadUrl, ["vanity_url"]: val.vanityUrl, ["vanity_name"]: val.vanityName, ["access"]: val.access === void 0 ? void 0 : serializeWebLinkSharedLinkFieldAccessField(val.access), ["effective_access"]: serializeWebLinkSharedLinkFieldEffectiveAccessField(val.effectiveAccess), ["effective_permission"]: serializeWebLinkSharedLinkFieldEffectivePermissionField(val.effectivePermission), ["unshared_at"]: val.unsharedAt, ["is_password_enabled"]: val.isPasswordEnabled, ["permissions"]: val.permissions === void 0 ? void 0 : serializeWebLinkSharedLinkFieldPermissionsField(val.permissions), ["download_count"]: val.downloadCount, ["preview_count"]: val.previewCount };
}
exports.serializeWebLinkSharedLinkField = serializeWebLinkSharedLinkField;
function deserializeWebLinkItemStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkItemStatusField\"";
    }
    if (val === "active") {
        return "active";
    }
    if (val === "trashed") {
        return "trashed";
    }
    if (val === "deleted") {
        return "deleted";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebLinkItemStatusField = deserializeWebLinkItemStatusField;
function serializeWebLinkItemStatusField(val) {
    return val;
}
exports.serializeWebLinkItemStatusField = serializeWebLinkItemStatusField;
function deserializeWebLinkBaseTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WebLinkBaseTypeField\"";
    }
    if (val === "web_link") {
        return "web_link";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWebLinkBaseTypeField = deserializeWebLinkBaseTypeField;
function serializeWebLinkBaseTypeField(val) {
    return val;
}
exports.serializeWebLinkBaseTypeField = serializeWebLinkBaseTypeField;
function deserializeWebLinkBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebLinkBase\"";
    }
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"WebLinkBase\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WebLinkBase\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"WebLinkBase\" to be defined";
    }
    const type = deserializeWebLinkBaseTypeField(val.type);
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"WebLinkBase\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    return { id: id, type: type, etag: etag };
}
exports.deserializeWebLinkBase = deserializeWebLinkBase;
function serializeWebLinkBase(val) {
    return { ["id"]: val.id, ["type"]: serializeWebLinkBaseTypeField(val.type), ["etag"]: val.etag };
}
exports.serializeWebLinkBase = serializeWebLinkBase;
function deserializeWebLinkMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebLinkMini\"";
    }
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"WebLinkMini\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"WebLinkMini\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"WebLinkMini\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"WebLinkMini\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WebLinkMini\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"WebLinkMini\" to be defined";
    }
    const type = deserializeWebLinkBaseTypeField(val.type);
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"WebLinkMini\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    return { url: url, sequenceId: sequenceId, name: name, id: id, type: type, etag: etag };
}
exports.deserializeWebLinkMini = deserializeWebLinkMini;
function serializeWebLinkMini(val) {
    const base = serializeWebLinkBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"WebLinkMini\"";
    }
    return Object.assign(Object.assign({}, base), { ["url"]: val.url, ["sequence_id"]: val.sequenceId, ["name"]: val.name });
}
exports.serializeWebLinkMini = serializeWebLinkMini;
function deserializeWebLink(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebLink\"";
    }
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"WebLink\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    const pathCollection = val.path_collection === void 0 ? void 0 : deserializeWebLinkPathCollectionField(val.path_collection);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"WebLink\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"WebLink\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"WebLink\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"WebLink\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    const modifiedBy = val.modified_by === void 0 ? void 0 : deserializeUserMini(val.modified_by);
    const ownedBy = val.owned_by === void 0 ? void 0 : deserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link === void 0 ? void 0 : deserializeWebLinkSharedLinkField(val.shared_link);
    const itemStatus = val.item_status === void 0 ? void 0 : deserializeWebLinkItemStatusField(val.item_status);
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"WebLink\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"WebLink\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"WebLink\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"WebLink\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WebLink\"";
    }
    const id = val.id;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"WebLink\" to be defined";
    }
    const type = deserializeWebLinkBaseTypeField(val.type);
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"WebLink\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    return { parent: parent, description: description, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, itemStatus: itemStatus, url: url, sequenceId: sequenceId, name: name, id: id, type: type, etag: etag };
}
exports.deserializeWebLink = deserializeWebLink;
function serializeWebLink(val) {
    const base = serializeWebLinkMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"WebLink\"";
    }
    return Object.assign(Object.assign({}, base), { ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["description"]: val.description, ["path_collection"]: val.pathCollection === void 0 ? void 0 : serializeWebLinkPathCollectionField(val.pathCollection), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["modified_by"]: val.modifiedBy === void 0 ? void 0 : serializeUserMini(val.modifiedBy), ["owned_by"]: val.ownedBy === void 0 ? void 0 : serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink === void 0 ? void 0 : serializeWebLinkSharedLinkField(val.sharedLink), ["item_status"]: val.itemStatus === void 0 ? void 0 : serializeWebLinkItemStatusField(val.itemStatus) });
}
exports.serializeWebLink = serializeWebLink;
function deserializeItemsEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ItemsEntriesField\"";
    }
    if (val.type === "file") {
        return deserializeFileMini(val);
    }
    if (val.type === "folder") {
        return deserializeFolderMini(val);
    }
    if (val.type === "web_link") {
        return deserializeWebLinkMini(val);
    }
    throw "unknown type";
}
exports.deserializeItemsEntriesField = deserializeItemsEntriesField;
function serializeItemsEntriesField(val) {
    if (val.type === "file") {
        return serializeFileMini(val);
    }
    if (val.type === "folder") {
        return serializeFolderMini(val);
    }
    if (val.type === "web_link") {
        return serializeWebLinkMini(val);
    }
    throw "unknown type";
}
exports.serializeItemsEntriesField = serializeItemsEntriesField;
function deserializeItems(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Items\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Items\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Items\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"Items\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"Items\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeItemsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Items\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeItemsEntriesField(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeItems = deserializeItems;
function serializeItems(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeItemsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeItemsEntriesField(item);
        }) };
}
exports.serializeItems = serializeItems;
function deserializeFolder(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Folder\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Folder\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"Folder\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"Folder\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (val.size === void 0) {
        throw "Expecting \"size\" of type \"Folder\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"Folder\"";
    }
    const size = val.size;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"Folder\" to be defined";
    }
    const pathCollection = deserializeFolderPathCollectionField(val.path_collection);
    if (val.created_by === void 0) {
        throw "Expecting \"created_by\" of type \"Folder\" to be defined";
    }
    const createdBy = deserializeUserMini(val.created_by);
    if (val.modified_by === void 0) {
        throw "Expecting \"modified_by\" of type \"Folder\" to be defined";
    }
    const modifiedBy = deserializeUserMini(val.modified_by);
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"Folder\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"Folder\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"Folder\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"Folder\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    if (val.owned_by === void 0) {
        throw "Expecting \"owned_by\" of type \"Folder\" to be defined";
    }
    const ownedBy = deserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link === void 0 ? void 0 : deserializeFolderSharedLinkField(val.shared_link);
    const folderUploadEmail = val.folder_upload_email === void 0 ? void 0 : deserializeFolderFolderUploadEmailField(val.folder_upload_email);
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (val.item_status === void 0) {
        throw "Expecting \"item_status\" of type \"Folder\" to be defined";
    }
    const itemStatus = deserializeFolderItemStatusField(val.item_status);
    if (val.item_collection === void 0) {
        throw "Expecting \"item_collection\" of type \"Folder\" to be defined";
    }
    const itemCollection = deserializeItems(val.item_collection);
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"Folder\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"Folder\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"Folder\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Folder\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"Folder\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"Folder\" to be defined";
    }
    const type = deserializeFolderBaseTypeField(val.type);
    return { createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus, itemCollection: itemCollection, sequenceId: sequenceId, name: name, id: id, etag: etag, type: type };
}
exports.deserializeFolder = deserializeFolder;
function serializeFolder(val) {
    const base = serializeFolderMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Folder\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["description"]: val.description, ["size"]: val.size, ["path_collection"]: serializeFolderPathCollectionField(val.pathCollection), ["created_by"]: serializeUserMini(val.createdBy), ["modified_by"]: serializeUserMini(val.modifiedBy), ["trashed_at"]: val.trashedAt, ["purged_at"]: val.purgedAt, ["content_created_at"]: val.contentCreatedAt, ["content_modified_at"]: val.contentModifiedAt, ["owned_by"]: serializeUserMini(val.ownedBy), ["shared_link"]: val.sharedLink === void 0 ? void 0 : serializeFolderSharedLinkField(val.sharedLink), ["folder_upload_email"]: val.folderUploadEmail === void 0 ? void 0 : serializeFolderFolderUploadEmailField(val.folderUploadEmail), ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["item_status"]: serializeFolderItemStatusField(val.itemStatus), ["item_collection"]: serializeItems(val.itemCollection) });
}
exports.serializeFolder = serializeFolder;
function deserializeSearchResultWithSharedLinkItemField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SearchResultWithSharedLinkItemField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    if (val.type === "web_link") {
        return deserializeWebLink(val);
    }
    throw "unknown type";
}
exports.deserializeSearchResultWithSharedLinkItemField = deserializeSearchResultWithSharedLinkItemField;
function serializeSearchResultWithSharedLinkItemField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    if (val.type === "web_link") {
        return serializeWebLink(val);
    }
    throw "unknown type";
}
exports.serializeSearchResultWithSharedLinkItemField = serializeSearchResultWithSharedLinkItemField;
function deserializeSearchResultWithSharedLink(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SearchResultWithSharedLink\"";
    }
    if (!(val.accessible_via_shared_link === void 0) && !(0, json_js_1.isJson)(val.accessible_via_shared_link, "string")) {
        throw "Expecting string for \"accessible_via_shared_link\" of type \"SearchResultWithSharedLink\"";
    }
    const accessibleViaSharedLink = (0, json_js_1.isJson)(val.accessible_via_shared_link, "string") ? val.accessible_via_shared_link : void 0;
    const item = val.item === void 0 ? void 0 : deserializeSearchResultWithSharedLinkItemField(val.item);
    if (!(val.type === void 0) && !(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"SearchResultWithSharedLink\"";
    }
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    return { accessibleViaSharedLink: accessibleViaSharedLink, item: item, type: type };
}
exports.deserializeSearchResultWithSharedLink = deserializeSearchResultWithSharedLink;
function serializeSearchResultWithSharedLink(val) {
    return { ["accessible_via_shared_link"]: val.accessibleViaSharedLink, ["item"]: val.item === void 0 ? void 0 : serializeSearchResultWithSharedLinkItemField(val.item), ["type"]: val.type };
}
exports.serializeSearchResultWithSharedLink = serializeSearchResultWithSharedLink;
function deserializeSearchResultsWithSharedLinks(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SearchResultsWithSharedLinks\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"SearchResultsWithSharedLinks\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"SearchResultsWithSharedLinks\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"SearchResultsWithSharedLinks\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"SearchResultsWithSharedLinks\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeSearchResultWithSharedLink(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, entries: entries };
}
exports.deserializeSearchResultsWithSharedLinks = deserializeSearchResultsWithSharedLinks;
function serializeSearchResultsWithSharedLinks(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeSearchResultWithSharedLink(item);
        }) };
}
exports.serializeSearchResultsWithSharedLinks = serializeSearchResultsWithSharedLinks;
function deserializeSearchResultsEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SearchResultsEntriesField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    if (val.type === "web_link") {
        return deserializeWebLink(val);
    }
    throw "unknown type";
}
exports.deserializeSearchResultsEntriesField = deserializeSearchResultsEntriesField;
function serializeSearchResultsEntriesField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    if (val.type === "web_link") {
        return serializeWebLink(val);
    }
    throw "unknown type";
}
exports.serializeSearchResultsEntriesField = serializeSearchResultsEntriesField;
function deserializeSearchResults(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SearchResults\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"SearchResults\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"SearchResults\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"SearchResults\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"SearchResults\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeSearchResultsEntriesField(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, entries: entries };
}
exports.deserializeSearchResults = deserializeSearchResults;
function serializeSearchResults(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeSearchResultsEntriesField(item);
        }) };
}
exports.serializeSearchResults = serializeSearchResults;
function deserializeRecentItemItemField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RecentItemItemField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    if (val.type === "web_link") {
        return deserializeWebLink(val);
    }
    throw "unknown type";
}
exports.deserializeRecentItemItemField = deserializeRecentItemItemField;
function serializeRecentItemItemField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    if (val.type === "web_link") {
        return serializeWebLink(val);
    }
    throw "unknown type";
}
exports.serializeRecentItemItemField = serializeRecentItemItemField;
function deserializeRecentItem(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RecentItem\"";
    }
    if (!(val.type === void 0) && !(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"RecentItem\"";
    }
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    const item = val.item === void 0 ? void 0 : deserializeRecentItemItemField(val.item);
    const interactionType = val.interaction_type === void 0 ? void 0 : deserializeRecentItemInteractionTypeField(val.interaction_type);
    if (!(val.interacted_at === void 0) && !(0, json_js_1.isJson)(val.interacted_at, "string")) {
        throw "Expecting string for \"interacted_at\" of type \"RecentItem\"";
    }
    const interactedAt = (0, json_js_1.isJson)(val.interacted_at, "string") ? val.interacted_at : void 0;
    if (!(val.interaction_shared_link === void 0) && !(0, json_js_1.isJson)(val.interaction_shared_link, "string")) {
        throw "Expecting string for \"interaction_shared_link\" of type \"RecentItem\"";
    }
    const interactionSharedLink = (0, json_js_1.isJson)(val.interaction_shared_link, "string") ? val.interaction_shared_link : void 0;
    return { type: type, item: item, interactionType: interactionType, interactedAt: interactedAt, interactionSharedLink: interactionSharedLink };
}
exports.deserializeRecentItem = deserializeRecentItem;
function serializeRecentItem(val) {
    return { ["type"]: val.type, ["item"]: val.item === void 0 ? void 0 : serializeRecentItemItemField(val.item), ["interaction_type"]: val.interactionType === void 0 ? void 0 : serializeRecentItemInteractionTypeField(val.interactionType), ["interacted_at"]: val.interactedAt, ["interaction_shared_link"]: val.interactionSharedLink };
}
exports.serializeRecentItem = serializeRecentItem;
function deserializeRecentItems(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"RecentItems\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"RecentItems\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"RecentItems\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"RecentItems\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"RecentItems\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeRecentItem(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeRecentItems = deserializeRecentItems;
function serializeRecentItems(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeRecentItem(item);
        }) };
}
exports.serializeRecentItems = serializeRecentItems;
function deserializeMetadataQueryResultsEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQueryResultsEntriesField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    throw "unknown type";
}
exports.deserializeMetadataQueryResultsEntriesField = deserializeMetadataQueryResultsEntriesField;
function serializeMetadataQueryResultsEntriesField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    throw "unknown type";
}
exports.serializeMetadataQueryResultsEntriesField = serializeMetadataQueryResultsEntriesField;
function deserializeMetadataQueryResults(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataQueryResults\"";
    }
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"MetadataQueryResults\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeMetadataQueryResultsEntriesField(itm);
    }) : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"MetadataQueryResults\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "string")) {
        throw "Expecting string for \"next_marker\" of type \"MetadataQueryResults\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "string") ? val.next_marker : void 0;
    return { entries: entries, limit: limit, nextMarker: nextMarker };
}
exports.deserializeMetadataQueryResults = deserializeMetadataQueryResults;
function serializeMetadataQueryResults(val) {
    return { ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeMetadataQueryResultsEntriesField(item);
        }), ["limit"]: val.limit, ["next_marker"]: val.nextMarker };
}
exports.serializeMetadataQueryResults = serializeMetadataQueryResults;
function deserializeLegalHoldPolicyAssignmentAssignedToField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyAssignmentAssignedToField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    if (val.type === "web_link") {
        return deserializeWebLink(val);
    }
    throw "unknown type";
}
exports.deserializeLegalHoldPolicyAssignmentAssignedToField = deserializeLegalHoldPolicyAssignmentAssignedToField;
function serializeLegalHoldPolicyAssignmentAssignedToField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    if (val.type === "web_link") {
        return serializeWebLink(val);
    }
    throw "unknown type";
}
exports.serializeLegalHoldPolicyAssignmentAssignedToField = serializeLegalHoldPolicyAssignmentAssignedToField;
function deserializeLegalHoldPolicyAssignment(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyAssignment\"";
    }
    const legalHoldPolicy = val.legal_hold_policy === void 0 ? void 0 : deserializeLegalHoldPolicyMini(val.legal_hold_policy);
    const assignedTo = val.assigned_to === void 0 ? void 0 : deserializeLegalHoldPolicyAssignmentAssignedToField(val.assigned_to);
    const assignedBy = val.assigned_by === void 0 ? void 0 : deserializeUserMini(val.assigned_by);
    if (!(val.assigned_at === void 0) && !(0, json_js_1.isJson)(val.assigned_at, "string")) {
        throw "Expecting string for \"assigned_at\" of type \"LegalHoldPolicyAssignment\"";
    }
    const assignedAt = (0, json_js_1.isJson)(val.assigned_at, "string") ? val.assigned_at : void 0;
    if (!(val.deleted_at === void 0) && !(0, json_js_1.isJson)(val.deleted_at, "string")) {
        throw "Expecting string for \"deleted_at\" of type \"LegalHoldPolicyAssignment\"";
    }
    const deletedAt = (0, json_js_1.isJson)(val.deleted_at, "string") ? val.deleted_at : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"LegalHoldPolicyAssignment\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeLegalHoldPolicyAssignmentBaseTypeField(val.type);
    return { legalHoldPolicy: legalHoldPolicy, assignedTo: assignedTo, assignedBy: assignedBy, assignedAt: assignedAt, deletedAt: deletedAt, id: id, type: type };
}
exports.deserializeLegalHoldPolicyAssignment = deserializeLegalHoldPolicyAssignment;
function serializeLegalHoldPolicyAssignment(val) {
    const base = serializeLegalHoldPolicyAssignmentBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"LegalHoldPolicyAssignment\"";
    }
    return Object.assign(Object.assign({}, base), { ["legal_hold_policy"]: val.legalHoldPolicy === void 0 ? void 0 : serializeLegalHoldPolicyMini(val.legalHoldPolicy), ["assigned_to"]: val.assignedTo === void 0 ? void 0 : serializeLegalHoldPolicyAssignmentAssignedToField(val.assignedTo), ["assigned_by"]: val.assignedBy === void 0 ? void 0 : serializeUserMini(val.assignedBy), ["assigned_at"]: val.assignedAt, ["deleted_at"]: val.deletedAt });
}
exports.serializeLegalHoldPolicyAssignment = serializeLegalHoldPolicyAssignment;
function deserializeFileVersionLegalHold(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionLegalHold\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileVersionLegalHold\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeFileVersionLegalHoldTypeField(val.type);
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    const file = val.file === void 0 ? void 0 : deserializeFileMini(val.file);
    if (!(val.legal_hold_policy_assignments === void 0) && !(0, json_js_1.isJson)(val.legal_hold_policy_assignments, "array")) {
        throw "Expecting array for \"legal_hold_policy_assignments\" of type \"FileVersionLegalHold\"";
    }
    const legalHoldPolicyAssignments = (0, json_js_1.isJson)(val.legal_hold_policy_assignments, "array") ? val.legal_hold_policy_assignments.map(function (itm) {
        return deserializeLegalHoldPolicyAssignment(itm);
    }) : void 0;
    if (!(val.deleted_at === void 0) && !(0, json_js_1.isJson)(val.deleted_at, "string")) {
        throw "Expecting string for \"deleted_at\" of type \"FileVersionLegalHold\"";
    }
    const deletedAt = (0, json_js_1.isJson)(val.deleted_at, "string") ? val.deleted_at : void 0;
    return { id: id, type: type, fileVersion: fileVersion, file: file, legalHoldPolicyAssignments: legalHoldPolicyAssignments, deletedAt: deletedAt };
}
exports.deserializeFileVersionLegalHold = deserializeFileVersionLegalHold;
function serializeFileVersionLegalHold(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeFileVersionLegalHoldTypeField(val.type), ["file_version"]: val.fileVersion === void 0 ? void 0 : serializeFileVersionMini(val.fileVersion), ["file"]: val.file === void 0 ? void 0 : serializeFileMini(val.file), ["legal_hold_policy_assignments"]: val.legalHoldPolicyAssignments === void 0 ? void 0 : val.legalHoldPolicyAssignments.map(function (item) {
            return serializeLegalHoldPolicyAssignment(item);
        }), ["deleted_at"]: val.deletedAt };
}
exports.serializeFileVersionLegalHold = serializeFileVersionLegalHold;
function deserializeFileVersionLegalHolds(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileVersionLegalHolds\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"FileVersionLegalHolds\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"FileVersionLegalHolds\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"FileVersionLegalHolds\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"FileVersionLegalHolds\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeFileVersionLegalHold(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeFileVersionLegalHolds = deserializeFileVersionLegalHolds;
function serializeFileVersionLegalHolds(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeFileVersionLegalHold(item);
        }) };
}
exports.serializeFileVersionLegalHolds = serializeFileVersionLegalHolds;
function deserializeFolderFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FolderFull\"";
    }
    const syncState = val.sync_state === void 0 ? void 0 : deserializeFolderFullSyncStateField(val.sync_state);
    if (!(val.has_collaborations === void 0) && !(0, json_js_1.isJson)(val.has_collaborations, "boolean")) {
        throw "Expecting boolean for \"has_collaborations\" of type \"FolderFull\"";
    }
    const hasCollaborations = (0, json_js_1.isJson)(val.has_collaborations, "boolean") ? val.has_collaborations : void 0;
    const permissions = val.permissions === void 0 ? void 0 : deserializeFolderFullPermissionsField(val.permissions);
    if (!(val.tags === void 0) && !(0, json_js_1.isJson)(val.tags, "array")) {
        throw "Expecting array for \"tags\" of type \"FolderFull\"";
    }
    const tags = (0, json_js_1.isJson)(val.tags, "array") ? val.tags.map(function (itm) {
        return void 0;
    }) : void 0;
    if (!(val.can_non_owners_invite === void 0) && !(0, json_js_1.isJson)(val.can_non_owners_invite, "boolean")) {
        throw "Expecting boolean for \"can_non_owners_invite\" of type \"FolderFull\"";
    }
    const canNonOwnersInvite = (0, json_js_1.isJson)(val.can_non_owners_invite, "boolean") ? val.can_non_owners_invite : void 0;
    if (!(val.is_externally_owned === void 0) && !(0, json_js_1.isJson)(val.is_externally_owned, "boolean")) {
        throw "Expecting boolean for \"is_externally_owned\" of type \"FolderFull\"";
    }
    const isExternallyOwned = (0, json_js_1.isJson)(val.is_externally_owned, "boolean") ? val.is_externally_owned : void 0;
    const metadata = val.metadata === void 0 ? void 0 : deserializeFolderFullMetadataField(val.metadata);
    if (!(val.is_collaboration_restricted_to_enterprise === void 0) && !(0, json_js_1.isJson)(val.is_collaboration_restricted_to_enterprise, "boolean")) {
        throw "Expecting boolean for \"is_collaboration_restricted_to_enterprise\" of type \"FolderFull\"";
    }
    const isCollaborationRestrictedToEnterprise = (0, json_js_1.isJson)(val.is_collaboration_restricted_to_enterprise, "boolean") ? val.is_collaboration_restricted_to_enterprise : void 0;
    if (!(val.allowed_shared_link_access_levels === void 0) && !(0, json_js_1.isJson)(val.allowed_shared_link_access_levels, "array")) {
        throw "Expecting array for \"allowed_shared_link_access_levels\" of type \"FolderFull\"";
    }
    const allowedSharedLinkAccessLevels = (0, json_js_1.isJson)(val.allowed_shared_link_access_levels, "array") ? val.allowed_shared_link_access_levels.map(function (itm) {
        return deserializeFolderFullAllowedSharedLinkAccessLevelsField(itm);
    }) : void 0;
    if (!(val.allowed_invitee_roles === void 0) && !(0, json_js_1.isJson)(val.allowed_invitee_roles, "array")) {
        throw "Expecting array for \"allowed_invitee_roles\" of type \"FolderFull\"";
    }
    const allowedInviteeRoles = (0, json_js_1.isJson)(val.allowed_invitee_roles, "array") ? val.allowed_invitee_roles.map(function (itm) {
        return deserializeFolderFullAllowedInviteeRolesField(itm);
    }) : void 0;
    const watermarkInfo = val.watermark_info === void 0 ? void 0 : deserializeFolderFullWatermarkInfoField(val.watermark_info);
    if (!(val.is_accessible_via_shared_link === void 0) && !(0, json_js_1.isJson)(val.is_accessible_via_shared_link, "boolean")) {
        throw "Expecting boolean for \"is_accessible_via_shared_link\" of type \"FolderFull\"";
    }
    const isAccessibleViaSharedLink = (0, json_js_1.isJson)(val.is_accessible_via_shared_link, "boolean") ? val.is_accessible_via_shared_link : void 0;
    if (!(val.can_non_owners_view_collaborators === void 0) && !(0, json_js_1.isJson)(val.can_non_owners_view_collaborators, "boolean")) {
        throw "Expecting boolean for \"can_non_owners_view_collaborators\" of type \"FolderFull\"";
    }
    const canNonOwnersViewCollaborators = (0, json_js_1.isJson)(val.can_non_owners_view_collaborators, "boolean") ? val.can_non_owners_view_collaborators : void 0;
    const classification = val.classification === void 0 ? void 0 : deserializeFolderFullClassificationField(val.classification);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"FolderFull\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"FolderFull\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"FolderFull\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (val.size === void 0) {
        throw "Expecting \"size\" of type \"FolderFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"FolderFull\"";
    }
    const size = val.size;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"FolderFull\" to be defined";
    }
    const pathCollection = deserializeFolderPathCollectionField(val.path_collection);
    if (val.created_by === void 0) {
        throw "Expecting \"created_by\" of type \"FolderFull\" to be defined";
    }
    const createdBy = deserializeUserMini(val.created_by);
    if (val.modified_by === void 0) {
        throw "Expecting \"modified_by\" of type \"FolderFull\" to be defined";
    }
    const modifiedBy = deserializeUserMini(val.modified_by);
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"FolderFull\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"FolderFull\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"FolderFull\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"FolderFull\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    if (val.owned_by === void 0) {
        throw "Expecting \"owned_by\" of type \"FolderFull\" to be defined";
    }
    const ownedBy = deserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link === void 0 ? void 0 : deserializeFolderSharedLinkField(val.shared_link);
    const folderUploadEmail = val.folder_upload_email === void 0 ? void 0 : deserializeFolderFolderUploadEmailField(val.folder_upload_email);
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (val.item_status === void 0) {
        throw "Expecting \"item_status\" of type \"FolderFull\" to be defined";
    }
    const itemStatus = deserializeFolderItemStatusField(val.item_status);
    if (val.item_collection === void 0) {
        throw "Expecting \"item_collection\" of type \"FolderFull\" to be defined";
    }
    const itemCollection = deserializeItems(val.item_collection);
    if (!(val.sequence_id === void 0) && !(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"FolderFull\"";
    }
    const sequenceId = (0, json_js_1.isJson)(val.sequence_id, "string") ? val.sequence_id : void 0;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FolderFull\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FolderFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FolderFull\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FolderFull\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FolderFull\" to be defined";
    }
    const type = deserializeFolderBaseTypeField(val.type);
    return { syncState: syncState, hasCollaborations: hasCollaborations, permissions: permissions, tags: tags, canNonOwnersInvite: canNonOwnersInvite, isExternallyOwned: isExternallyOwned, metadata: metadata, isCollaborationRestrictedToEnterprise: isCollaborationRestrictedToEnterprise, allowedSharedLinkAccessLevels: allowedSharedLinkAccessLevels, allowedInviteeRoles: allowedInviteeRoles, watermarkInfo: watermarkInfo, isAccessibleViaSharedLink: isAccessibleViaSharedLink, canNonOwnersViewCollaborators: canNonOwnersViewCollaborators, classification: classification, createdAt: createdAt, modifiedAt: modifiedAt, description: description, size: size, pathCollection: pathCollection, createdBy: createdBy, modifiedBy: modifiedBy, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, ownedBy: ownedBy, sharedLink: sharedLink, folderUploadEmail: folderUploadEmail, parent: parent, itemStatus: itemStatus, itemCollection: itemCollection, sequenceId: sequenceId, name: name, id: id, etag: etag, type: type };
}
exports.deserializeFolderFull = deserializeFolderFull;
function serializeFolderFull(val) {
    const base = serializeFolder(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FolderFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["sync_state"]: val.syncState === void 0 ? void 0 : serializeFolderFullSyncStateField(val.syncState), ["has_collaborations"]: val.hasCollaborations, ["permissions"]: val.permissions === void 0 ? void 0 : serializeFolderFullPermissionsField(val.permissions), ["tags"]: val.tags === void 0 ? void 0 : val.tags.map(function (item) {
            return void 0;
        }), ["can_non_owners_invite"]: val.canNonOwnersInvite, ["is_externally_owned"]: val.isExternallyOwned, ["metadata"]: val.metadata === void 0 ? void 0 : serializeFolderFullMetadataField(val.metadata), ["is_collaboration_restricted_to_enterprise"]: val.isCollaborationRestrictedToEnterprise, ["allowed_shared_link_access_levels"]: val.allowedSharedLinkAccessLevels === void 0 ? void 0 : val.allowedSharedLinkAccessLevels.map(function (item) {
            return serializeFolderFullAllowedSharedLinkAccessLevelsField(item);
        }), ["allowed_invitee_roles"]: val.allowedInviteeRoles === void 0 ? void 0 : val.allowedInviteeRoles.map(function (item) {
            return serializeFolderFullAllowedInviteeRolesField(item);
        }), ["watermark_info"]: val.watermarkInfo === void 0 ? void 0 : serializeFolderFullWatermarkInfoField(val.watermarkInfo), ["is_accessible_via_shared_link"]: val.isAccessibleViaSharedLink, ["can_non_owners_view_collaborators"]: val.canNonOwnersViewCollaborators, ["classification"]: val.classification === void 0 ? void 0 : serializeFolderFullClassificationField(val.classification) });
}
exports.serializeFolderFull = serializeFolderFull;
function deserializeCollaborationItemField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"CollaborationItemField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    if (val.type === "web_link") {
        return deserializeWebLink(val);
    }
    throw "unknown type";
}
exports.deserializeCollaborationItemField = deserializeCollaborationItemField;
function serializeCollaborationItemField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    if (val.type === "web_link") {
        return serializeWebLink(val);
    }
    throw "unknown type";
}
exports.serializeCollaborationItemField = serializeCollaborationItemField;
function deserializeCollaboration(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Collaboration\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Collaboration\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeCollaborationTypeField(val.type);
    const item = val.item === void 0 ? void 0 : deserializeCollaborationItemField(val.item);
    const accessibleBy = val.accessible_by === void 0 ? void 0 : deserializeUserCollaborations(val.accessible_by);
    if (!(val.invite_email === void 0) && !(0, json_js_1.isJson)(val.invite_email, "string")) {
        throw "Expecting string for \"invite_email\" of type \"Collaboration\"";
    }
    const inviteEmail = (0, json_js_1.isJson)(val.invite_email, "string") ? val.invite_email : void 0;
    const role = val.role === void 0 ? void 0 : deserializeCollaborationRoleField(val.role);
    if (!(val.expires_at === void 0) && !(0, json_js_1.isJson)(val.expires_at, "string")) {
        throw "Expecting string for \"expires_at\" of type \"Collaboration\"";
    }
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    const status = val.status === void 0 ? void 0 : deserializeCollaborationStatusField(val.status);
    if (!(val.acknowledged_at === void 0) && !(0, json_js_1.isJson)(val.acknowledged_at, "string")) {
        throw "Expecting string for \"acknowledged_at\" of type \"Collaboration\"";
    }
    const acknowledgedAt = (0, json_js_1.isJson)(val.acknowledged_at, "string") ? val.acknowledged_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserCollaborations(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Collaboration\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"Collaboration\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const acceptanceRequirementsStatus = val.acceptance_requirements_status === void 0 ? void 0 : deserializeCollaborationAcceptanceRequirementsStatusField(val.acceptance_requirements_status);
    return { id: id, type: type, item: item, accessibleBy: accessibleBy, inviteEmail: inviteEmail, role: role, expiresAt: expiresAt, status: status, acknowledgedAt: acknowledgedAt, createdBy: createdBy, createdAt: createdAt, modifiedAt: modifiedAt, acceptanceRequirementsStatus: acceptanceRequirementsStatus };
}
exports.deserializeCollaboration = deserializeCollaboration;
function serializeCollaboration(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeCollaborationTypeField(val.type), ["item"]: val.item === void 0 ? void 0 : serializeCollaborationItemField(val.item), ["accessible_by"]: val.accessibleBy === void 0 ? void 0 : serializeUserCollaborations(val.accessibleBy), ["invite_email"]: val.inviteEmail, ["role"]: val.role === void 0 ? void 0 : serializeCollaborationRoleField(val.role), ["expires_at"]: val.expiresAt, ["status"]: val.status === void 0 ? void 0 : serializeCollaborationStatusField(val.status), ["acknowledged_at"]: val.acknowledgedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserCollaborations(val.createdBy), ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["acceptance_requirements_status"]: val.acceptanceRequirementsStatus === void 0 ? void 0 : serializeCollaborationAcceptanceRequirementsStatusField(val.acceptanceRequirementsStatus) };
}
exports.serializeCollaboration = serializeCollaboration;
function deserializeCollaborations(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Collaborations\"";
    }
    if (!(val.total_count === void 0) && !(0, json_js_1.isJson)(val.total_count, "number")) {
        throw "Expecting number for \"total_count\" of type \"Collaborations\"";
    }
    const totalCount = (0, json_js_1.isJson)(val.total_count, "number") ? val.total_count : void 0;
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Collaborations\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.offset === void 0) && !(0, json_js_1.isJson)(val.offset, "number")) {
        throw "Expecting number for \"offset\" of type \"Collaborations\"";
    }
    const offset = (0, json_js_1.isJson)(val.offset, "number") ? val.offset : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "array")) {
        throw "Expecting array for \"order\" of type \"Collaborations\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "array") ? val.order.map(function (itm) {
        return deserializeCollaborationsOrderField(itm);
    }) : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Collaborations\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeCollaboration(itm);
    }) : void 0;
    return { totalCount: totalCount, limit: limit, offset: offset, order: order, entries: entries };
}
exports.deserializeCollaborations = deserializeCollaborations;
function serializeCollaborations(val) {
    return { ["total_count"]: val.totalCount, ["limit"]: val.limit, ["offset"]: val.offset, ["order"]: val.order === void 0 ? void 0 : val.order.map(function (item) {
            return serializeCollaborationsOrderField(item);
        }), ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeCollaboration(item);
        }) };
}
exports.serializeCollaborations = serializeCollaborations;
function deserializeWebhookInvocationSourceField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebhookInvocationSourceField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    throw "unknown type";
}
exports.deserializeWebhookInvocationSourceField = deserializeWebhookInvocationSourceField;
function serializeWebhookInvocationSourceField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    throw "unknown type";
}
exports.serializeWebhookInvocationSourceField = serializeWebhookInvocationSourceField;
function deserializeWebhookInvocation(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WebhookInvocation\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WebhookInvocation\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWebhookInvocationTypeField(val.type);
    const webhook = val.webhook === void 0 ? void 0 : deserializeWebhook(val.webhook);
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"WebhookInvocation\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const trigger = val.trigger === void 0 ? void 0 : deserializeWebhookInvocationTriggerField(val.trigger);
    const source = val.source === void 0 ? void 0 : deserializeWebhookInvocationSourceField(val.source);
    return { id: id, type: type, webhook: webhook, createdBy: createdBy, createdAt: createdAt, trigger: trigger, source: source };
}
exports.deserializeWebhookInvocation = deserializeWebhookInvocation;
function serializeWebhookInvocation(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeWebhookInvocationTypeField(val.type), ["webhook"]: val.webhook === void 0 ? void 0 : serializeWebhook(val.webhook), ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["created_at"]: val.createdAt, ["trigger"]: val.trigger === void 0 ? void 0 : serializeWebhookInvocationTriggerField(val.trigger), ["source"]: val.source === void 0 ? void 0 : serializeWebhookInvocationSourceField(val.source) };
}
exports.serializeWebhookInvocation = serializeWebhookInvocation;
function deserializeSkillInvocationSourceField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocationSourceField\"";
    }
    if (val.type === "file") {
        return deserializeFile(val);
    }
    if (val.type === "folder") {
        return deserializeFolder(val);
    }
    throw "unknown type";
}
exports.deserializeSkillInvocationSourceField = deserializeSkillInvocationSourceField;
function serializeSkillInvocationSourceField(val) {
    if (val.type === "file") {
        return serializeFile(val);
    }
    if (val.type === "folder") {
        return serializeFolder(val);
    }
    throw "unknown type";
}
exports.serializeSkillInvocationSourceField = serializeSkillInvocationSourceField;
function deserializeWorkflowFlowsFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTypeField\"";
    }
    if (val === "flow") {
        return "flow";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldTypeField = deserializeWorkflowFlowsFieldTypeField;
function serializeWorkflowFlowsFieldTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldTypeField = serializeWorkflowFlowsFieldTypeField;
function deserializeWorkflowFlowsFieldTriggerFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldTypeField\"";
    }
    if (val === "trigger") {
        return "trigger";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldTriggerFieldTypeField = deserializeWorkflowFlowsFieldTriggerFieldTypeField;
function serializeWorkflowFlowsFieldTriggerFieldTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldTriggerFieldTypeField = serializeWorkflowFlowsFieldTriggerFieldTypeField;
function deserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldTriggerTypeField\"";
    }
    if (val === "WORKFLOW_MANUAL_START") {
        return "WORKFLOW_MANUAL_START";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = deserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField;
function serializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldTriggerFieldTriggerTypeField = serializeWorkflowFlowsFieldTriggerFieldTriggerTypeField;
function deserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldScopeFieldTypeField\"";
    }
    if (val === "trigger_scope") {
        return "trigger_scope";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = deserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField;
function serializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField = serializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField;
function deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField\"";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField;
function serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField = serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField;
function deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowFlowsFieldTriggerFieldScopeFieldObjectField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WorkflowFlowsFieldTriggerFieldScopeFieldObjectField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    return { type: type, id: id };
}
exports.deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField;
function serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField = serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField;
function deserializeWorkflowFlowsFieldTriggerFieldScopeField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowFlowsFieldTriggerFieldScopeField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val.type);
    if (!(val.ref === void 0) && !(0, json_js_1.isJson)(val.ref, "string")) {
        throw "Expecting string for \"ref\" of type \"WorkflowFlowsFieldTriggerFieldScopeField\"";
    }
    const ref = (0, json_js_1.isJson)(val.ref, "string") ? val.ref : void 0;
    const object = val.object === void 0 ? void 0 : deserializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val.object);
    return { type: type, ref: ref, object: object };
}
exports.deserializeWorkflowFlowsFieldTriggerFieldScopeField = deserializeWorkflowFlowsFieldTriggerFieldScopeField;
function serializeWorkflowFlowsFieldTriggerFieldScopeField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeWorkflowFlowsFieldTriggerFieldScopeFieldTypeField(val.type), ["ref"]: val.ref, ["object"]: val.object === void 0 ? void 0 : serializeWorkflowFlowsFieldTriggerFieldScopeFieldObjectField(val.object) };
}
exports.serializeWorkflowFlowsFieldTriggerFieldScopeField = serializeWorkflowFlowsFieldTriggerFieldScopeField;
function deserializeWorkflowFlowsFieldTriggerField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowFlowsFieldTriggerField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeWorkflowFlowsFieldTriggerFieldTypeField(val.type);
    const triggerType = val.trigger_type === void 0 ? void 0 : deserializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val.trigger_type);
    if (!(val.scope === void 0) && !(0, json_js_1.isJson)(val.scope, "array")) {
        throw "Expecting array for \"scope\" of type \"WorkflowFlowsFieldTriggerField\"";
    }
    const scope = (0, json_js_1.isJson)(val.scope, "array") ? val.scope.map(function (itm) {
        return deserializeWorkflowFlowsFieldTriggerFieldScopeField(itm);
    }) : void 0;
    return { type: type, triggerType: triggerType, scope: scope };
}
exports.deserializeWorkflowFlowsFieldTriggerField = deserializeWorkflowFlowsFieldTriggerField;
function serializeWorkflowFlowsFieldTriggerField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeWorkflowFlowsFieldTriggerFieldTypeField(val.type), ["trigger_type"]: val.triggerType === void 0 ? void 0 : serializeWorkflowFlowsFieldTriggerFieldTriggerTypeField(val.triggerType), ["scope"]: val.scope === void 0 ? void 0 : val.scope.map(function (item) {
            return serializeWorkflowFlowsFieldTriggerFieldScopeField(item);
        }) };
}
exports.serializeWorkflowFlowsFieldTriggerField = serializeWorkflowFlowsFieldTriggerField;
function deserializeWorkflowFlowsFieldOutcomesFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldTypeField\"";
    }
    if (val === "outcome") {
        return "outcome";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldOutcomesFieldTypeField = deserializeWorkflowFlowsFieldOutcomesFieldTypeField;
function serializeWorkflowFlowsFieldOutcomesFieldTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldOutcomesFieldTypeField = serializeWorkflowFlowsFieldOutcomesFieldTypeField;
function deserializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldActionTypeField\"";
    }
    if (val === "add_metadata") {
        return "add_metadata";
    }
    if (val === "assign_task") {
        return "assign_task";
    }
    if (val === "copy_file") {
        return "copy_file";
    }
    if (val === "copy_folder") {
        return "copy_folder";
    }
    if (val === "create_folder") {
        return "create_folder";
    }
    if (val === "delete_file") {
        return "delete_file";
    }
    if (val === "delete_folder") {
        return "delete_folder";
    }
    if (val === "lock_file") {
        return "lock_file";
    }
    if (val === "move_file") {
        return "move_file";
    }
    if (val === "move_folder") {
        return "move_folder";
    }
    if (val === "remove_watermark_file") {
        return "remove_watermark_file";
    }
    if (val === "rename_folder") {
        return "rename_folder";
    }
    if (val === "restore_folder") {
        return "restore_folder";
    }
    if (val === "share_file") {
        return "share_file";
    }
    if (val === "share_folder") {
        return "share_folder";
    }
    if (val === "unlock_file") {
        return "unlock_file";
    }
    if (val === "upload_file") {
        return "upload_file";
    }
    if (val === "wait_for_task") {
        return "wait_for_task";
    }
    if (val === "watermark_file") {
        return "watermark_file";
    }
    if (val === "go_back_to_step") {
        return "go_back_to_step";
    }
    if (val === "apply_file_classification") {
        return "apply_file_classification";
    }
    if (val === "apply_folder_classification") {
        return "apply_folder_classification";
    }
    if (val === "send_notification") {
        return "send_notification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldOutcomesFieldActionTypeField = deserializeWorkflowFlowsFieldOutcomesFieldActionTypeField;
function serializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldOutcomesFieldActionTypeField = serializeWorkflowFlowsFieldOutcomesFieldActionTypeField;
function deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField\"";
    }
    if (val === "outcome") {
        return "outcome";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField;
function serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField = serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField;
function deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField\"";
    }
    if (val === "add_metadata") {
        return "add_metadata";
    }
    if (val === "assign_task") {
        return "assign_task";
    }
    if (val === "copy_file") {
        return "copy_file";
    }
    if (val === "copy_folder") {
        return "copy_folder";
    }
    if (val === "create_folder") {
        return "create_folder";
    }
    if (val === "delete_file") {
        return "delete_file";
    }
    if (val === "delete_folder") {
        return "delete_folder";
    }
    if (val === "lock_file") {
        return "lock_file";
    }
    if (val === "move_file") {
        return "move_file";
    }
    if (val === "move_folder") {
        return "move_folder";
    }
    if (val === "remove_watermark_file") {
        return "remove_watermark_file";
    }
    if (val === "rename_folder") {
        return "rename_folder";
    }
    if (val === "restore_folder") {
        return "restore_folder";
    }
    if (val === "share_file") {
        return "share_file";
    }
    if (val === "share_folder") {
        return "share_folder";
    }
    if (val === "unlock_file") {
        return "unlock_file";
    }
    if (val === "upload_file") {
        return "upload_file";
    }
    if (val === "wait_for_task") {
        return "wait_for_task";
    }
    if (val === "watermark_file") {
        return "watermark_file";
    }
    if (val === "go_back_to_step") {
        return "go_back_to_step";
    }
    if (val === "apply_file_classification") {
        return "apply_file_classification";
    }
    if (val === "apply_folder_classification") {
        return "apply_folder_classification";
    }
    if (val === "send_notification") {
        return "send_notification";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField;
function serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val) {
    return val;
}
exports.serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField = serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField;
function deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowFlowsFieldOutcomesFieldIfRejectedField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WorkflowFlowsFieldOutcomesFieldIfRejectedField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"WorkflowFlowsFieldOutcomesFieldIfRejectedField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const actionType = val.action_type === void 0 ? void 0 : deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val.action_type);
    return { id: id, type: type, name: name, actionType: actionType };
}
exports.deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField;
function serializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldTypeField(val.type), ["name"]: val.name, ["action_type"]: val.actionType === void 0 ? void 0 : serializeWorkflowFlowsFieldOutcomesFieldIfRejectedFieldActionTypeField(val.actionType) };
}
exports.serializeWorkflowFlowsFieldOutcomesFieldIfRejectedField = serializeWorkflowFlowsFieldOutcomesFieldIfRejectedField;
function deserializeWorkflowFlowsFieldOutcomesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowFlowsFieldOutcomesField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WorkflowFlowsFieldOutcomesField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWorkflowFlowsFieldOutcomesFieldTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"WorkflowFlowsFieldOutcomesField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    const actionType = val.action_type === void 0 ? void 0 : deserializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val.action_type);
    if (!(val.if_rejected === void 0) && !(0, json_js_1.isJson)(val.if_rejected, "array")) {
        throw "Expecting array for \"if_rejected\" of type \"WorkflowFlowsFieldOutcomesField\"";
    }
    const ifRejected = (0, json_js_1.isJson)(val.if_rejected, "array") ? val.if_rejected.map(function (itm) {
        return deserializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(itm);
    }) : void 0;
    return { id: id, type: type, name: name, actionType: actionType, ifRejected: ifRejected };
}
exports.deserializeWorkflowFlowsFieldOutcomesField = deserializeWorkflowFlowsFieldOutcomesField;
function serializeWorkflowFlowsFieldOutcomesField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeWorkflowFlowsFieldOutcomesFieldTypeField(val.type), ["name"]: val.name, ["action_type"]: val.actionType === void 0 ? void 0 : serializeWorkflowFlowsFieldOutcomesFieldActionTypeField(val.actionType), ["if_rejected"]: val.ifRejected === void 0 ? void 0 : val.ifRejected.map(function (item) {
            return serializeWorkflowFlowsFieldOutcomesFieldIfRejectedField(item);
        }) };
}
exports.serializeWorkflowFlowsFieldOutcomesField = serializeWorkflowFlowsFieldOutcomesField;
function deserializeWorkflowFlowsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowFlowsField\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WorkflowFlowsField\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWorkflowFlowsFieldTypeField(val.type);
    const trigger = val.trigger === void 0 ? void 0 : deserializeWorkflowFlowsFieldTriggerField(val.trigger);
    if (!(val.outcomes === void 0) && !(0, json_js_1.isJson)(val.outcomes, "array")) {
        throw "Expecting array for \"outcomes\" of type \"WorkflowFlowsField\"";
    }
    const outcomes = (0, json_js_1.isJson)(val.outcomes, "array") ? val.outcomes.map(function (itm) {
        return deserializeWorkflowFlowsFieldOutcomesField(itm);
    }) : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"WorkflowFlowsField\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    return { id: id, type: type, trigger: trigger, outcomes: outcomes, createdAt: createdAt, createdBy: createdBy };
}
exports.deserializeWorkflowFlowsField = deserializeWorkflowFlowsField;
function serializeWorkflowFlowsField(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeWorkflowFlowsFieldTypeField(val.type), ["trigger"]: val.trigger === void 0 ? void 0 : serializeWorkflowFlowsFieldTriggerField(val.trigger), ["outcomes"]: val.outcomes === void 0 ? void 0 : val.outcomes.map(function (item) {
            return serializeWorkflowFlowsFieldOutcomesField(item);
        }), ["created_at"]: val.createdAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy) };
}
exports.serializeWorkflowFlowsField = serializeWorkflowFlowsField;
function deserializeWorkflowMiniTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"WorkflowMiniTypeField\"";
    }
    if (val === "workflow") {
        return "workflow";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeWorkflowMiniTypeField = deserializeWorkflowMiniTypeField;
function serializeWorkflowMiniTypeField(val) {
    return val;
}
exports.serializeWorkflowMiniTypeField = serializeWorkflowMiniTypeField;
function deserializeWorkflowMini(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowMini\"";
    }
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WorkflowMini\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWorkflowMiniTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"WorkflowMini\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"WorkflowMini\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (!(val.is_enabled === void 0) && !(0, json_js_1.isJson)(val.is_enabled, "boolean")) {
        throw "Expecting boolean for \"is_enabled\" of type \"WorkflowMini\"";
    }
    const isEnabled = (0, json_js_1.isJson)(val.is_enabled, "boolean") ? val.is_enabled : void 0;
    return { id: id, type: type, name: name, description: description, isEnabled: isEnabled };
}
exports.deserializeWorkflowMini = deserializeWorkflowMini;
function serializeWorkflowMini(val) {
    return { ["id"]: val.id, ["type"]: val.type === void 0 ? void 0 : serializeWorkflowMiniTypeField(val.type), ["name"]: val.name, ["description"]: val.description, ["is_enabled"]: val.isEnabled };
}
exports.serializeWorkflowMini = serializeWorkflowMini;
function deserializeWorkflow(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Workflow\"";
    }
    if (!(val.flows === void 0) && !(0, json_js_1.isJson)(val.flows, "array")) {
        throw "Expecting array for \"flows\" of type \"Workflow\"";
    }
    const flows = (0, json_js_1.isJson)(val.flows, "array") ? val.flows.map(function (itm) {
        return deserializeWorkflowFlowsField(itm);
    }) : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"Workflow\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWorkflowMiniTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"Workflow\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"Workflow\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (!(val.is_enabled === void 0) && !(0, json_js_1.isJson)(val.is_enabled, "boolean")) {
        throw "Expecting boolean for \"is_enabled\" of type \"Workflow\"";
    }
    const isEnabled = (0, json_js_1.isJson)(val.is_enabled, "boolean") ? val.is_enabled : void 0;
    return { flows: flows, id: id, type: type, name: name, description: description, isEnabled: isEnabled };
}
exports.deserializeWorkflow = deserializeWorkflow;
function serializeWorkflow(val) {
    const base = serializeWorkflowMini(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"Workflow\"";
    }
    return Object.assign(Object.assign({}, base), { ["flows"]: val.flows === void 0 ? void 0 : val.flows.map(function (item) {
            return serializeWorkflowFlowsField(item);
        }) });
}
exports.serializeWorkflow = serializeWorkflow;
function deserializeWorkflows(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Workflows\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"Workflows\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"Workflows\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"Workflows\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Workflows\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeWorkflow(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeWorkflows = deserializeWorkflows;
function serializeWorkflows(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeWorkflow(item);
        }) };
}
exports.serializeWorkflows = serializeWorkflows;
function deserializeWorkflowFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"WorkflowFull\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"WorkflowFull\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"WorkflowFull\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserBase(val.created_by);
    const modifiedBy = val.modified_by === void 0 ? void 0 : deserializeUserBase(val.modified_by);
    if (!(val.flows === void 0) && !(0, json_js_1.isJson)(val.flows, "array")) {
        throw "Expecting array for \"flows\" of type \"WorkflowFull\"";
    }
    const flows = (0, json_js_1.isJson)(val.flows, "array") ? val.flows.map(function (itm) {
        return deserializeWorkflowFlowsField(itm);
    }) : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"WorkflowFull\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const type = val.type === void 0 ? void 0 : deserializeWorkflowMiniTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"WorkflowFull\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.description === void 0) && !(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"WorkflowFull\"";
    }
    const description = (0, json_js_1.isJson)(val.description, "string") ? val.description : void 0;
    if (!(val.is_enabled === void 0) && !(0, json_js_1.isJson)(val.is_enabled, "boolean")) {
        throw "Expecting boolean for \"is_enabled\" of type \"WorkflowFull\"";
    }
    const isEnabled = (0, json_js_1.isJson)(val.is_enabled, "boolean") ? val.is_enabled : void 0;
    return { createdAt: createdAt, modifiedAt: modifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, flows: flows, id: id, type: type, name: name, description: description, isEnabled: isEnabled };
}
exports.deserializeWorkflowFull = deserializeWorkflowFull;
function serializeWorkflowFull(val) {
    const base = serializeWorkflow(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"WorkflowFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["created_at"]: val.createdAt, ["modified_at"]: val.modifiedAt, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserBase(val.createdBy), ["modified_by"]: val.modifiedBy === void 0 ? void 0 : serializeUserBase(val.modifiedBy) });
}
exports.serializeWorkflowFull = serializeWorkflowFull;
function deserializeZipDownload(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ZipDownload\"";
    }
    if (!(val.download_url === void 0) && !(0, json_js_1.isJson)(val.download_url, "string")) {
        throw "Expecting string for \"download_url\" of type \"ZipDownload\"";
    }
    const downloadUrl = (0, json_js_1.isJson)(val.download_url, "string") ? val.download_url : void 0;
    if (!(val.status_url === void 0) && !(0, json_js_1.isJson)(val.status_url, "string")) {
        throw "Expecting string for \"status_url\" of type \"ZipDownload\"";
    }
    const statusUrl = (0, json_js_1.isJson)(val.status_url, "string") ? val.status_url : void 0;
    if (!(val.expires_at === void 0) && !(0, json_js_1.isJson)(val.expires_at, "string")) {
        throw "Expecting string for \"expires_at\" of type \"ZipDownload\"";
    }
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    if (!(val.name_conflicts === void 0) && !(0, json_js_1.isJson)(val.name_conflicts, "array")) {
        throw "Expecting array for \"name_conflicts\" of type \"ZipDownload\"";
    }
    const nameConflicts = (0, json_js_1.isJson)(val.name_conflicts, "array") ? val.name_conflicts.map(function (itm) {
        return void 0;
    }) : void 0;
    return { downloadUrl: downloadUrl, statusUrl: statusUrl, expiresAt: expiresAt, nameConflicts: nameConflicts };
}
exports.deserializeZipDownload = deserializeZipDownload;
function serializeZipDownload(val) {
    return { ["download_url"]: val.downloadUrl, ["status_url"]: val.statusUrl, ["expires_at"]: val.expiresAt, ["name_conflicts"]: val.nameConflicts === void 0 ? void 0 : val.nameConflicts.map(function (item) {
            return void 0;
        }) };
}
exports.serializeZipDownload = serializeZipDownload;
function deserializeZipDownloadStatusStateField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"ZipDownloadStatusStateField\"";
    }
    if (val === "in_progress") {
        return "in_progress";
    }
    if (val === "failed") {
        return "failed";
    }
    if (val === "success") {
        return "success";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeZipDownloadStatusStateField = deserializeZipDownloadStatusStateField;
function serializeZipDownloadStatusStateField(val) {
    return val;
}
exports.serializeZipDownloadStatusStateField = serializeZipDownloadStatusStateField;
function deserializeZipDownloadStatus(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ZipDownloadStatus\"";
    }
    if (!(val.total_file_count === void 0) && !(0, json_js_1.isJson)(val.total_file_count, "number")) {
        throw "Expecting number for \"total_file_count\" of type \"ZipDownloadStatus\"";
    }
    const totalFileCount = (0, json_js_1.isJson)(val.total_file_count, "number") ? val.total_file_count : void 0;
    if (!(val.downloaded_file_count === void 0) && !(0, json_js_1.isJson)(val.downloaded_file_count, "number")) {
        throw "Expecting number for \"downloaded_file_count\" of type \"ZipDownloadStatus\"";
    }
    const downloadedFileCount = (0, json_js_1.isJson)(val.downloaded_file_count, "number") ? val.downloaded_file_count : void 0;
    if (!(val.skipped_file_count === void 0) && !(0, json_js_1.isJson)(val.skipped_file_count, "number")) {
        throw "Expecting number for \"skipped_file_count\" of type \"ZipDownloadStatus\"";
    }
    const skippedFileCount = (0, json_js_1.isJson)(val.skipped_file_count, "number") ? val.skipped_file_count : void 0;
    if (!(val.skipped_folder_count === void 0) && !(0, json_js_1.isJson)(val.skipped_folder_count, "number")) {
        throw "Expecting number for \"skipped_folder_count\" of type \"ZipDownloadStatus\"";
    }
    const skippedFolderCount = (0, json_js_1.isJson)(val.skipped_folder_count, "number") ? val.skipped_folder_count : void 0;
    const state = val.state === void 0 ? void 0 : deserializeZipDownloadStatusStateField(val.state);
    return { totalFileCount: totalFileCount, downloadedFileCount: downloadedFileCount, skippedFileCount: skippedFileCount, skippedFolderCount: skippedFolderCount, state: state };
}
exports.deserializeZipDownloadStatus = deserializeZipDownloadStatus;
function serializeZipDownloadStatus(val) {
    return { ["total_file_count"]: val.totalFileCount, ["downloaded_file_count"]: val.downloadedFileCount, ["skipped_file_count"]: val.skippedFileCount, ["skipped_folder_count"]: val.skippedFolderCount, ["state"]: val.state === void 0 ? void 0 : serializeZipDownloadStatusStateField(val.state) };
}
exports.serializeZipDownloadStatus = serializeZipDownloadStatus;
function deserializeSignRequestTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestTypeField\"";
    }
    if (val === "sign-request") {
        return "sign-request";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSignRequestTypeField = deserializeSignRequestTypeField;
function serializeSignRequestTypeField(val) {
    return val;
}
exports.serializeSignRequestTypeField = serializeSignRequestTypeField;
function deserializeSignRequestStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestStatusField\"";
    }
    if (val === "converting") {
        return "converting";
    }
    if (val === "created") {
        return "created";
    }
    if (val === "sent") {
        return "sent";
    }
    if (val === "viewed") {
        return "viewed";
    }
    if (val === "signed") {
        return "signed";
    }
    if (val === "cancelled") {
        return "cancelled";
    }
    if (val === "declined") {
        return "declined";
    }
    if (val === "error_converting") {
        return "error_converting";
    }
    if (val === "error_sending") {
        return "error_sending";
    }
    if (val === "expired") {
        return "expired";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSignRequestStatusField = deserializeSignRequestStatusField;
function serializeSignRequestStatusField(val) {
    return val;
}
exports.serializeSignRequestStatusField = serializeSignRequestStatusField;
function deserializeFileScopeScopeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"FileScopeScopeField\"";
    }
    if (val === "annotation_edit") {
        return "annotation_edit";
    }
    if (val === "annotation_view_all") {
        return "annotation_view_all";
    }
    if (val === "annotation_view_self") {
        return "annotation_view_self";
    }
    if (val === "base_explorer") {
        return "base_explorer";
    }
    if (val === "base_picker") {
        return "base_picker";
    }
    if (val === "base_preview") {
        return "base_preview";
    }
    if (val === "base_upload") {
        return "base_upload";
    }
    if (val === "item_delete") {
        return "item_delete";
    }
    if (val === "item_download") {
        return "item_download";
    }
    if (val === "item_preview") {
        return "item_preview";
    }
    if (val === "item_rename") {
        return "item_rename";
    }
    if (val === "item_share") {
        return "item_share";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeFileScopeScopeField = deserializeFileScopeScopeField;
function serializeFileScopeScopeField(val) {
    return val;
}
exports.serializeFileScopeScopeField = serializeFileScopeScopeField;
function deserializeFileScope(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileScope\"";
    }
    const scope = val.scope === void 0 ? void 0 : deserializeFileScopeScopeField(val.scope);
    const object = val.object === void 0 ? void 0 : deserializeFileMini(val.object);
    return { scope: scope, object: object };
}
exports.deserializeFileScope = deserializeFileScope;
function serializeFileScope(val) {
    return { ["scope"]: val.scope === void 0 ? void 0 : serializeFileScopeScopeField(val.scope), ["object"]: val.object === void 0 ? void 0 : serializeFileMini(val.object) };
}
exports.serializeFileScope = serializeFileScope;
function deserializeFileFullExpiringEmbedLinkField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFullExpiringEmbedLinkField\"";
    }
    if (!(val.access_token === void 0) && !(0, json_js_1.isJson)(val.access_token, "string")) {
        throw "Expecting string for \"access_token\" of type \"FileFullExpiringEmbedLinkField\"";
    }
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    if (!(val.expires_in === void 0) && !(0, json_js_1.isJson)(val.expires_in, "number")) {
        throw "Expecting number for \"expires_in\" of type \"FileFullExpiringEmbedLinkField\"";
    }
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type === void 0 ? void 0 : deserializeFileFullExpiringEmbedLinkFieldTokenTypeField(val.token_type);
    if (!(val.restricted_to === void 0) && !(0, json_js_1.isJson)(val.restricted_to, "array")) {
        throw "Expecting array for \"restricted_to\" of type \"FileFullExpiringEmbedLinkField\"";
    }
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "array") ? val.restricted_to.map(function (itm) {
        return deserializeFileScope(itm);
    }) : void 0;
    if (!(val.url === void 0) && !(0, json_js_1.isJson)(val.url, "string")) {
        throw "Expecting string for \"url\" of type \"FileFullExpiringEmbedLinkField\"";
    }
    const url = (0, json_js_1.isJson)(val.url, "string") ? val.url : void 0;
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo, url: url };
}
exports.deserializeFileFullExpiringEmbedLinkField = deserializeFileFullExpiringEmbedLinkField;
function serializeFileFullExpiringEmbedLinkField(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType === void 0 ? void 0 : serializeFileFullExpiringEmbedLinkFieldTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo === void 0 ? void 0 : val.restrictedTo.map(function (item) {
            return serializeFileScope(item);
        }), ["url"]: val.url };
}
exports.serializeFileFullExpiringEmbedLinkField = serializeFileFullExpiringEmbedLinkField;
function deserializeFileFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"FileFull\"";
    }
    if (!(val.version_number === void 0) && !(0, json_js_1.isJson)(val.version_number, "string")) {
        throw "Expecting string for \"version_number\" of type \"FileFull\"";
    }
    const versionNumber = (0, json_js_1.isJson)(val.version_number, "string") ? val.version_number : void 0;
    if (!(val.comment_count === void 0) && !(0, json_js_1.isJson)(val.comment_count, "number")) {
        throw "Expecting number for \"comment_count\" of type \"FileFull\"";
    }
    const commentCount = (0, json_js_1.isJson)(val.comment_count, "number") ? val.comment_count : void 0;
    const permissions = val.permissions === void 0 ? void 0 : deserializeFileFullPermissionsField(val.permissions);
    if (!(val.tags === void 0) && !(0, json_js_1.isJson)(val.tags, "array")) {
        throw "Expecting array for \"tags\" of type \"FileFull\"";
    }
    const tags = (0, json_js_1.isJson)(val.tags, "array") ? val.tags.map(function (itm) {
        return void 0;
    }) : void 0;
    const lock = val.lock === void 0 ? void 0 : deserializeFileFullLockField(val.lock);
    if (!(val.extension === void 0) && !(0, json_js_1.isJson)(val.extension, "string")) {
        throw "Expecting string for \"extension\" of type \"FileFull\"";
    }
    const extension = (0, json_js_1.isJson)(val.extension, "string") ? val.extension : void 0;
    if (!(val.is_package === void 0) && !(0, json_js_1.isJson)(val.is_package, "boolean")) {
        throw "Expecting boolean for \"is_package\" of type \"FileFull\"";
    }
    const isPackage = (0, json_js_1.isJson)(val.is_package, "boolean") ? val.is_package : void 0;
    const expiringEmbedLink = val.expiring_embed_link === void 0 ? void 0 : deserializeFileFullExpiringEmbedLinkField(val.expiring_embed_link);
    const watermarkInfo = val.watermark_info === void 0 ? void 0 : deserializeFileFullWatermarkInfoField(val.watermark_info);
    if (!(val.is_accessible_via_shared_link === void 0) && !(0, json_js_1.isJson)(val.is_accessible_via_shared_link, "boolean")) {
        throw "Expecting boolean for \"is_accessible_via_shared_link\" of type \"FileFull\"";
    }
    const isAccessibleViaSharedLink = (0, json_js_1.isJson)(val.is_accessible_via_shared_link, "boolean") ? val.is_accessible_via_shared_link : void 0;
    if (!(val.allowed_invitee_roles === void 0) && !(0, json_js_1.isJson)(val.allowed_invitee_roles, "array")) {
        throw "Expecting array for \"allowed_invitee_roles\" of type \"FileFull\"";
    }
    const allowedInviteeRoles = (0, json_js_1.isJson)(val.allowed_invitee_roles, "array") ? val.allowed_invitee_roles.map(function (itm) {
        return deserializeFileFullAllowedInviteeRolesField(itm);
    }) : void 0;
    if (!(val.is_externally_owned === void 0) && !(0, json_js_1.isJson)(val.is_externally_owned, "boolean")) {
        throw "Expecting boolean for \"is_externally_owned\" of type \"FileFull\"";
    }
    const isExternallyOwned = (0, json_js_1.isJson)(val.is_externally_owned, "boolean") ? val.is_externally_owned : void 0;
    if (!(val.has_collaborations === void 0) && !(0, json_js_1.isJson)(val.has_collaborations, "boolean")) {
        throw "Expecting boolean for \"has_collaborations\" of type \"FileFull\"";
    }
    const hasCollaborations = (0, json_js_1.isJson)(val.has_collaborations, "boolean") ? val.has_collaborations : void 0;
    const metadata = val.metadata === void 0 ? void 0 : deserializeFileFullMetadataField(val.metadata);
    if (!(val.expires_at === void 0) && !(0, json_js_1.isJson)(val.expires_at, "string")) {
        throw "Expecting string for \"expires_at\" of type \"FileFull\"";
    }
    const expiresAt = (0, json_js_1.isJson)(val.expires_at, "string") ? val.expires_at : void 0;
    const representations = val.representations === void 0 ? void 0 : deserializeFileFullRepresentationsField(val.representations);
    const classification = val.classification === void 0 ? void 0 : deserializeFileFullClassificationField(val.classification);
    if (!(val.uploader_display_name === void 0) && !(0, json_js_1.isJson)(val.uploader_display_name, "string")) {
        throw "Expecting string for \"uploader_display_name\" of type \"FileFull\"";
    }
    const uploaderDisplayName = (0, json_js_1.isJson)(val.uploader_display_name, "string") ? val.uploader_display_name : void 0;
    if (!(val.disposition_at === void 0) && !(0, json_js_1.isJson)(val.disposition_at, "string")) {
        throw "Expecting string for \"disposition_at\" of type \"FileFull\"";
    }
    const dispositionAt = (0, json_js_1.isJson)(val.disposition_at, "string") ? val.disposition_at : void 0;
    if (!(val.shared_link_permission_options === void 0) && !(0, json_js_1.isJson)(val.shared_link_permission_options, "array")) {
        throw "Expecting array for \"shared_link_permission_options\" of type \"FileFull\"";
    }
    const sharedLinkPermissionOptions = (0, json_js_1.isJson)(val.shared_link_permission_options, "array") ? val.shared_link_permission_options.map(function (itm) {
        return deserializeFileFullSharedLinkPermissionOptionsField(itm);
    }) : void 0;
    if (val.description === void 0) {
        throw "Expecting \"description\" of type \"FileFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.description, "string")) {
        throw "Expecting string for \"description\" of type \"FileFull\"";
    }
    const description = val.description;
    if (val.size === void 0) {
        throw "Expecting \"size\" of type \"FileFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.size, "number")) {
        throw "Expecting number for \"size\" of type \"FileFull\"";
    }
    const size = val.size;
    if (val.path_collection === void 0) {
        throw "Expecting \"path_collection\" of type \"FileFull\" to be defined";
    }
    const pathCollection = deserializeFilePathCollectionField(val.path_collection);
    if (val.created_at === void 0) {
        throw "Expecting \"created_at\" of type \"FileFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"FileFull\"";
    }
    const createdAt = val.created_at;
    if (val.modified_at === void 0) {
        throw "Expecting \"modified_at\" of type \"FileFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"FileFull\"";
    }
    const modifiedAt = val.modified_at;
    if (!(val.trashed_at === void 0) && !(0, json_js_1.isJson)(val.trashed_at, "string")) {
        throw "Expecting string for \"trashed_at\" of type \"FileFull\"";
    }
    const trashedAt = (0, json_js_1.isJson)(val.trashed_at, "string") ? val.trashed_at : void 0;
    if (!(val.purged_at === void 0) && !(0, json_js_1.isJson)(val.purged_at, "string")) {
        throw "Expecting string for \"purged_at\" of type \"FileFull\"";
    }
    const purgedAt = (0, json_js_1.isJson)(val.purged_at, "string") ? val.purged_at : void 0;
    if (!(val.content_created_at === void 0) && !(0, json_js_1.isJson)(val.content_created_at, "string")) {
        throw "Expecting string for \"content_created_at\" of type \"FileFull\"";
    }
    const contentCreatedAt = (0, json_js_1.isJson)(val.content_created_at, "string") ? val.content_created_at : void 0;
    if (!(val.content_modified_at === void 0) && !(0, json_js_1.isJson)(val.content_modified_at, "string")) {
        throw "Expecting string for \"content_modified_at\" of type \"FileFull\"";
    }
    const contentModifiedAt = (0, json_js_1.isJson)(val.content_modified_at, "string") ? val.content_modified_at : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    if (val.modified_by === void 0) {
        throw "Expecting \"modified_by\" of type \"FileFull\" to be defined";
    }
    const modifiedBy = deserializeUserMini(val.modified_by);
    if (val.owned_by === void 0) {
        throw "Expecting \"owned_by\" of type \"FileFull\" to be defined";
    }
    const ownedBy = deserializeUserMini(val.owned_by);
    const sharedLink = val.shared_link === void 0 ? void 0 : deserializeFileSharedLinkField(val.shared_link);
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    if (val.item_status === void 0) {
        throw "Expecting \"item_status\" of type \"FileFull\" to be defined";
    }
    const itemStatus = deserializeFileItemStatusField(val.item_status);
    if (val.sequence_id === void 0) {
        throw "Expecting \"sequence_id\" of type \"FileFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sequence_id, "string")) {
        throw "Expecting string for \"sequence_id\" of type \"FileFull\"";
    }
    const sequenceId = val.sequence_id;
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"FileFull\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (val.sha1 === void 0) {
        throw "Expecting \"sha1\" of type \"FileFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.sha1, "string")) {
        throw "Expecting string for \"sha1\" of type \"FileFull\"";
    }
    const sha1 = val.sha1;
    const fileVersion = val.file_version === void 0 ? void 0 : deserializeFileVersionMini(val.file_version);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"FileFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"FileFull\"";
    }
    const id = val.id;
    if (!(val.etag === void 0) && !(0, json_js_1.isJson)(val.etag, "string")) {
        throw "Expecting string for \"etag\" of type \"FileFull\"";
    }
    const etag = (0, json_js_1.isJson)(val.etag, "string") ? val.etag : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"FileFull\" to be defined";
    }
    const type = deserializeFileBaseTypeField(val.type);
    return { versionNumber: versionNumber, commentCount: commentCount, permissions: permissions, tags: tags, lock: lock, extension: extension, isPackage: isPackage, expiringEmbedLink: expiringEmbedLink, watermarkInfo: watermarkInfo, isAccessibleViaSharedLink: isAccessibleViaSharedLink, allowedInviteeRoles: allowedInviteeRoles, isExternallyOwned: isExternallyOwned, hasCollaborations: hasCollaborations, metadata: metadata, expiresAt: expiresAt, representations: representations, classification: classification, uploaderDisplayName: uploaderDisplayName, dispositionAt: dispositionAt, sharedLinkPermissionOptions: sharedLinkPermissionOptions, description: description, size: size, pathCollection: pathCollection, createdAt: createdAt, modifiedAt: modifiedAt, trashedAt: trashedAt, purgedAt: purgedAt, contentCreatedAt: contentCreatedAt, contentModifiedAt: contentModifiedAt, createdBy: createdBy, modifiedBy: modifiedBy, ownedBy: ownedBy, sharedLink: sharedLink, parent: parent, itemStatus: itemStatus, sequenceId: sequenceId, name: name, sha1: sha1, fileVersion: fileVersion, id: id, etag: etag, type: type };
}
exports.deserializeFileFull = deserializeFileFull;
function serializeFileFull(val) {
    const base = serializeFile(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"FileFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["version_number"]: val.versionNumber, ["comment_count"]: val.commentCount, ["permissions"]: val.permissions === void 0 ? void 0 : serializeFileFullPermissionsField(val.permissions), ["tags"]: val.tags === void 0 ? void 0 : val.tags.map(function (item) {
            return void 0;
        }), ["lock"]: val.lock === void 0 ? void 0 : serializeFileFullLockField(val.lock), ["extension"]: val.extension, ["is_package"]: val.isPackage, ["expiring_embed_link"]: val.expiringEmbedLink === void 0 ? void 0 : serializeFileFullExpiringEmbedLinkField(val.expiringEmbedLink), ["watermark_info"]: val.watermarkInfo === void 0 ? void 0 : serializeFileFullWatermarkInfoField(val.watermarkInfo), ["is_accessible_via_shared_link"]: val.isAccessibleViaSharedLink, ["allowed_invitee_roles"]: val.allowedInviteeRoles === void 0 ? void 0 : val.allowedInviteeRoles.map(function (item) {
            return serializeFileFullAllowedInviteeRolesField(item);
        }), ["is_externally_owned"]: val.isExternallyOwned, ["has_collaborations"]: val.hasCollaborations, ["metadata"]: val.metadata === void 0 ? void 0 : serializeFileFullMetadataField(val.metadata), ["expires_at"]: val.expiresAt, ["representations"]: val.representations === void 0 ? void 0 : serializeFileFullRepresentationsField(val.representations), ["classification"]: val.classification === void 0 ? void 0 : serializeFileFullClassificationField(val.classification), ["uploader_display_name"]: val.uploaderDisplayName, ["disposition_at"]: val.dispositionAt, ["shared_link_permission_options"]: val.sharedLinkPermissionOptions === void 0 ? void 0 : val.sharedLinkPermissionOptions.map(function (item) {
            return serializeFileFullSharedLinkPermissionOptionsField(item);
        }) });
}
exports.serializeFileFull = serializeFileFull;
function deserializeAccessToken(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"AccessToken\"";
    }
    if (!(val.access_token === void 0) && !(0, json_js_1.isJson)(val.access_token, "string")) {
        throw "Expecting string for \"access_token\" of type \"AccessToken\"";
    }
    const accessToken = (0, json_js_1.isJson)(val.access_token, "string") ? val.access_token : void 0;
    if (!(val.expires_in === void 0) && !(0, json_js_1.isJson)(val.expires_in, "number")) {
        throw "Expecting number for \"expires_in\" of type \"AccessToken\"";
    }
    const expiresIn = (0, json_js_1.isJson)(val.expires_in, "number") ? val.expires_in : void 0;
    const tokenType = val.token_type === void 0 ? void 0 : deserializeAccessTokenTokenTypeField(val.token_type);
    if (!(val.restricted_to === void 0) && !(0, json_js_1.isJson)(val.restricted_to, "array")) {
        throw "Expecting array for \"restricted_to\" of type \"AccessToken\"";
    }
    const restrictedTo = (0, json_js_1.isJson)(val.restricted_to, "array") ? val.restricted_to.map(function (itm) {
        return deserializeFileScope(itm);
    }) : void 0;
    if (!(val.refresh_token === void 0) && !(0, json_js_1.isJson)(val.refresh_token, "string")) {
        throw "Expecting string for \"refresh_token\" of type \"AccessToken\"";
    }
    const refreshToken = (0, json_js_1.isJson)(val.refresh_token, "string") ? val.refresh_token : void 0;
    const issuedTokenType = val.issued_token_type === void 0 ? void 0 : deserializeAccessTokenIssuedTokenTypeField(val.issued_token_type);
    return { accessToken: accessToken, expiresIn: expiresIn, tokenType: tokenType, restrictedTo: restrictedTo, refreshToken: refreshToken, issuedTokenType: issuedTokenType };
}
exports.deserializeAccessToken = deserializeAccessToken;
function serializeAccessToken(val) {
    return { ["access_token"]: val.accessToken, ["expires_in"]: val.expiresIn, ["token_type"]: val.tokenType === void 0 ? void 0 : serializeAccessTokenTokenTypeField(val.tokenType), ["restricted_to"]: val.restrictedTo === void 0 ? void 0 : val.restrictedTo.map(function (item) {
            return serializeFileScope(item);
        }), ["refresh_token"]: val.refreshToken, ["issued_token_type"]: val.issuedTokenType === void 0 ? void 0 : serializeAccessTokenIssuedTokenTypeField(val.issuedTokenType) };
}
exports.serializeAccessToken = serializeAccessToken;
function deserializeEventSourceItemTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"EventSourceItemTypeField\"";
    }
    if (val === "file") {
        return "file";
    }
    if (val === "folder") {
        return "folder";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeEventSourceItemTypeField = deserializeEventSourceItemTypeField;
function serializeEventSourceItemTypeField(val) {
    return val;
}
exports.serializeEventSourceItemTypeField = serializeEventSourceItemTypeField;
function deserializeEventSourceClassificationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"EventSourceClassificationField\"";
    }
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"EventSourceClassificationField\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    return { name: name };
}
exports.deserializeEventSourceClassificationField = deserializeEventSourceClassificationField;
function serializeEventSourceClassificationField(val) {
    return { ["name"]: val.name };
}
exports.serializeEventSourceClassificationField = serializeEventSourceClassificationField;
function deserializeEventSource(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"EventSource\"";
    }
    if (val.item_type === void 0) {
        throw "Expecting \"item_type\" of type \"EventSource\" to be defined";
    }
    const itemType = deserializeEventSourceItemTypeField(val.item_type);
    if (val.item_id === void 0) {
        throw "Expecting \"item_id\" of type \"EventSource\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.item_id, "string")) {
        throw "Expecting string for \"item_id\" of type \"EventSource\"";
    }
    const itemId = val.item_id;
    if (val.item_name === void 0) {
        throw "Expecting \"item_name\" of type \"EventSource\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.item_name, "string")) {
        throw "Expecting string for \"item_name\" of type \"EventSource\"";
    }
    const itemName = val.item_name;
    const classification = val.classification === void 0 ? void 0 : deserializeEventSourceClassificationField(val.classification);
    const parent = val.parent === void 0 ? void 0 : deserializeFolderMini(val.parent);
    const ownedBy = val.owned_by === void 0 ? void 0 : deserializeUserMini(val.owned_by);
    return { itemType: itemType, itemId: itemId, itemName: itemName, classification: classification, parent: parent, ownedBy: ownedBy };
}
exports.deserializeEventSource = deserializeEventSource;
function serializeEventSource(val) {
    return { ["item_type"]: serializeEventSourceItemTypeField(val.itemType), ["item_id"]: val.itemId, ["item_name"]: val.itemName, ["classification"]: val.classification === void 0 ? void 0 : serializeEventSourceClassificationField(val.classification), ["parent"]: val.parent === void 0 ? void 0 : serializeFolderMini(val.parent), ["owned_by"]: val.ownedBy === void 0 ? void 0 : serializeUserMini(val.ownedBy) };
}
exports.serializeEventSource = serializeEventSource;
function deserializeEventSourceField(val) {
    throw "Can't deserialize EventSourceField";
}
exports.deserializeEventSourceField = deserializeEventSourceField;
function serializeEventSourceField(val) {
    throw "Can't serialize EventSourceField";
}
exports.serializeEventSourceField = serializeEventSourceField;
function deserializeEvent(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Event\"";
    }
    if (!(val.type === void 0) && !(0, json_js_1.isJson)(val.type, "string")) {
        throw "Expecting string for \"type\" of type \"Event\"";
    }
    const type = (0, json_js_1.isJson)(val.type, "string") ? val.type : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"Event\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.recorded_at === void 0) && !(0, json_js_1.isJson)(val.recorded_at, "string")) {
        throw "Expecting string for \"recorded_at\" of type \"Event\"";
    }
    const recordedAt = (0, json_js_1.isJson)(val.recorded_at, "string") ? val.recorded_at : void 0;
    if (!(val.event_id === void 0) && !(0, json_js_1.isJson)(val.event_id, "string")) {
        throw "Expecting string for \"event_id\" of type \"Event\"";
    }
    const eventId = (0, json_js_1.isJson)(val.event_id, "string") ? val.event_id : void 0;
    const createdBy = val.created_by === void 0 ? void 0 : deserializeUserMini(val.created_by);
    const eventType = val.event_type === void 0 ? void 0 : deserializeEventEventTypeField(val.event_type);
    if (!(val.session_id === void 0) && !(0, json_js_1.isJson)(val.session_id, "string")) {
        throw "Expecting string for \"session_id\" of type \"Event\"";
    }
    const sessionId = (0, json_js_1.isJson)(val.session_id, "string") ? val.session_id : void 0;
    const source = val.source === void 0 ? void 0 : deserializeEventSourceField(val.source);
    const additionalDetails = val.additional_details === void 0 ? void 0 : deserializeEventAdditionalDetailsField(val.additional_details);
    return { type: type, createdAt: createdAt, recordedAt: recordedAt, eventId: eventId, createdBy: createdBy, eventType: eventType, sessionId: sessionId, source: source, additionalDetails: additionalDetails };
}
exports.deserializeEvent = deserializeEvent;
function serializeEvent(val) {
    return { ["type"]: val.type, ["created_at"]: val.createdAt, ["recorded_at"]: val.recordedAt, ["event_id"]: val.eventId, ["created_by"]: val.createdBy === void 0 ? void 0 : serializeUserMini(val.createdBy), ["event_type"]: val.eventType === void 0 ? void 0 : serializeEventEventTypeField(val.eventType), ["session_id"]: val.sessionId, ["source"]: val.source === void 0 ? void 0 : serializeEventSourceField(val.source), ["additional_details"]: val.additionalDetails === void 0 ? void 0 : serializeEventAdditionalDetailsField(val.additionalDetails) };
}
exports.serializeEvent = serializeEvent;
function deserializeEvents(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"Events\"";
    }
    if (!(val.chunk_size === void 0) && !(0, json_js_1.isJson)(val.chunk_size, "number")) {
        throw "Expecting number for \"chunk_size\" of type \"Events\"";
    }
    const chunkSize = (0, json_js_1.isJson)(val.chunk_size, "number") ? val.chunk_size : void 0;
    if (!(val.next_stream_position === void 0) && !(0, json_js_1.isJson)(val.next_stream_position, "string")) {
        throw "Expecting string for \"next_stream_position\" of type \"Events\"";
    }
    const nextStreamPosition = (0, json_js_1.isJson)(val.next_stream_position, "string") ? val.next_stream_position : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"Events\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeEvent(itm);
    }) : void 0;
    return { chunkSize: chunkSize, nextStreamPosition: nextStreamPosition, entries: entries };
}
exports.deserializeEvents = deserializeEvents;
function serializeEvents(val) {
    return { ["chunk_size"]: val.chunkSize, ["next_stream_position"]: val.nextStreamPosition, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeEvent(item);
        }) };
}
exports.serializeEvents = serializeEvents;
function deserializeSkillInvocation(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillInvocation\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeSkillInvocationTypeField(val.type);
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"SkillInvocation\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    const skill = val.skill === void 0 ? void 0 : deserializeSkillInvocationSkillField(val.skill);
    const token = val.token === void 0 ? void 0 : deserializeSkillInvocationTokenField(val.token);
    const status = val.status === void 0 ? void 0 : deserializeSkillInvocationStatusField(val.status);
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"SkillInvocation\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.trigger === void 0) && !(0, json_js_1.isJson)(val.trigger, "string")) {
        throw "Expecting string for \"trigger\" of type \"SkillInvocation\"";
    }
    const trigger = (0, json_js_1.isJson)(val.trigger, "string") ? val.trigger : void 0;
    const enterprise = val.enterprise === void 0 ? void 0 : deserializeSkillInvocationEnterpriseField(val.enterprise);
    const source = val.source === void 0 ? void 0 : deserializeSkillInvocationSourceField(val.source);
    const event = val.event === void 0 ? void 0 : deserializeEvent(val.event);
    return { type: type, id: id, skill: skill, token: token, status: status, createdAt: createdAt, trigger: trigger, enterprise: enterprise, source: source, event: event };
}
exports.deserializeSkillInvocation = deserializeSkillInvocation;
function serializeSkillInvocation(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeSkillInvocationTypeField(val.type), ["id"]: val.id, ["skill"]: val.skill === void 0 ? void 0 : serializeSkillInvocationSkillField(val.skill), ["token"]: val.token === void 0 ? void 0 : serializeSkillInvocationTokenField(val.token), ["status"]: val.status === void 0 ? void 0 : serializeSkillInvocationStatusField(val.status), ["created_at"]: val.createdAt, ["trigger"]: val.trigger, ["enterprise"]: val.enterprise === void 0 ? void 0 : serializeSkillInvocationEnterpriseField(val.enterprise), ["source"]: val.source === void 0 ? void 0 : serializeSkillInvocationSourceField(val.source), ["event"]: val.event === void 0 ? void 0 : serializeEvent(val.event) };
}
exports.serializeSkillInvocation = serializeSkillInvocation;
function deserializeKeywordSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardTypeField\"";
    }
    if (val === "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeKeywordSkillCardTypeField = deserializeKeywordSkillCardTypeField;
function serializeKeywordSkillCardTypeField(val) {
    return val;
}
exports.serializeKeywordSkillCardTypeField = serializeKeywordSkillCardTypeField;
function deserializeKeywordSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardSkillCardTypeField\"";
    }
    if (val === "keyword") {
        return "keyword";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeKeywordSkillCardSkillCardTypeField = deserializeKeywordSkillCardSkillCardTypeField;
function serializeKeywordSkillCardSkillCardTypeField(val) {
    return val;
}
exports.serializeKeywordSkillCardSkillCardTypeField = serializeKeywordSkillCardSkillCardTypeField;
function deserializeKeywordSkillCardSkillCardTitleField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"KeywordSkillCardSkillCardTitleField\"";
    }
    if (!(val.code === void 0) && !(0, json_js_1.isJson)(val.code, "string")) {
        throw "Expecting string for \"code\" of type \"KeywordSkillCardSkillCardTitleField\"";
    }
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    if (val.message === void 0) {
        throw "Expecting \"message\" of type \"KeywordSkillCardSkillCardTitleField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"KeywordSkillCardSkillCardTitleField\"";
    }
    const message = val.message;
    return { code: code, message: message };
}
exports.deserializeKeywordSkillCardSkillCardTitleField = deserializeKeywordSkillCardSkillCardTitleField;
function serializeKeywordSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.serializeKeywordSkillCardSkillCardTitleField = serializeKeywordSkillCardSkillCardTitleField;
function deserializeKeywordSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardSkillFieldTypeField\"";
    }
    if (val === "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeKeywordSkillCardSkillFieldTypeField = deserializeKeywordSkillCardSkillFieldTypeField;
function serializeKeywordSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.serializeKeywordSkillCardSkillFieldTypeField = serializeKeywordSkillCardSkillFieldTypeField;
function deserializeKeywordSkillCardSkillField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"KeywordSkillCardSkillField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"KeywordSkillCardSkillField\" to be defined";
    }
    const type = deserializeKeywordSkillCardSkillFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"KeywordSkillCardSkillField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"KeywordSkillCardSkillField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeKeywordSkillCardSkillField = deserializeKeywordSkillCardSkillField;
function serializeKeywordSkillCardSkillField(val) {
    return { ["type"]: serializeKeywordSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeKeywordSkillCardSkillField = serializeKeywordSkillCardSkillField;
function deserializeKeywordSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"KeywordSkillCardInvocationFieldTypeField\"";
    }
    if (val === "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeKeywordSkillCardInvocationFieldTypeField = deserializeKeywordSkillCardInvocationFieldTypeField;
function serializeKeywordSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.serializeKeywordSkillCardInvocationFieldTypeField = serializeKeywordSkillCardInvocationFieldTypeField;
function deserializeKeywordSkillCardInvocationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"KeywordSkillCardInvocationField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"KeywordSkillCardInvocationField\" to be defined";
    }
    const type = deserializeKeywordSkillCardInvocationFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"KeywordSkillCardInvocationField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"KeywordSkillCardInvocationField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeKeywordSkillCardInvocationField = deserializeKeywordSkillCardInvocationField;
function serializeKeywordSkillCardInvocationField(val) {
    return { ["type"]: serializeKeywordSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeKeywordSkillCardInvocationField = serializeKeywordSkillCardInvocationField;
function deserializeKeywordSkillCardEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"KeywordSkillCardEntriesField\"";
    }
    if (!(val.text === void 0) && !(0, json_js_1.isJson)(val.text, "string")) {
        throw "Expecting string for \"text\" of type \"KeywordSkillCardEntriesField\"";
    }
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    return { text: text };
}
exports.deserializeKeywordSkillCardEntriesField = deserializeKeywordSkillCardEntriesField;
function serializeKeywordSkillCardEntriesField(val) {
    return { ["text"]: val.text };
}
exports.serializeKeywordSkillCardEntriesField = serializeKeywordSkillCardEntriesField;
function deserializeKeywordSkillCard(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"KeywordSkillCard\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"KeywordSkillCard\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"KeywordSkillCard\" to be defined";
    }
    const type = deserializeKeywordSkillCardTypeField(val.type);
    if (val.skill_card_type === void 0) {
        throw "Expecting \"skill_card_type\" of type \"KeywordSkillCard\" to be defined";
    }
    const skillCardType = deserializeKeywordSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title === void 0 ? void 0 : deserializeKeywordSkillCardSkillCardTitleField(val.skill_card_title);
    if (val.skill === void 0) {
        throw "Expecting \"skill\" of type \"KeywordSkillCard\" to be defined";
    }
    const skill = deserializeKeywordSkillCardSkillField(val.skill);
    if (val.invocation === void 0) {
        throw "Expecting \"invocation\" of type \"KeywordSkillCard\" to be defined";
    }
    const invocation = deserializeKeywordSkillCardInvocationField(val.invocation);
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"KeywordSkillCard\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"KeywordSkillCard\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeKeywordSkillCardEntriesField(itm);
    });
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, skill: skill, invocation: invocation, entries: entries };
}
exports.deserializeKeywordSkillCard = deserializeKeywordSkillCard;
function serializeKeywordSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: serializeKeywordSkillCardTypeField(val.type), ["skill_card_type"]: serializeKeywordSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle === void 0 ? void 0 : serializeKeywordSkillCardSkillCardTitleField(val.skillCardTitle), ["skill"]: serializeKeywordSkillCardSkillField(val.skill), ["invocation"]: serializeKeywordSkillCardInvocationField(val.invocation), ["entries"]: val.entries.map(function (item) {
            return serializeKeywordSkillCardEntriesField(item);
        }) };
}
exports.serializeKeywordSkillCard = serializeKeywordSkillCard;
function deserializeTimelineSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardTypeField\"";
    }
    if (val === "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTimelineSkillCardTypeField = deserializeTimelineSkillCardTypeField;
function serializeTimelineSkillCardTypeField(val) {
    return val;
}
exports.serializeTimelineSkillCardTypeField = serializeTimelineSkillCardTypeField;
function deserializeTimelineSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardSkillCardTypeField\"";
    }
    if (val === "timeline") {
        return "timeline";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTimelineSkillCardSkillCardTypeField = deserializeTimelineSkillCardSkillCardTypeField;
function serializeTimelineSkillCardSkillCardTypeField(val) {
    return val;
}
exports.serializeTimelineSkillCardSkillCardTypeField = serializeTimelineSkillCardSkillCardTypeField;
function deserializeTimelineSkillCardSkillCardTitleField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TimelineSkillCardSkillCardTitleField\"";
    }
    if (!(val.code === void 0) && !(0, json_js_1.isJson)(val.code, "string")) {
        throw "Expecting string for \"code\" of type \"TimelineSkillCardSkillCardTitleField\"";
    }
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    if (val.message === void 0) {
        throw "Expecting \"message\" of type \"TimelineSkillCardSkillCardTitleField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"TimelineSkillCardSkillCardTitleField\"";
    }
    const message = val.message;
    return { code: code, message: message };
}
exports.deserializeTimelineSkillCardSkillCardTitleField = deserializeTimelineSkillCardSkillCardTitleField;
function serializeTimelineSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.serializeTimelineSkillCardSkillCardTitleField = serializeTimelineSkillCardSkillCardTitleField;
function deserializeTimelineSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardSkillFieldTypeField\"";
    }
    if (val === "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTimelineSkillCardSkillFieldTypeField = deserializeTimelineSkillCardSkillFieldTypeField;
function serializeTimelineSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.serializeTimelineSkillCardSkillFieldTypeField = serializeTimelineSkillCardSkillFieldTypeField;
function deserializeTimelineSkillCardSkillField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TimelineSkillCardSkillField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TimelineSkillCardSkillField\" to be defined";
    }
    const type = deserializeTimelineSkillCardSkillFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"TimelineSkillCardSkillField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TimelineSkillCardSkillField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeTimelineSkillCardSkillField = deserializeTimelineSkillCardSkillField;
function serializeTimelineSkillCardSkillField(val) {
    return { ["type"]: serializeTimelineSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeTimelineSkillCardSkillField = serializeTimelineSkillCardSkillField;
function deserializeTimelineSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TimelineSkillCardInvocationFieldTypeField\"";
    }
    if (val === "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTimelineSkillCardInvocationFieldTypeField = deserializeTimelineSkillCardInvocationFieldTypeField;
function serializeTimelineSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.serializeTimelineSkillCardInvocationFieldTypeField = serializeTimelineSkillCardInvocationFieldTypeField;
function deserializeTimelineSkillCardInvocationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TimelineSkillCardInvocationField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TimelineSkillCardInvocationField\" to be defined";
    }
    const type = deserializeTimelineSkillCardInvocationFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"TimelineSkillCardInvocationField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TimelineSkillCardInvocationField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeTimelineSkillCardInvocationField = deserializeTimelineSkillCardInvocationField;
function serializeTimelineSkillCardInvocationField(val) {
    return { ["type"]: serializeTimelineSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeTimelineSkillCardInvocationField = serializeTimelineSkillCardInvocationField;
function deserializeTimelineSkillCardEntriesFieldAppearsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TimelineSkillCardEntriesFieldAppearsField\"";
    }
    if (!(val.start === void 0) && !(0, json_js_1.isJson)(val.start, "number")) {
        throw "Expecting number for \"start\" of type \"TimelineSkillCardEntriesFieldAppearsField\"";
    }
    const start = (0, json_js_1.isJson)(val.start, "number") ? val.start : void 0;
    if (!(val.end === void 0) && !(0, json_js_1.isJson)(val.end, "number")) {
        throw "Expecting number for \"end\" of type \"TimelineSkillCardEntriesFieldAppearsField\"";
    }
    const end = (0, json_js_1.isJson)(val.end, "number") ? val.end : void 0;
    return { start: start, end: end };
}
exports.deserializeTimelineSkillCardEntriesFieldAppearsField = deserializeTimelineSkillCardEntriesFieldAppearsField;
function serializeTimelineSkillCardEntriesFieldAppearsField(val) {
    return { ["start"]: val.start, ["end"]: val.end };
}
exports.serializeTimelineSkillCardEntriesFieldAppearsField = serializeTimelineSkillCardEntriesFieldAppearsField;
function deserializeTimelineSkillCardEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TimelineSkillCardEntriesField\"";
    }
    if (!(val.text === void 0) && !(0, json_js_1.isJson)(val.text, "string")) {
        throw "Expecting string for \"text\" of type \"TimelineSkillCardEntriesField\"";
    }
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    if (!(val.appears === void 0) && !(0, json_js_1.isJson)(val.appears, "array")) {
        throw "Expecting array for \"appears\" of type \"TimelineSkillCardEntriesField\"";
    }
    const appears = (0, json_js_1.isJson)(val.appears, "array") ? val.appears.map(function (itm) {
        return deserializeTimelineSkillCardEntriesFieldAppearsField(itm);
    }) : void 0;
    if (!(val.image_url === void 0) && !(0, json_js_1.isJson)(val.image_url, "string")) {
        throw "Expecting string for \"image_url\" of type \"TimelineSkillCardEntriesField\"";
    }
    const imageUrl = (0, json_js_1.isJson)(val.image_url, "string") ? val.image_url : void 0;
    return { text: text, appears: appears, imageUrl: imageUrl };
}
exports.deserializeTimelineSkillCardEntriesField = deserializeTimelineSkillCardEntriesField;
function serializeTimelineSkillCardEntriesField(val) {
    return { ["text"]: val.text, ["appears"]: val.appears === void 0 ? void 0 : val.appears.map(function (item) {
            return serializeTimelineSkillCardEntriesFieldAppearsField(item);
        }), ["image_url"]: val.imageUrl };
}
exports.serializeTimelineSkillCardEntriesField = serializeTimelineSkillCardEntriesField;
function deserializeTimelineSkillCard(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TimelineSkillCard\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TimelineSkillCard\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TimelineSkillCard\" to be defined";
    }
    const type = deserializeTimelineSkillCardTypeField(val.type);
    if (val.skill_card_type === void 0) {
        throw "Expecting \"skill_card_type\" of type \"TimelineSkillCard\" to be defined";
    }
    const skillCardType = deserializeTimelineSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title === void 0 ? void 0 : deserializeTimelineSkillCardSkillCardTitleField(val.skill_card_title);
    if (val.skill === void 0) {
        throw "Expecting \"skill\" of type \"TimelineSkillCard\" to be defined";
    }
    const skill = deserializeTimelineSkillCardSkillField(val.skill);
    if (val.invocation === void 0) {
        throw "Expecting \"invocation\" of type \"TimelineSkillCard\" to be defined";
    }
    const invocation = deserializeTimelineSkillCardInvocationField(val.invocation);
    if (!(val.duration === void 0) && !(0, json_js_1.isJson)(val.duration, "number")) {
        throw "Expecting number for \"duration\" of type \"TimelineSkillCard\"";
    }
    const duration = (0, json_js_1.isJson)(val.duration, "number") ? val.duration : void 0;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TimelineSkillCard\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TimelineSkillCard\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeTimelineSkillCardEntriesField(itm);
    });
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, skill: skill, invocation: invocation, duration: duration, entries: entries };
}
exports.deserializeTimelineSkillCard = deserializeTimelineSkillCard;
function serializeTimelineSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: serializeTimelineSkillCardTypeField(val.type), ["skill_card_type"]: serializeTimelineSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle === void 0 ? void 0 : serializeTimelineSkillCardSkillCardTitleField(val.skillCardTitle), ["skill"]: serializeTimelineSkillCardSkillField(val.skill), ["invocation"]: serializeTimelineSkillCardInvocationField(val.invocation), ["duration"]: val.duration, ["entries"]: val.entries.map(function (item) {
            return serializeTimelineSkillCardEntriesField(item);
        }) };
}
exports.serializeTimelineSkillCard = serializeTimelineSkillCard;
function deserializeTranscriptSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardTypeField\"";
    }
    if (val === "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTranscriptSkillCardTypeField = deserializeTranscriptSkillCardTypeField;
function serializeTranscriptSkillCardTypeField(val) {
    return val;
}
exports.serializeTranscriptSkillCardTypeField = serializeTranscriptSkillCardTypeField;
function deserializeTranscriptSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardSkillCardTypeField\"";
    }
    if (val === "transcript") {
        return "transcript";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTranscriptSkillCardSkillCardTypeField = deserializeTranscriptSkillCardSkillCardTypeField;
function serializeTranscriptSkillCardSkillCardTypeField(val) {
    return val;
}
exports.serializeTranscriptSkillCardSkillCardTypeField = serializeTranscriptSkillCardSkillCardTypeField;
function deserializeTranscriptSkillCardSkillCardTitleField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TranscriptSkillCardSkillCardTitleField\"";
    }
    if (!(val.code === void 0) && !(0, json_js_1.isJson)(val.code, "string")) {
        throw "Expecting string for \"code\" of type \"TranscriptSkillCardSkillCardTitleField\"";
    }
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    if (val.message === void 0) {
        throw "Expecting \"message\" of type \"TranscriptSkillCardSkillCardTitleField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"TranscriptSkillCardSkillCardTitleField\"";
    }
    const message = val.message;
    return { code: code, message: message };
}
exports.deserializeTranscriptSkillCardSkillCardTitleField = deserializeTranscriptSkillCardSkillCardTitleField;
function serializeTranscriptSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.serializeTranscriptSkillCardSkillCardTitleField = serializeTranscriptSkillCardSkillCardTitleField;
function deserializeTranscriptSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardSkillFieldTypeField\"";
    }
    if (val === "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTranscriptSkillCardSkillFieldTypeField = deserializeTranscriptSkillCardSkillFieldTypeField;
function serializeTranscriptSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.serializeTranscriptSkillCardSkillFieldTypeField = serializeTranscriptSkillCardSkillFieldTypeField;
function deserializeTranscriptSkillCardSkillField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TranscriptSkillCardSkillField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TranscriptSkillCardSkillField\" to be defined";
    }
    const type = deserializeTranscriptSkillCardSkillFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"TranscriptSkillCardSkillField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TranscriptSkillCardSkillField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeTranscriptSkillCardSkillField = deserializeTranscriptSkillCardSkillField;
function serializeTranscriptSkillCardSkillField(val) {
    return { ["type"]: serializeTranscriptSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeTranscriptSkillCardSkillField = serializeTranscriptSkillCardSkillField;
function deserializeTranscriptSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TranscriptSkillCardInvocationFieldTypeField\"";
    }
    if (val === "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTranscriptSkillCardInvocationFieldTypeField = deserializeTranscriptSkillCardInvocationFieldTypeField;
function serializeTranscriptSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.serializeTranscriptSkillCardInvocationFieldTypeField = serializeTranscriptSkillCardInvocationFieldTypeField;
function deserializeTranscriptSkillCardInvocationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TranscriptSkillCardInvocationField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TranscriptSkillCardInvocationField\" to be defined";
    }
    const type = deserializeTranscriptSkillCardInvocationFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"TranscriptSkillCardInvocationField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"TranscriptSkillCardInvocationField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeTranscriptSkillCardInvocationField = deserializeTranscriptSkillCardInvocationField;
function serializeTranscriptSkillCardInvocationField(val) {
    return { ["type"]: serializeTranscriptSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeTranscriptSkillCardInvocationField = serializeTranscriptSkillCardInvocationField;
function deserializeTranscriptSkillCardEntriesFieldAppearsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TranscriptSkillCardEntriesFieldAppearsField\"";
    }
    if (!(val.start === void 0) && !(0, json_js_1.isJson)(val.start, "number")) {
        throw "Expecting number for \"start\" of type \"TranscriptSkillCardEntriesFieldAppearsField\"";
    }
    const start = (0, json_js_1.isJson)(val.start, "number") ? val.start : void 0;
    return { start: start };
}
exports.deserializeTranscriptSkillCardEntriesFieldAppearsField = deserializeTranscriptSkillCardEntriesFieldAppearsField;
function serializeTranscriptSkillCardEntriesFieldAppearsField(val) {
    return { ["start"]: val.start };
}
exports.serializeTranscriptSkillCardEntriesFieldAppearsField = serializeTranscriptSkillCardEntriesFieldAppearsField;
function deserializeTranscriptSkillCardEntriesField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TranscriptSkillCardEntriesField\"";
    }
    if (!(val.text === void 0) && !(0, json_js_1.isJson)(val.text, "string")) {
        throw "Expecting string for \"text\" of type \"TranscriptSkillCardEntriesField\"";
    }
    const text = (0, json_js_1.isJson)(val.text, "string") ? val.text : void 0;
    if (!(val.appears === void 0) && !(0, json_js_1.isJson)(val.appears, "array")) {
        throw "Expecting array for \"appears\" of type \"TranscriptSkillCardEntriesField\"";
    }
    const appears = (0, json_js_1.isJson)(val.appears, "array") ? val.appears.map(function (itm) {
        return deserializeTranscriptSkillCardEntriesFieldAppearsField(itm);
    }) : void 0;
    return { text: text, appears: appears };
}
exports.deserializeTranscriptSkillCardEntriesField = deserializeTranscriptSkillCardEntriesField;
function serializeTranscriptSkillCardEntriesField(val) {
    return { ["text"]: val.text, ["appears"]: val.appears === void 0 ? void 0 : val.appears.map(function (item) {
            return serializeTranscriptSkillCardEntriesFieldAppearsField(item);
        }) };
}
exports.serializeTranscriptSkillCardEntriesField = serializeTranscriptSkillCardEntriesField;
function deserializeTranscriptSkillCard(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TranscriptSkillCard\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"TranscriptSkillCard\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"TranscriptSkillCard\" to be defined";
    }
    const type = deserializeTranscriptSkillCardTypeField(val.type);
    if (val.skill_card_type === void 0) {
        throw "Expecting \"skill_card_type\" of type \"TranscriptSkillCard\" to be defined";
    }
    const skillCardType = deserializeTranscriptSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title === void 0 ? void 0 : deserializeTranscriptSkillCardSkillCardTitleField(val.skill_card_title);
    if (val.skill === void 0) {
        throw "Expecting \"skill\" of type \"TranscriptSkillCard\" to be defined";
    }
    const skill = deserializeTranscriptSkillCardSkillField(val.skill);
    if (val.invocation === void 0) {
        throw "Expecting \"invocation\" of type \"TranscriptSkillCard\" to be defined";
    }
    const invocation = deserializeTranscriptSkillCardInvocationField(val.invocation);
    if (!(val.duration === void 0) && !(0, json_js_1.isJson)(val.duration, "number")) {
        throw "Expecting number for \"duration\" of type \"TranscriptSkillCard\"";
    }
    const duration = (0, json_js_1.isJson)(val.duration, "number") ? val.duration : void 0;
    if (val.entries === void 0) {
        throw "Expecting \"entries\" of type \"TranscriptSkillCard\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"TranscriptSkillCard\"";
    }
    const entries = val.entries.map(function (itm) {
        return deserializeTranscriptSkillCardEntriesField(itm);
    });
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, skill: skill, invocation: invocation, duration: duration, entries: entries };
}
exports.deserializeTranscriptSkillCard = deserializeTranscriptSkillCard;
function serializeTranscriptSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: serializeTranscriptSkillCardTypeField(val.type), ["skill_card_type"]: serializeTranscriptSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle === void 0 ? void 0 : serializeTranscriptSkillCardSkillCardTitleField(val.skillCardTitle), ["skill"]: serializeTranscriptSkillCardSkillField(val.skill), ["invocation"]: serializeTranscriptSkillCardInvocationField(val.invocation), ["duration"]: val.duration, ["entries"]: val.entries.map(function (item) {
            return serializeTranscriptSkillCardEntriesField(item);
        }) };
}
exports.serializeTranscriptSkillCard = serializeTranscriptSkillCard;
function deserializeStatusSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardTypeField\"";
    }
    if (val === "skill_card") {
        return "skill_card";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeStatusSkillCardTypeField = deserializeStatusSkillCardTypeField;
function serializeStatusSkillCardTypeField(val) {
    return val;
}
exports.serializeStatusSkillCardTypeField = serializeStatusSkillCardTypeField;
function deserializeStatusSkillCardSkillCardTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardSkillCardTypeField\"";
    }
    if (val === "status") {
        return "status";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeStatusSkillCardSkillCardTypeField = deserializeStatusSkillCardSkillCardTypeField;
function serializeStatusSkillCardSkillCardTypeField(val) {
    return val;
}
exports.serializeStatusSkillCardSkillCardTypeField = serializeStatusSkillCardSkillCardTypeField;
function deserializeStatusSkillCardSkillCardTitleField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StatusSkillCardSkillCardTitleField\"";
    }
    if (!(val.code === void 0) && !(0, json_js_1.isJson)(val.code, "string")) {
        throw "Expecting string for \"code\" of type \"StatusSkillCardSkillCardTitleField\"";
    }
    const code = (0, json_js_1.isJson)(val.code, "string") ? val.code : void 0;
    if (val.message === void 0) {
        throw "Expecting \"message\" of type \"StatusSkillCardSkillCardTitleField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"StatusSkillCardSkillCardTitleField\"";
    }
    const message = val.message;
    return { code: code, message: message };
}
exports.deserializeStatusSkillCardSkillCardTitleField = deserializeStatusSkillCardSkillCardTitleField;
function serializeStatusSkillCardSkillCardTitleField(val) {
    return { ["code"]: val.code, ["message"]: val.message };
}
exports.serializeStatusSkillCardSkillCardTitleField = serializeStatusSkillCardSkillCardTitleField;
function deserializeStatusSkillCardStatusFieldCodeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardStatusFieldCodeField\"";
    }
    if (val === "invoked") {
        return "invoked";
    }
    if (val === "processing") {
        return "processing";
    }
    if (val === "success") {
        return "success";
    }
    if (val === "transient_failure") {
        return "transient_failure";
    }
    if (val === "permanent_failure") {
        return "permanent_failure";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeStatusSkillCardStatusFieldCodeField = deserializeStatusSkillCardStatusFieldCodeField;
function serializeStatusSkillCardStatusFieldCodeField(val) {
    return val;
}
exports.serializeStatusSkillCardStatusFieldCodeField = serializeStatusSkillCardStatusFieldCodeField;
function deserializeStatusSkillCardStatusField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StatusSkillCardStatusField\"";
    }
    if (val.code === void 0) {
        throw "Expecting \"code\" of type \"StatusSkillCardStatusField\" to be defined";
    }
    const code = deserializeStatusSkillCardStatusFieldCodeField(val.code);
    if (!(val.message === void 0) && !(0, json_js_1.isJson)(val.message, "string")) {
        throw "Expecting string for \"message\" of type \"StatusSkillCardStatusField\"";
    }
    const message = (0, json_js_1.isJson)(val.message, "string") ? val.message : void 0;
    return { code: code, message: message };
}
exports.deserializeStatusSkillCardStatusField = deserializeStatusSkillCardStatusField;
function serializeStatusSkillCardStatusField(val) {
    return { ["code"]: serializeStatusSkillCardStatusFieldCodeField(val.code), ["message"]: val.message };
}
exports.serializeStatusSkillCardStatusField = serializeStatusSkillCardStatusField;
function deserializeStatusSkillCardSkillFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardSkillFieldTypeField\"";
    }
    if (val === "service") {
        return "service";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeStatusSkillCardSkillFieldTypeField = deserializeStatusSkillCardSkillFieldTypeField;
function serializeStatusSkillCardSkillFieldTypeField(val) {
    return val;
}
exports.serializeStatusSkillCardSkillFieldTypeField = serializeStatusSkillCardSkillFieldTypeField;
function deserializeStatusSkillCardSkillField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StatusSkillCardSkillField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"StatusSkillCardSkillField\" to be defined";
    }
    const type = deserializeStatusSkillCardSkillFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"StatusSkillCardSkillField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"StatusSkillCardSkillField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeStatusSkillCardSkillField = deserializeStatusSkillCardSkillField;
function serializeStatusSkillCardSkillField(val) {
    return { ["type"]: serializeStatusSkillCardSkillFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeStatusSkillCardSkillField = serializeStatusSkillCardSkillField;
function deserializeStatusSkillCardInvocationFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"StatusSkillCardInvocationFieldTypeField\"";
    }
    if (val === "skill_invocation") {
        return "skill_invocation";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeStatusSkillCardInvocationFieldTypeField = deserializeStatusSkillCardInvocationFieldTypeField;
function serializeStatusSkillCardInvocationFieldTypeField(val) {
    return val;
}
exports.serializeStatusSkillCardInvocationFieldTypeField = serializeStatusSkillCardInvocationFieldTypeField;
function deserializeStatusSkillCardInvocationField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StatusSkillCardInvocationField\"";
    }
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"StatusSkillCardInvocationField\" to be defined";
    }
    const type = deserializeStatusSkillCardInvocationFieldTypeField(val.type);
    if (val.id === void 0) {
        throw "Expecting \"id\" of type \"StatusSkillCardInvocationField\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"StatusSkillCardInvocationField\"";
    }
    const id = val.id;
    return { type: type, id: id };
}
exports.deserializeStatusSkillCardInvocationField = deserializeStatusSkillCardInvocationField;
function serializeStatusSkillCardInvocationField(val) {
    return { ["type"]: serializeStatusSkillCardInvocationFieldTypeField(val.type), ["id"]: val.id };
}
exports.serializeStatusSkillCardInvocationField = serializeStatusSkillCardInvocationField;
function deserializeStatusSkillCard(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"StatusSkillCard\"";
    }
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"StatusSkillCard\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"StatusSkillCard\" to be defined";
    }
    const type = deserializeStatusSkillCardTypeField(val.type);
    if (val.skill_card_type === void 0) {
        throw "Expecting \"skill_card_type\" of type \"StatusSkillCard\" to be defined";
    }
    const skillCardType = deserializeStatusSkillCardSkillCardTypeField(val.skill_card_type);
    const skillCardTitle = val.skill_card_title === void 0 ? void 0 : deserializeStatusSkillCardSkillCardTitleField(val.skill_card_title);
    if (val.status === void 0) {
        throw "Expecting \"status\" of type \"StatusSkillCard\" to be defined";
    }
    const status = deserializeStatusSkillCardStatusField(val.status);
    if (val.skill === void 0) {
        throw "Expecting \"skill\" of type \"StatusSkillCard\" to be defined";
    }
    const skill = deserializeStatusSkillCardSkillField(val.skill);
    if (val.invocation === void 0) {
        throw "Expecting \"invocation\" of type \"StatusSkillCard\" to be defined";
    }
    const invocation = deserializeStatusSkillCardInvocationField(val.invocation);
    return { createdAt: createdAt, type: type, skillCardType: skillCardType, skillCardTitle: skillCardTitle, status: status, skill: skill, invocation: invocation };
}
exports.deserializeStatusSkillCard = deserializeStatusSkillCard;
function serializeStatusSkillCard(val) {
    return { ["created_at"]: val.createdAt, ["type"]: serializeStatusSkillCardTypeField(val.type), ["skill_card_type"]: serializeStatusSkillCardSkillCardTypeField(val.skillCardType), ["skill_card_title"]: val.skillCardTitle === void 0 ? void 0 : serializeStatusSkillCardSkillCardTitleField(val.skillCardTitle), ["status"]: serializeStatusSkillCardStatusField(val.status), ["skill"]: serializeStatusSkillCardSkillField(val.skill), ["invocation"]: serializeStatusSkillCardInvocationField(val.invocation) };
}
exports.serializeStatusSkillCard = serializeStatusSkillCard;
function deserializeSkillCardsMetadataCardsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillCardsMetadataCardsField\"";
    }
    if (val.type === "skill_card") {
        return deserializeKeywordSkillCard(val);
    }
    if (val.type === "skill_card") {
        return deserializeTimelineSkillCard(val);
    }
    if (val.type === "skill_card") {
        return deserializeTranscriptSkillCard(val);
    }
    if (val.type === "skill_card") {
        return deserializeStatusSkillCard(val);
    }
    throw "unknown type";
}
exports.deserializeSkillCardsMetadataCardsField = deserializeSkillCardsMetadataCardsField;
function serializeSkillCardsMetadataCardsField(val) {
    throw "Can't serialize SkillCardsMetadataCardsField";
}
exports.serializeSkillCardsMetadataCardsField = serializeSkillCardsMetadataCardsField;
function deserializeSkillCardsMetadata(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SkillCardsMetadata\"";
    }
    if (!(val.$canEdit === void 0) && !(0, json_js_1.isJson)(val.$canEdit, "boolean")) {
        throw "Expecting boolean for \"$canEdit\" of type \"SkillCardsMetadata\"";
    }
    const canEdit = (0, json_js_1.isJson)(val.$canEdit, "boolean") ? val.$canEdit : void 0;
    if (!(val.$id === void 0) && !(0, json_js_1.isJson)(val.$id, "string")) {
        throw "Expecting string for \"$id\" of type \"SkillCardsMetadata\"";
    }
    const id = (0, json_js_1.isJson)(val.$id, "string") ? val.$id : void 0;
    if (!(val.$parent === void 0) && !(0, json_js_1.isJson)(val.$parent, "string")) {
        throw "Expecting string for \"$parent\" of type \"SkillCardsMetadata\"";
    }
    const parent = (0, json_js_1.isJson)(val.$parent, "string") ? val.$parent : void 0;
    if (!(val.$scope === void 0) && !(0, json_js_1.isJson)(val.$scope, "string")) {
        throw "Expecting string for \"$scope\" of type \"SkillCardsMetadata\"";
    }
    const scope = (0, json_js_1.isJson)(val.$scope, "string") ? val.$scope : void 0;
    if (!(val.$template === void 0) && !(0, json_js_1.isJson)(val.$template, "string")) {
        throw "Expecting string for \"$template\" of type \"SkillCardsMetadata\"";
    }
    const template = (0, json_js_1.isJson)(val.$template, "string") ? val.$template : void 0;
    if (!(val.$type === void 0) && !(0, json_js_1.isJson)(val.$type, "string")) {
        throw "Expecting string for \"$type\" of type \"SkillCardsMetadata\"";
    }
    const type = (0, json_js_1.isJson)(val.$type, "string") ? val.$type : void 0;
    if (!(val.$typeVersion === void 0) && !(0, json_js_1.isJson)(val.$typeVersion, "number")) {
        throw "Expecting number for \"$typeVersion\" of type \"SkillCardsMetadata\"";
    }
    const typeVersion = (0, json_js_1.isJson)(val.$typeVersion, "number") ? val.$typeVersion : void 0;
    if (!(val.$version === void 0) && !(0, json_js_1.isJson)(val.$version, "number")) {
        throw "Expecting number for \"$version\" of type \"SkillCardsMetadata\"";
    }
    const version = (0, json_js_1.isJson)(val.$version, "number") ? val.$version : void 0;
    if (!(val.cards === void 0) && !(0, json_js_1.isJson)(val.cards, "array")) {
        throw "Expecting array for \"cards\" of type \"SkillCardsMetadata\"";
    }
    const cards = (0, json_js_1.isJson)(val.cards, "array") ? val.cards.map(function (itm) {
        return deserializeSkillCardsMetadataCardsField(itm);
    }) : void 0;
    return { canEdit: canEdit, id: id, parent: parent, scope: scope, template: template, type: type, typeVersion: typeVersion, version: version, cards: cards };
}
exports.deserializeSkillCardsMetadata = deserializeSkillCardsMetadata;
function serializeSkillCardsMetadata(val) {
    return { ["$canEdit"]: val.canEdit, ["$id"]: val.id, ["$parent"]: val.parent, ["$scope"]: val.scope, ["$template"]: val.template, ["$type"]: val.type, ["$typeVersion"]: val.typeVersion, ["$version"]: val.version, ["cards"]: val.cards === void 0 ? void 0 : val.cards.map(function (item) {
            return serializeSkillCardsMetadataCardsField(item);
        }) };
}
exports.serializeSkillCardsMetadata = serializeSkillCardsMetadata;
function deserializeSignRequestCreateSignerRoleField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestCreateSignerRoleField\"";
    }
    if (val === "signer") {
        return "signer";
    }
    if (val === "approver") {
        return "approver";
    }
    if (val === "final_copy_reader") {
        return "final_copy_reader";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSignRequestCreateSignerRoleField = deserializeSignRequestCreateSignerRoleField;
function serializeSignRequestCreateSignerRoleField(val) {
    return val;
}
exports.serializeSignRequestCreateSignerRoleField = serializeSignRequestCreateSignerRoleField;
function deserializeSignRequestCreateSigner(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestCreateSigner\"";
    }
    if (val.email === void 0) {
        throw "Expecting \"email\" of type \"SignRequestCreateSigner\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.email, "string")) {
        throw "Expecting string for \"email\" of type \"SignRequestCreateSigner\"";
    }
    const email = val.email;
    const role = val.role === void 0 ? void 0 : deserializeSignRequestCreateSignerRoleField(val.role);
    if (!(val.is_in_person === void 0) && !(0, json_js_1.isJson)(val.is_in_person, "boolean")) {
        throw "Expecting boolean for \"is_in_person\" of type \"SignRequestCreateSigner\"";
    }
    const isInPerson = (0, json_js_1.isJson)(val.is_in_person, "boolean") ? val.is_in_person : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "number")) {
        throw "Expecting number for \"order\" of type \"SignRequestCreateSigner\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "number") ? val.order : void 0;
    if (!(val.embed_url_external_user_id === void 0) && !(0, json_js_1.isJson)(val.embed_url_external_user_id, "string")) {
        throw "Expecting string for \"embed_url_external_user_id\" of type \"SignRequestCreateSigner\"";
    }
    const embedUrlExternalUserId = (0, json_js_1.isJson)(val.embed_url_external_user_id, "string") ? val.embed_url_external_user_id : void 0;
    if (!(val.redirect_url === void 0) && !(0, json_js_1.isJson)(val.redirect_url, "string")) {
        throw "Expecting string for \"redirect_url\" of type \"SignRequestCreateSigner\"";
    }
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    if (!(val.declined_redirect_url === void 0) && !(0, json_js_1.isJson)(val.declined_redirect_url, "string")) {
        throw "Expecting string for \"declined_redirect_url\" of type \"SignRequestCreateSigner\"";
    }
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    if (!(val.login_required === void 0) && !(0, json_js_1.isJson)(val.login_required, "boolean")) {
        throw "Expecting boolean for \"login_required\" of type \"SignRequestCreateSigner\"";
    }
    const loginRequired = (0, json_js_1.isJson)(val.login_required, "boolean") ? val.login_required : void 0;
    if (!(val.verification_phone_number === void 0) && !(0, json_js_1.isJson)(val.verification_phone_number, "string")) {
        throw "Expecting string for \"verification_phone_number\" of type \"SignRequestCreateSigner\"";
    }
    const verificationPhoneNumber = (0, json_js_1.isJson)(val.verification_phone_number, "string") ? val.verification_phone_number : void 0;
    if (!(val.password === void 0) && !(0, json_js_1.isJson)(val.password, "string")) {
        throw "Expecting string for \"password\" of type \"SignRequestCreateSigner\"";
    }
    const password = (0, json_js_1.isJson)(val.password, "string") ? val.password : void 0;
    return { email: email, role: role, isInPerson: isInPerson, order: order, embedUrlExternalUserId: embedUrlExternalUserId, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, loginRequired: loginRequired, verificationPhoneNumber: verificationPhoneNumber, password: password };
}
exports.deserializeSignRequestCreateSigner = deserializeSignRequestCreateSigner;
function serializeSignRequestCreateSigner(val) {
    return { ["email"]: val.email, ["role"]: val.role === void 0 ? void 0 : serializeSignRequestCreateSignerRoleField(val.role), ["is_in_person"]: val.isInPerson, ["order"]: val.order, ["embed_url_external_user_id"]: val.embedUrlExternalUserId, ["redirect_url"]: val.redirectUrl, ["declined_redirect_url"]: val.declinedRedirectUrl, ["login_required"]: val.loginRequired, ["verification_phone_number"]: val.verificationPhoneNumber, ["password"]: val.password };
}
exports.serializeSignRequestCreateSigner = serializeSignRequestCreateSigner;
function deserializeSignRequestPrefillTag(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestPrefillTag\"";
    }
    if (!(val.document_tag_id === void 0) && !(0, json_js_1.isJson)(val.document_tag_id, "string")) {
        throw "Expecting string for \"document_tag_id\" of type \"SignRequestPrefillTag\"";
    }
    const documentTagId = (0, json_js_1.isJson)(val.document_tag_id, "string") ? val.document_tag_id : void 0;
    if (!(val.text_value === void 0) && !(0, json_js_1.isJson)(val.text_value, "string")) {
        throw "Expecting string for \"text_value\" of type \"SignRequestPrefillTag\"";
    }
    const textValue = (0, json_js_1.isJson)(val.text_value, "string") ? val.text_value : void 0;
    if (!(val.checkbox_value === void 0) && !(0, json_js_1.isJson)(val.checkbox_value, "boolean")) {
        throw "Expecting boolean for \"checkbox_value\" of type \"SignRequestPrefillTag\"";
    }
    const checkboxValue = (0, json_js_1.isJson)(val.checkbox_value, "boolean") ? val.checkbox_value : void 0;
    if (!(val.date_value === void 0) && !(0, json_js_1.isJson)(val.date_value, "string")) {
        throw "Expecting string for \"date_value\" of type \"SignRequestPrefillTag\"";
    }
    const dateValue = (0, json_js_1.isJson)(val.date_value, "string") ? val.date_value : void 0;
    return { documentTagId: documentTagId, textValue: textValue, checkboxValue: checkboxValue, dateValue: dateValue };
}
exports.deserializeSignRequestPrefillTag = deserializeSignRequestPrefillTag;
function serializeSignRequestPrefillTag(val) {
    return { ["document_tag_id"]: val.documentTagId, ["text_value"]: val.textValue, ["checkbox_value"]: val.checkboxValue, ["date_value"]: val.dateValue };
}
exports.serializeSignRequestPrefillTag = serializeSignRequestPrefillTag;
function deserializeSignRequestBase(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestBase\"";
    }
    if (!(val.is_document_preparation_needed === void 0) && !(0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean")) {
        throw "Expecting boolean for \"is_document_preparation_needed\" of type \"SignRequestBase\"";
    }
    const isDocumentPreparationNeeded = (0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean") ? val.is_document_preparation_needed : void 0;
    if (!(val.redirect_url === void 0) && !(0, json_js_1.isJson)(val.redirect_url, "string")) {
        throw "Expecting string for \"redirect_url\" of type \"SignRequestBase\"";
    }
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    if (!(val.declined_redirect_url === void 0) && !(0, json_js_1.isJson)(val.declined_redirect_url, "string")) {
        throw "Expecting string for \"declined_redirect_url\" of type \"SignRequestBase\"";
    }
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    if (!(val.are_text_signatures_enabled === void 0) && !(0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean")) {
        throw "Expecting boolean for \"are_text_signatures_enabled\" of type \"SignRequestBase\"";
    }
    const areTextSignaturesEnabled = (0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean") ? val.are_text_signatures_enabled : void 0;
    if (!(val.email_subject === void 0) && !(0, json_js_1.isJson)(val.email_subject, "string")) {
        throw "Expecting string for \"email_subject\" of type \"SignRequestBase\"";
    }
    const emailSubject = (0, json_js_1.isJson)(val.email_subject, "string") ? val.email_subject : void 0;
    if (!(val.email_message === void 0) && !(0, json_js_1.isJson)(val.email_message, "string")) {
        throw "Expecting string for \"email_message\" of type \"SignRequestBase\"";
    }
    const emailMessage = (0, json_js_1.isJson)(val.email_message, "string") ? val.email_message : void 0;
    if (!(val.are_reminders_enabled === void 0) && !(0, json_js_1.isJson)(val.are_reminders_enabled, "boolean")) {
        throw "Expecting boolean for \"are_reminders_enabled\" of type \"SignRequestBase\"";
    }
    const areRemindersEnabled = (0, json_js_1.isJson)(val.are_reminders_enabled, "boolean") ? val.are_reminders_enabled : void 0;
    if (val.parent_folder === void 0) {
        throw "Expecting \"parent_folder\" of type \"SignRequestBase\" to be defined";
    }
    const parentFolder = deserializeFolderMini(val.parent_folder);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"SignRequestBase\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.prefill_tags === void 0) && !(0, json_js_1.isJson)(val.prefill_tags, "array")) {
        throw "Expecting array for \"prefill_tags\" of type \"SignRequestBase\"";
    }
    const prefillTags = (0, json_js_1.isJson)(val.prefill_tags, "array") ? val.prefill_tags.map(function (itm) {
        return deserializeSignRequestPrefillTag(itm);
    }) : void 0;
    if (!(val.days_valid === void 0) && !(0, json_js_1.isJson)(val.days_valid, "number")) {
        throw "Expecting number for \"days_valid\" of type \"SignRequestBase\"";
    }
    const daysValid = (0, json_js_1.isJson)(val.days_valid, "number") ? val.days_valid : void 0;
    if (!(val.external_id === void 0) && !(0, json_js_1.isJson)(val.external_id, "string")) {
        throw "Expecting string for \"external_id\" of type \"SignRequestBase\"";
    }
    const externalId = (0, json_js_1.isJson)(val.external_id, "string") ? val.external_id : void 0;
    if (!(val.is_phone_verification_required_to_view === void 0) && !(0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean")) {
        throw "Expecting boolean for \"is_phone_verification_required_to_view\" of type \"SignRequestBase\"";
    }
    const isPhoneVerificationRequiredToView = (0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean") ? val.is_phone_verification_required_to_view : void 0;
    return { isDocumentPreparationNeeded: isDocumentPreparationNeeded, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, areTextSignaturesEnabled: areTextSignaturesEnabled, emailSubject: emailSubject, emailMessage: emailMessage, areRemindersEnabled: areRemindersEnabled, parentFolder: parentFolder, name: name, prefillTags: prefillTags, daysValid: daysValid, externalId: externalId, isPhoneVerificationRequiredToView: isPhoneVerificationRequiredToView };
}
exports.deserializeSignRequestBase = deserializeSignRequestBase;
function serializeSignRequestBase(val) {
    return { ["is_document_preparation_needed"]: val.isDocumentPreparationNeeded, ["redirect_url"]: val.redirectUrl, ["declined_redirect_url"]: val.declinedRedirectUrl, ["are_text_signatures_enabled"]: val.areTextSignaturesEnabled, ["email_subject"]: val.emailSubject, ["email_message"]: val.emailMessage, ["are_reminders_enabled"]: val.areRemindersEnabled, ["parent_folder"]: serializeFolderMini(val.parentFolder), ["name"]: val.name, ["prefill_tags"]: val.prefillTags === void 0 ? void 0 : val.prefillTags.map(function (item) {
            return serializeSignRequestPrefillTag(item);
        }), ["days_valid"]: val.daysValid, ["external_id"]: val.externalId, ["is_phone_verification_required_to_view"]: val.isPhoneVerificationRequiredToView };
}
exports.serializeSignRequestBase = serializeSignRequestBase;
function deserializeSignRequestCreateRequest(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestCreateRequest\"";
    }
    if (!(val.source_files === void 0) && !(0, json_js_1.isJson)(val.source_files, "array")) {
        throw "Expecting array for \"source_files\" of type \"SignRequestCreateRequest\"";
    }
    const sourceFiles = (0, json_js_1.isJson)(val.source_files, "array") ? val.source_files.map(function (itm) {
        return deserializeFileBase(itm);
    }) : void 0;
    const signatureColor = val.signature_color === void 0 ? void 0 : deserializeSignRequestCreateRequestSignatureColorField(val.signature_color);
    if (val.signers === void 0) {
        throw "Expecting \"signers\" of type \"SignRequestCreateRequest\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.signers, "array")) {
        throw "Expecting array for \"signers\" of type \"SignRequestCreateRequest\"";
    }
    const signers = val.signers.map(function (itm) {
        return deserializeSignRequestCreateSigner(itm);
    });
    if (!(val.is_document_preparation_needed === void 0) && !(0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean")) {
        throw "Expecting boolean for \"is_document_preparation_needed\" of type \"SignRequestCreateRequest\"";
    }
    const isDocumentPreparationNeeded = (0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean") ? val.is_document_preparation_needed : void 0;
    if (!(val.redirect_url === void 0) && !(0, json_js_1.isJson)(val.redirect_url, "string")) {
        throw "Expecting string for \"redirect_url\" of type \"SignRequestCreateRequest\"";
    }
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    if (!(val.declined_redirect_url === void 0) && !(0, json_js_1.isJson)(val.declined_redirect_url, "string")) {
        throw "Expecting string for \"declined_redirect_url\" of type \"SignRequestCreateRequest\"";
    }
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    if (!(val.are_text_signatures_enabled === void 0) && !(0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean")) {
        throw "Expecting boolean for \"are_text_signatures_enabled\" of type \"SignRequestCreateRequest\"";
    }
    const areTextSignaturesEnabled = (0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean") ? val.are_text_signatures_enabled : void 0;
    if (!(val.email_subject === void 0) && !(0, json_js_1.isJson)(val.email_subject, "string")) {
        throw "Expecting string for \"email_subject\" of type \"SignRequestCreateRequest\"";
    }
    const emailSubject = (0, json_js_1.isJson)(val.email_subject, "string") ? val.email_subject : void 0;
    if (!(val.email_message === void 0) && !(0, json_js_1.isJson)(val.email_message, "string")) {
        throw "Expecting string for \"email_message\" of type \"SignRequestCreateRequest\"";
    }
    const emailMessage = (0, json_js_1.isJson)(val.email_message, "string") ? val.email_message : void 0;
    if (!(val.are_reminders_enabled === void 0) && !(0, json_js_1.isJson)(val.are_reminders_enabled, "boolean")) {
        throw "Expecting boolean for \"are_reminders_enabled\" of type \"SignRequestCreateRequest\"";
    }
    const areRemindersEnabled = (0, json_js_1.isJson)(val.are_reminders_enabled, "boolean") ? val.are_reminders_enabled : void 0;
    if (val.parent_folder === void 0) {
        throw "Expecting \"parent_folder\" of type \"SignRequestCreateRequest\" to be defined";
    }
    const parentFolder = deserializeFolderMini(val.parent_folder);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"SignRequestCreateRequest\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.prefill_tags === void 0) && !(0, json_js_1.isJson)(val.prefill_tags, "array")) {
        throw "Expecting array for \"prefill_tags\" of type \"SignRequestCreateRequest\"";
    }
    const prefillTags = (0, json_js_1.isJson)(val.prefill_tags, "array") ? val.prefill_tags.map(function (itm) {
        return deserializeSignRequestPrefillTag(itm);
    }) : void 0;
    if (!(val.days_valid === void 0) && !(0, json_js_1.isJson)(val.days_valid, "number")) {
        throw "Expecting number for \"days_valid\" of type \"SignRequestCreateRequest\"";
    }
    const daysValid = (0, json_js_1.isJson)(val.days_valid, "number") ? val.days_valid : void 0;
    if (!(val.external_id === void 0) && !(0, json_js_1.isJson)(val.external_id, "string")) {
        throw "Expecting string for \"external_id\" of type \"SignRequestCreateRequest\"";
    }
    const externalId = (0, json_js_1.isJson)(val.external_id, "string") ? val.external_id : void 0;
    if (!(val.is_phone_verification_required_to_view === void 0) && !(0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean")) {
        throw "Expecting boolean for \"is_phone_verification_required_to_view\" of type \"SignRequestCreateRequest\"";
    }
    const isPhoneVerificationRequiredToView = (0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean") ? val.is_phone_verification_required_to_view : void 0;
    return { sourceFiles: sourceFiles, signatureColor: signatureColor, signers: signers, isDocumentPreparationNeeded: isDocumentPreparationNeeded, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, areTextSignaturesEnabled: areTextSignaturesEnabled, emailSubject: emailSubject, emailMessage: emailMessage, areRemindersEnabled: areRemindersEnabled, parentFolder: parentFolder, name: name, prefillTags: prefillTags, daysValid: daysValid, externalId: externalId, isPhoneVerificationRequiredToView: isPhoneVerificationRequiredToView };
}
exports.deserializeSignRequestCreateRequest = deserializeSignRequestCreateRequest;
function serializeSignRequestCreateRequest(val) {
    const base = serializeSignRequestBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequestCreateRequest\"";
    }
    return Object.assign(Object.assign({}, base), { ["source_files"]: val.sourceFiles === void 0 ? void 0 : val.sourceFiles.map(function (item) {
            return serializeFileBase(item);
        }), ["signature_color"]: val.signatureColor === void 0 ? void 0 : serializeSignRequestCreateRequestSignatureColorField(val.signatureColor), ["signers"]: val.signers.map(function (item) {
            return serializeSignRequestCreateSigner(item);
        }) });
}
exports.serializeSignRequestCreateRequest = serializeSignRequestCreateRequest;
function deserializeSignRequestSignerInputTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestSignerInputTypeField\"";
    }
    if (val === "signature") {
        return "signature";
    }
    if (val === "date") {
        return "date";
    }
    if (val === "text") {
        return "text";
    }
    if (val === "checkbox") {
        return "checkbox";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSignRequestSignerInputTypeField = deserializeSignRequestSignerInputTypeField;
function serializeSignRequestSignerInputTypeField(val) {
    return val;
}
exports.serializeSignRequestSignerInputTypeField = serializeSignRequestSignerInputTypeField;
function deserializeSignRequestSignerInputContentTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestSignerInputContentTypeField\"";
    }
    if (val === "initial") {
        return "initial";
    }
    if (val === "stamp") {
        return "stamp";
    }
    if (val === "signature") {
        return "signature";
    }
    if (val === "company") {
        return "company";
    }
    if (val === "title") {
        return "title";
    }
    if (val === "email") {
        return "email";
    }
    if (val === "full_name") {
        return "full_name";
    }
    if (val === "first_name") {
        return "first_name";
    }
    if (val === "last_name") {
        return "last_name";
    }
    if (val === "text") {
        return "text";
    }
    if (val === "date") {
        return "date";
    }
    if (val === "checkbox") {
        return "checkbox";
    }
    if (val === "attachment") {
        return "attachment";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSignRequestSignerInputContentTypeField = deserializeSignRequestSignerInputContentTypeField;
function serializeSignRequestSignerInputContentTypeField(val) {
    return val;
}
exports.serializeSignRequestSignerInputContentTypeField = serializeSignRequestSignerInputContentTypeField;
function deserializeSignRequestSignerInput(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestSignerInput\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeSignRequestSignerInputTypeField(val.type);
    const contentType = val.content_type === void 0 ? void 0 : deserializeSignRequestSignerInputContentTypeField(val.content_type);
    if (val.page_index === void 0) {
        throw "Expecting \"page_index\" of type \"SignRequestSignerInput\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.page_index, "number")) {
        throw "Expecting number for \"page_index\" of type \"SignRequestSignerInput\"";
    }
    const pageIndex = val.page_index;
    if (!(val.document_tag_id === void 0) && !(0, json_js_1.isJson)(val.document_tag_id, "string")) {
        throw "Expecting string for \"document_tag_id\" of type \"SignRequestSignerInput\"";
    }
    const documentTagId = (0, json_js_1.isJson)(val.document_tag_id, "string") ? val.document_tag_id : void 0;
    if (!(val.text_value === void 0) && !(0, json_js_1.isJson)(val.text_value, "string")) {
        throw "Expecting string for \"text_value\" of type \"SignRequestSignerInput\"";
    }
    const textValue = (0, json_js_1.isJson)(val.text_value, "string") ? val.text_value : void 0;
    if (!(val.checkbox_value === void 0) && !(0, json_js_1.isJson)(val.checkbox_value, "boolean")) {
        throw "Expecting boolean for \"checkbox_value\" of type \"SignRequestSignerInput\"";
    }
    const checkboxValue = (0, json_js_1.isJson)(val.checkbox_value, "boolean") ? val.checkbox_value : void 0;
    if (!(val.date_value === void 0) && !(0, json_js_1.isJson)(val.date_value, "string")) {
        throw "Expecting string for \"date_value\" of type \"SignRequestSignerInput\"";
    }
    const dateValue = (0, json_js_1.isJson)(val.date_value, "string") ? val.date_value : void 0;
    return { type: type, contentType: contentType, pageIndex: pageIndex, documentTagId: documentTagId, textValue: textValue, checkboxValue: checkboxValue, dateValue: dateValue };
}
exports.deserializeSignRequestSignerInput = deserializeSignRequestSignerInput;
function serializeSignRequestSignerInput(val) {
    const base = serializeSignRequestPrefillTag(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequestSignerInput\"";
    }
    return Object.assign(Object.assign({}, base), { ["type"]: val.type === void 0 ? void 0 : serializeSignRequestSignerInputTypeField(val.type), ["content_type"]: val.contentType === void 0 ? void 0 : serializeSignRequestSignerInputContentTypeField(val.contentType), ["page_index"]: val.pageIndex });
}
exports.serializeSignRequestSignerInput = serializeSignRequestSignerInput;
function deserializeSignRequestSignerSignerDecisionFieldTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"SignRequestSignerSignerDecisionFieldTypeField\"";
    }
    if (val === "signed") {
        return "signed";
    }
    if (val === "declined") {
        return "declined";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeSignRequestSignerSignerDecisionFieldTypeField = deserializeSignRequestSignerSignerDecisionFieldTypeField;
function serializeSignRequestSignerSignerDecisionFieldTypeField(val) {
    return val;
}
exports.serializeSignRequestSignerSignerDecisionFieldTypeField = serializeSignRequestSignerSignerDecisionFieldTypeField;
function deserializeSignRequestSignerSignerDecisionField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestSignerSignerDecisionField\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeSignRequestSignerSignerDecisionFieldTypeField(val.type);
    if (!(val.finalized_at === void 0) && !(0, json_js_1.isJson)(val.finalized_at, "string")) {
        throw "Expecting string for \"finalized_at\" of type \"SignRequestSignerSignerDecisionField\"";
    }
    const finalizedAt = (0, json_js_1.isJson)(val.finalized_at, "string") ? val.finalized_at : void 0;
    return { type: type, finalizedAt: finalizedAt };
}
exports.deserializeSignRequestSignerSignerDecisionField = deserializeSignRequestSignerSignerDecisionField;
function serializeSignRequestSignerSignerDecisionField(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeSignRequestSignerSignerDecisionFieldTypeField(val.type), ["finalized_at"]: val.finalizedAt };
}
exports.serializeSignRequestSignerSignerDecisionField = serializeSignRequestSignerSignerDecisionField;
function deserializeSignRequestSigner(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequestSigner\"";
    }
    if (!(val.has_viewed_document === void 0) && !(0, json_js_1.isJson)(val.has_viewed_document, "boolean")) {
        throw "Expecting boolean for \"has_viewed_document\" of type \"SignRequestSigner\"";
    }
    const hasViewedDocument = (0, json_js_1.isJson)(val.has_viewed_document, "boolean") ? val.has_viewed_document : void 0;
    const signerDecision = val.signer_decision === void 0 ? void 0 : deserializeSignRequestSignerSignerDecisionField(val.signer_decision);
    if (!(val.inputs === void 0) && !(0, json_js_1.isJson)(val.inputs, "array")) {
        throw "Expecting array for \"inputs\" of type \"SignRequestSigner\"";
    }
    const inputs = (0, json_js_1.isJson)(val.inputs, "array") ? val.inputs.map(function (itm) {
        return deserializeSignRequestSignerInput(itm);
    }) : void 0;
    if (!(val.embed_url === void 0) && !(0, json_js_1.isJson)(val.embed_url, "string")) {
        throw "Expecting string for \"embed_url\" of type \"SignRequestSigner\"";
    }
    const embedUrl = (0, json_js_1.isJson)(val.embed_url, "string") ? val.embed_url : void 0;
    if (val.email === void 0) {
        throw "Expecting \"email\" of type \"SignRequestSigner\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.email, "string")) {
        throw "Expecting string for \"email\" of type \"SignRequestSigner\"";
    }
    const email = val.email;
    const role = val.role === void 0 ? void 0 : deserializeSignRequestCreateSignerRoleField(val.role);
    if (!(val.is_in_person === void 0) && !(0, json_js_1.isJson)(val.is_in_person, "boolean")) {
        throw "Expecting boolean for \"is_in_person\" of type \"SignRequestSigner\"";
    }
    const isInPerson = (0, json_js_1.isJson)(val.is_in_person, "boolean") ? val.is_in_person : void 0;
    if (!(val.order === void 0) && !(0, json_js_1.isJson)(val.order, "number")) {
        throw "Expecting number for \"order\" of type \"SignRequestSigner\"";
    }
    const order = (0, json_js_1.isJson)(val.order, "number") ? val.order : void 0;
    if (!(val.embed_url_external_user_id === void 0) && !(0, json_js_1.isJson)(val.embed_url_external_user_id, "string")) {
        throw "Expecting string for \"embed_url_external_user_id\" of type \"SignRequestSigner\"";
    }
    const embedUrlExternalUserId = (0, json_js_1.isJson)(val.embed_url_external_user_id, "string") ? val.embed_url_external_user_id : void 0;
    if (!(val.redirect_url === void 0) && !(0, json_js_1.isJson)(val.redirect_url, "string")) {
        throw "Expecting string for \"redirect_url\" of type \"SignRequestSigner\"";
    }
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    if (!(val.declined_redirect_url === void 0) && !(0, json_js_1.isJson)(val.declined_redirect_url, "string")) {
        throw "Expecting string for \"declined_redirect_url\" of type \"SignRequestSigner\"";
    }
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    if (!(val.login_required === void 0) && !(0, json_js_1.isJson)(val.login_required, "boolean")) {
        throw "Expecting boolean for \"login_required\" of type \"SignRequestSigner\"";
    }
    const loginRequired = (0, json_js_1.isJson)(val.login_required, "boolean") ? val.login_required : void 0;
    if (!(val.verification_phone_number === void 0) && !(0, json_js_1.isJson)(val.verification_phone_number, "string")) {
        throw "Expecting string for \"verification_phone_number\" of type \"SignRequestSigner\"";
    }
    const verificationPhoneNumber = (0, json_js_1.isJson)(val.verification_phone_number, "string") ? val.verification_phone_number : void 0;
    if (!(val.password === void 0) && !(0, json_js_1.isJson)(val.password, "string")) {
        throw "Expecting string for \"password\" of type \"SignRequestSigner\"";
    }
    const password = (0, json_js_1.isJson)(val.password, "string") ? val.password : void 0;
    return { hasViewedDocument: hasViewedDocument, signerDecision: signerDecision, inputs: inputs, embedUrl: embedUrl, email: email, role: role, isInPerson: isInPerson, order: order, embedUrlExternalUserId: embedUrlExternalUserId, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, loginRequired: loginRequired, verificationPhoneNumber: verificationPhoneNumber, password: password };
}
exports.deserializeSignRequestSigner = deserializeSignRequestSigner;
function serializeSignRequestSigner(val) {
    const base = serializeSignRequestCreateSigner(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequestSigner\"";
    }
    return Object.assign(Object.assign({}, base), { ["has_viewed_document"]: val.hasViewedDocument, ["signer_decision"]: val.signerDecision === void 0 ? void 0 : serializeSignRequestSignerSignerDecisionField(val.signerDecision), ["inputs"]: val.inputs === void 0 ? void 0 : val.inputs.map(function (item) {
            return serializeSignRequestSignerInput(item);
        }), ["embed_url"]: val.embedUrl });
}
exports.serializeSignRequestSigner = serializeSignRequestSigner;
function deserializeSignRequest(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequest\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeSignRequestTypeField(val.type);
    if (!(val.signers === void 0) && !(0, json_js_1.isJson)(val.signers, "array")) {
        throw "Expecting array for \"signers\" of type \"SignRequest\"";
    }
    const signers = (0, json_js_1.isJson)(val.signers, "array") ? val.signers.map(function (itm) {
        return deserializeSignRequestSigner(itm);
    }) : void 0;
    if (!(val.signature_color === void 0) && !(0, json_js_1.isJson)(val.signature_color, "string")) {
        throw "Expecting string for \"signature_color\" of type \"SignRequest\"";
    }
    const signatureColor = (0, json_js_1.isJson)(val.signature_color, "string") ? val.signature_color : void 0;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"SignRequest\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (!(val.prepare_url === void 0) && !(0, json_js_1.isJson)(val.prepare_url, "string")) {
        throw "Expecting string for \"prepare_url\" of type \"SignRequest\"";
    }
    const prepareUrl = (0, json_js_1.isJson)(val.prepare_url, "string") ? val.prepare_url : void 0;
    const signingLog = val.signing_log === void 0 ? void 0 : deserializeFileMini(val.signing_log);
    const status = val.status === void 0 ? void 0 : deserializeSignRequestStatusField(val.status);
    const signFiles = val.sign_files === void 0 ? void 0 : deserializeSignRequestSignFilesField(val.sign_files);
    if (!(val.auto_expire_at === void 0) && !(0, json_js_1.isJson)(val.auto_expire_at, "string")) {
        throw "Expecting string for \"auto_expire_at\" of type \"SignRequest\"";
    }
    const autoExpireAt = (0, json_js_1.isJson)(val.auto_expire_at, "string") ? val.auto_expire_at : void 0;
    if (!(val.source_files === void 0) && !(0, json_js_1.isJson)(val.source_files, "array")) {
        throw "Expecting array for \"source_files\" of type \"SignRequest\"";
    }
    const sourceFiles = (0, json_js_1.isJson)(val.source_files, "array") ? val.source_files.map(function (itm) {
        return deserializeFileMini(itm);
    }) : void 0;
    if (!(val.is_document_preparation_needed === void 0) && !(0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean")) {
        throw "Expecting boolean for \"is_document_preparation_needed\" of type \"SignRequest\"";
    }
    const isDocumentPreparationNeeded = (0, json_js_1.isJson)(val.is_document_preparation_needed, "boolean") ? val.is_document_preparation_needed : void 0;
    if (!(val.redirect_url === void 0) && !(0, json_js_1.isJson)(val.redirect_url, "string")) {
        throw "Expecting string for \"redirect_url\" of type \"SignRequest\"";
    }
    const redirectUrl = (0, json_js_1.isJson)(val.redirect_url, "string") ? val.redirect_url : void 0;
    if (!(val.declined_redirect_url === void 0) && !(0, json_js_1.isJson)(val.declined_redirect_url, "string")) {
        throw "Expecting string for \"declined_redirect_url\" of type \"SignRequest\"";
    }
    const declinedRedirectUrl = (0, json_js_1.isJson)(val.declined_redirect_url, "string") ? val.declined_redirect_url : void 0;
    if (!(val.are_text_signatures_enabled === void 0) && !(0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean")) {
        throw "Expecting boolean for \"are_text_signatures_enabled\" of type \"SignRequest\"";
    }
    const areTextSignaturesEnabled = (0, json_js_1.isJson)(val.are_text_signatures_enabled, "boolean") ? val.are_text_signatures_enabled : void 0;
    if (!(val.email_subject === void 0) && !(0, json_js_1.isJson)(val.email_subject, "string")) {
        throw "Expecting string for \"email_subject\" of type \"SignRequest\"";
    }
    const emailSubject = (0, json_js_1.isJson)(val.email_subject, "string") ? val.email_subject : void 0;
    if (!(val.email_message === void 0) && !(0, json_js_1.isJson)(val.email_message, "string")) {
        throw "Expecting string for \"email_message\" of type \"SignRequest\"";
    }
    const emailMessage = (0, json_js_1.isJson)(val.email_message, "string") ? val.email_message : void 0;
    if (!(val.are_reminders_enabled === void 0) && !(0, json_js_1.isJson)(val.are_reminders_enabled, "boolean")) {
        throw "Expecting boolean for \"are_reminders_enabled\" of type \"SignRequest\"";
    }
    const areRemindersEnabled = (0, json_js_1.isJson)(val.are_reminders_enabled, "boolean") ? val.are_reminders_enabled : void 0;
    if (val.parent_folder === void 0) {
        throw "Expecting \"parent_folder\" of type \"SignRequest\" to be defined";
    }
    const parentFolder = deserializeFolderMini(val.parent_folder);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"SignRequest\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.prefill_tags === void 0) && !(0, json_js_1.isJson)(val.prefill_tags, "array")) {
        throw "Expecting array for \"prefill_tags\" of type \"SignRequest\"";
    }
    const prefillTags = (0, json_js_1.isJson)(val.prefill_tags, "array") ? val.prefill_tags.map(function (itm) {
        return deserializeSignRequestPrefillTag(itm);
    }) : void 0;
    if (!(val.days_valid === void 0) && !(0, json_js_1.isJson)(val.days_valid, "number")) {
        throw "Expecting number for \"days_valid\" of type \"SignRequest\"";
    }
    const daysValid = (0, json_js_1.isJson)(val.days_valid, "number") ? val.days_valid : void 0;
    if (!(val.external_id === void 0) && !(0, json_js_1.isJson)(val.external_id, "string")) {
        throw "Expecting string for \"external_id\" of type \"SignRequest\"";
    }
    const externalId = (0, json_js_1.isJson)(val.external_id, "string") ? val.external_id : void 0;
    if (!(val.is_phone_verification_required_to_view === void 0) && !(0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean")) {
        throw "Expecting boolean for \"is_phone_verification_required_to_view\" of type \"SignRequest\"";
    }
    const isPhoneVerificationRequiredToView = (0, json_js_1.isJson)(val.is_phone_verification_required_to_view, "boolean") ? val.is_phone_verification_required_to_view : void 0;
    return { type: type, signers: signers, signatureColor: signatureColor, id: id, prepareUrl: prepareUrl, signingLog: signingLog, status: status, signFiles: signFiles, autoExpireAt: autoExpireAt, sourceFiles: sourceFiles, isDocumentPreparationNeeded: isDocumentPreparationNeeded, redirectUrl: redirectUrl, declinedRedirectUrl: declinedRedirectUrl, areTextSignaturesEnabled: areTextSignaturesEnabled, emailSubject: emailSubject, emailMessage: emailMessage, areRemindersEnabled: areRemindersEnabled, parentFolder: parentFolder, name: name, prefillTags: prefillTags, daysValid: daysValid, externalId: externalId, isPhoneVerificationRequiredToView: isPhoneVerificationRequiredToView };
}
exports.deserializeSignRequest = deserializeSignRequest;
function serializeSignRequest(val) {
    const base = serializeSignRequestBase(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"SignRequest\"";
    }
    return Object.assign(Object.assign({}, base), { ["type"]: val.type === void 0 ? void 0 : serializeSignRequestTypeField(val.type), ["signers"]: val.signers === void 0 ? void 0 : val.signers.map(function (item) {
            return serializeSignRequestSigner(item);
        }), ["signature_color"]: val.signatureColor, ["id"]: val.id, ["prepare_url"]: val.prepareUrl, ["signing_log"]: val.signingLog === void 0 ? void 0 : serializeFileMini(val.signingLog), ["status"]: val.status === void 0 ? void 0 : serializeSignRequestStatusField(val.status), ["sign_files"]: val.signFiles === void 0 ? void 0 : serializeSignRequestSignFilesField(val.signFiles), ["auto_expire_at"]: val.autoExpireAt, ["source_files"]: val.sourceFiles === void 0 ? void 0 : val.sourceFiles.map(function (item) {
            return serializeFileMini(item);
        }) });
}
exports.serializeSignRequest = serializeSignRequest;
function deserializeSignRequests(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"SignRequests\"";
    }
    if (!(val.limit === void 0) && !(0, json_js_1.isJson)(val.limit, "number")) {
        throw "Expecting number for \"limit\" of type \"SignRequests\"";
    }
    const limit = (0, json_js_1.isJson)(val.limit, "number") ? val.limit : void 0;
    if (!(val.next_marker === void 0) && !(0, json_js_1.isJson)(val.next_marker, "number")) {
        throw "Expecting number for \"next_marker\" of type \"SignRequests\"";
    }
    const nextMarker = (0, json_js_1.isJson)(val.next_marker, "number") ? val.next_marker : void 0;
    if (!(val.prev_marker === void 0) && !(0, json_js_1.isJson)(val.prev_marker, "number")) {
        throw "Expecting number for \"prev_marker\" of type \"SignRequests\"";
    }
    const prevMarker = (0, json_js_1.isJson)(val.prev_marker, "number") ? val.prev_marker : void 0;
    if (!(val.entries === void 0) && !(0, json_js_1.isJson)(val.entries, "array")) {
        throw "Expecting array for \"entries\" of type \"SignRequests\"";
    }
    const entries = (0, json_js_1.isJson)(val.entries, "array") ? val.entries.map(function (itm) {
        return deserializeSignRequest(itm);
    }) : void 0;
    return { limit: limit, nextMarker: nextMarker, prevMarker: prevMarker, entries: entries };
}
exports.deserializeSignRequests = deserializeSignRequests;
function serializeSignRequests(val) {
    return { ["limit"]: val.limit, ["next_marker"]: val.nextMarker, ["prev_marker"]: val.prevMarker, ["entries"]: val.entries === void 0 ? void 0 : val.entries.map(function (item) {
            return serializeSignRequest(item);
        }) };
}
exports.serializeSignRequests = serializeSignRequests;
function deserializeShieldInformationBarrierReportDetailsDetailsField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReportDetailsDetailsField\"";
    }
    if (!(val.folder_id === void 0) && !(0, json_js_1.isJson)(val.folder_id, "string")) {
        throw "Expecting string for \"folder_id\" of type \"ShieldInformationBarrierReportDetailsDetailsField\"";
    }
    const folderId = (0, json_js_1.isJson)(val.folder_id, "string") ? val.folder_id : void 0;
    return { folderId: folderId };
}
exports.deserializeShieldInformationBarrierReportDetailsDetailsField = deserializeShieldInformationBarrierReportDetailsDetailsField;
function serializeShieldInformationBarrierReportDetailsDetailsField(val) {
    return { ["folder_id"]: val.folderId };
}
exports.serializeShieldInformationBarrierReportDetailsDetailsField = serializeShieldInformationBarrierReportDetailsDetailsField;
function deserializeShieldInformationBarrierReportDetails(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"ShieldInformationBarrierReportDetails\"";
    }
    const details = val.details === void 0 ? void 0 : deserializeShieldInformationBarrierReportDetailsDetailsField(val.details);
    return { details: details };
}
exports.deserializeShieldInformationBarrierReportDetails = deserializeShieldInformationBarrierReportDetails;
function serializeShieldInformationBarrierReportDetails(val) {
    return { ["details"]: val.details === void 0 ? void 0 : serializeShieldInformationBarrierReportDetailsDetailsField(val.details) };
}
exports.serializeShieldInformationBarrierReportDetails = serializeShieldInformationBarrierReportDetails;
function deserializeTrackingCodeTypeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"TrackingCodeTypeField\"";
    }
    if (val === "tracking_code") {
        return "tracking_code";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeTrackingCodeTypeField = deserializeTrackingCodeTypeField;
function serializeTrackingCodeTypeField(val) {
    return val;
}
exports.serializeTrackingCodeTypeField = serializeTrackingCodeTypeField;
function deserializeTrackingCode(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"TrackingCode\"";
    }
    const type = val.type === void 0 ? void 0 : deserializeTrackingCodeTypeField(val.type);
    if (!(val.name === void 0) && !(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"TrackingCode\"";
    }
    const name = (0, json_js_1.isJson)(val.name, "string") ? val.name : void 0;
    if (!(val.value === void 0) && !(0, json_js_1.isJson)(val.value, "string")) {
        throw "Expecting string for \"value\" of type \"TrackingCode\"";
    }
    const value = (0, json_js_1.isJson)(val.value, "string") ? val.value : void 0;
    return { type: type, name: name, value: value };
}
exports.deserializeTrackingCode = deserializeTrackingCode;
function serializeTrackingCode(val) {
    return { ["type"]: val.type === void 0 ? void 0 : serializeTrackingCodeTypeField(val.type), ["name"]: val.name, ["value"]: val.value };
}
exports.serializeTrackingCode = serializeTrackingCode;
function deserializeUserFull(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"UserFull\"";
    }
    const role = val.role === void 0 ? void 0 : deserializeUserFullRoleField(val.role);
    if (!(val.tracking_codes === void 0) && !(0, json_js_1.isJson)(val.tracking_codes, "array")) {
        throw "Expecting array for \"tracking_codes\" of type \"UserFull\"";
    }
    const trackingCodes = (0, json_js_1.isJson)(val.tracking_codes, "array") ? val.tracking_codes.map(function (itm) {
        return deserializeTrackingCode(itm);
    }) : void 0;
    if (!(val.can_see_managed_users === void 0) && !(0, json_js_1.isJson)(val.can_see_managed_users, "boolean")) {
        throw "Expecting boolean for \"can_see_managed_users\" of type \"UserFull\"";
    }
    const canSeeManagedUsers = (0, json_js_1.isJson)(val.can_see_managed_users, "boolean") ? val.can_see_managed_users : void 0;
    if (!(val.is_sync_enabled === void 0) && !(0, json_js_1.isJson)(val.is_sync_enabled, "boolean")) {
        throw "Expecting boolean for \"is_sync_enabled\" of type \"UserFull\"";
    }
    const isSyncEnabled = (0, json_js_1.isJson)(val.is_sync_enabled, "boolean") ? val.is_sync_enabled : void 0;
    if (!(val.is_external_collab_restricted === void 0) && !(0, json_js_1.isJson)(val.is_external_collab_restricted, "boolean")) {
        throw "Expecting boolean for \"is_external_collab_restricted\" of type \"UserFull\"";
    }
    const isExternalCollabRestricted = (0, json_js_1.isJson)(val.is_external_collab_restricted, "boolean") ? val.is_external_collab_restricted : void 0;
    if (!(val.is_exempt_from_device_limits === void 0) && !(0, json_js_1.isJson)(val.is_exempt_from_device_limits, "boolean")) {
        throw "Expecting boolean for \"is_exempt_from_device_limits\" of type \"UserFull\"";
    }
    const isExemptFromDeviceLimits = (0, json_js_1.isJson)(val.is_exempt_from_device_limits, "boolean") ? val.is_exempt_from_device_limits : void 0;
    if (!(val.is_exempt_from_login_verification === void 0) && !(0, json_js_1.isJson)(val.is_exempt_from_login_verification, "boolean")) {
        throw "Expecting boolean for \"is_exempt_from_login_verification\" of type \"UserFull\"";
    }
    const isExemptFromLoginVerification = (0, json_js_1.isJson)(val.is_exempt_from_login_verification, "boolean") ? val.is_exempt_from_login_verification : void 0;
    const enterprise = val.enterprise === void 0 ? void 0 : deserializeUserFullEnterpriseField(val.enterprise);
    if (!(val.my_tags === void 0) && !(0, json_js_1.isJson)(val.my_tags, "array")) {
        throw "Expecting array for \"my_tags\" of type \"UserFull\"";
    }
    const myTags = (0, json_js_1.isJson)(val.my_tags, "array") ? val.my_tags.map(function (itm) {
        return void 0;
    }) : void 0;
    if (!(val.hostname === void 0) && !(0, json_js_1.isJson)(val.hostname, "string")) {
        throw "Expecting string for \"hostname\" of type \"UserFull\"";
    }
    const hostname = (0, json_js_1.isJson)(val.hostname, "string") ? val.hostname : void 0;
    if (!(val.is_platform_access_only === void 0) && !(0, json_js_1.isJson)(val.is_platform_access_only, "boolean")) {
        throw "Expecting boolean for \"is_platform_access_only\" of type \"UserFull\"";
    }
    const isPlatformAccessOnly = (0, json_js_1.isJson)(val.is_platform_access_only, "boolean") ? val.is_platform_access_only : void 0;
    if (!(val.external_app_user_id === void 0) && !(0, json_js_1.isJson)(val.external_app_user_id, "string")) {
        throw "Expecting string for \"external_app_user_id\" of type \"UserFull\"";
    }
    const externalAppUserId = (0, json_js_1.isJson)(val.external_app_user_id, "string") ? val.external_app_user_id : void 0;
    if (!(val.created_at === void 0) && !(0, json_js_1.isJson)(val.created_at, "string")) {
        throw "Expecting string for \"created_at\" of type \"UserFull\"";
    }
    const createdAt = (0, json_js_1.isJson)(val.created_at, "string") ? val.created_at : void 0;
    if (!(val.modified_at === void 0) && !(0, json_js_1.isJson)(val.modified_at, "string")) {
        throw "Expecting string for \"modified_at\" of type \"UserFull\"";
    }
    const modifiedAt = (0, json_js_1.isJson)(val.modified_at, "string") ? val.modified_at : void 0;
    if (!(val.language === void 0) && !(0, json_js_1.isJson)(val.language, "string")) {
        throw "Expecting string for \"language\" of type \"UserFull\"";
    }
    const language = (0, json_js_1.isJson)(val.language, "string") ? val.language : void 0;
    if (!(val.timezone === void 0) && !(0, json_js_1.isJson)(val.timezone, "string")) {
        throw "Expecting string for \"timezone\" of type \"UserFull\"";
    }
    const timezone = (0, json_js_1.isJson)(val.timezone, "string") ? val.timezone : void 0;
    if (!(val.space_amount === void 0) && !(0, json_js_1.isJson)(val.space_amount, "number")) {
        throw "Expecting number for \"space_amount\" of type \"UserFull\"";
    }
    const spaceAmount = (0, json_js_1.isJson)(val.space_amount, "number") ? val.space_amount : void 0;
    if (!(val.space_used === void 0) && !(0, json_js_1.isJson)(val.space_used, "number")) {
        throw "Expecting number for \"space_used\" of type \"UserFull\"";
    }
    const spaceUsed = (0, json_js_1.isJson)(val.space_used, "number") ? val.space_used : void 0;
    if (!(val.max_upload_size === void 0) && !(0, json_js_1.isJson)(val.max_upload_size, "number")) {
        throw "Expecting number for \"max_upload_size\" of type \"UserFull\"";
    }
    const maxUploadSize = (0, json_js_1.isJson)(val.max_upload_size, "number") ? val.max_upload_size : void 0;
    const status = val.status === void 0 ? void 0 : deserializeUserStatusField(val.status);
    if (!(val.job_title === void 0) && !(0, json_js_1.isJson)(val.job_title, "string")) {
        throw "Expecting string for \"job_title\" of type \"UserFull\"";
    }
    const jobTitle = (0, json_js_1.isJson)(val.job_title, "string") ? val.job_title : void 0;
    if (!(val.phone === void 0) && !(0, json_js_1.isJson)(val.phone, "string")) {
        throw "Expecting string for \"phone\" of type \"UserFull\"";
    }
    const phone = (0, json_js_1.isJson)(val.phone, "string") ? val.phone : void 0;
    if (!(val.address === void 0) && !(0, json_js_1.isJson)(val.address, "string")) {
        throw "Expecting string for \"address\" of type \"UserFull\"";
    }
    const address = (0, json_js_1.isJson)(val.address, "string") ? val.address : void 0;
    if (!(val.avatar_url === void 0) && !(0, json_js_1.isJson)(val.avatar_url, "string")) {
        throw "Expecting string for \"avatar_url\" of type \"UserFull\"";
    }
    const avatarUrl = (0, json_js_1.isJson)(val.avatar_url, "string") ? val.avatar_url : void 0;
    const notificationEmail = val.notification_email === void 0 ? void 0 : deserializeUserNotificationEmailField(val.notification_email);
    if (val.name === void 0) {
        throw "Expecting \"name\" of type \"UserFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.name, "string")) {
        throw "Expecting string for \"name\" of type \"UserFull\"";
    }
    const name = val.name;
    if (val.login === void 0) {
        throw "Expecting \"login\" of type \"UserFull\" to be defined";
    }
    if (!(0, json_js_1.isJson)(val.login, "string")) {
        throw "Expecting string for \"login\" of type \"UserFull\"";
    }
    const login = val.login;
    if (!(val.id === void 0) && !(0, json_js_1.isJson)(val.id, "string")) {
        throw "Expecting string for \"id\" of type \"UserFull\"";
    }
    const id = (0, json_js_1.isJson)(val.id, "string") ? val.id : void 0;
    if (val.type === void 0) {
        throw "Expecting \"type\" of type \"UserFull\" to be defined";
    }
    const type = deserializeUserBaseTypeField(val.type);
    return { role: role, trackingCodes: trackingCodes, canSeeManagedUsers: canSeeManagedUsers, isSyncEnabled: isSyncEnabled, isExternalCollabRestricted: isExternalCollabRestricted, isExemptFromDeviceLimits: isExemptFromDeviceLimits, isExemptFromLoginVerification: isExemptFromLoginVerification, enterprise: enterprise, myTags: myTags, hostname: hostname, isPlatformAccessOnly: isPlatformAccessOnly, externalAppUserId: externalAppUserId, createdAt: createdAt, modifiedAt: modifiedAt, language: language, timezone: timezone, spaceAmount: spaceAmount, spaceUsed: spaceUsed, maxUploadSize: maxUploadSize, status: status, jobTitle: jobTitle, phone: phone, address: address, avatarUrl: avatarUrl, notificationEmail: notificationEmail, name: name, login: login, id: id, type: type };
}
exports.deserializeUserFull = deserializeUserFull;
function serializeUserFull(val) {
    const base = serializeUser(val);
    if (!(0, json_js_1.isJson)(base, "object")) {
        throw "Expecting an object for \"UserFull\"";
    }
    return Object.assign(Object.assign({}, base), { ["role"]: val.role === void 0 ? void 0 : serializeUserFullRoleField(val.role), ["tracking_codes"]: val.trackingCodes === void 0 ? void 0 : val.trackingCodes.map(function (item) {
            return serializeTrackingCode(item);
        }), ["can_see_managed_users"]: val.canSeeManagedUsers, ["is_sync_enabled"]: val.isSyncEnabled, ["is_external_collab_restricted"]: val.isExternalCollabRestricted, ["is_exempt_from_device_limits"]: val.isExemptFromDeviceLimits, ["is_exempt_from_login_verification"]: val.isExemptFromLoginVerification, ["enterprise"]: val.enterprise === void 0 ? void 0 : serializeUserFullEnterpriseField(val.enterprise), ["my_tags"]: val.myTags === void 0 ? void 0 : val.myTags.map(function (item) {
            return void 0;
        }), ["hostname"]: val.hostname, ["is_platform_access_only"]: val.isPlatformAccessOnly, ["external_app_user_id"]: val.externalAppUserId });
}
exports.serializeUserFull = serializeUserFull;
function deserializeMetadataFilterScopeField(val) {
    if (!(0, json_js_1.isJson)(val, "string")) {
        throw "Expecting a string for \"MetadataFilterScopeField\"";
    }
    if (val === "global") {
        return "global";
    }
    if (val === "enterprise") {
        return "enterprise";
    }
    if (val === "enterprise_{enterprise_id}") {
        return "enterprise_{enterprise_id}";
    }
    throw "".concat("Invalid value: ", val);
}
exports.deserializeMetadataFilterScopeField = deserializeMetadataFilterScopeField;
function serializeMetadataFilterScopeField(val) {
    return val;
}
exports.serializeMetadataFilterScopeField = serializeMetadataFilterScopeField;
function deserializeMetadataFilterFiltersField(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFilterFiltersField\"";
    }
    return {};
}
exports.deserializeMetadataFilterFiltersField = deserializeMetadataFilterFiltersField;
function serializeMetadataFilterFiltersField(val) {
    return {};
}
exports.serializeMetadataFilterFiltersField = serializeMetadataFilterFiltersField;
function deserializeMetadataFilter(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFilter\"";
    }
    const scope = val.scope === void 0 ? void 0 : deserializeMetadataFilterScopeField(val.scope);
    if (!(val.templateKey === void 0) && !(0, json_js_1.isJson)(val.templateKey, "string")) {
        throw "Expecting string for \"templateKey\" of type \"MetadataFilter\"";
    }
    const templateKey = (0, json_js_1.isJson)(val.templateKey, "string") ? val.templateKey : void 0;
    const filters = val.filters === void 0 ? void 0 : deserializeMetadataFilterFiltersField(val.filters);
    return { scope: scope, templateKey: templateKey, filters: filters };
}
exports.deserializeMetadataFilter = deserializeMetadataFilter;
function serializeMetadataFilter(val) {
    return { ["scope"]: val.scope === void 0 ? void 0 : serializeMetadataFilterScopeField(val.scope), ["templateKey"]: val.templateKey, ["filters"]: val.filters === void 0 ? void 0 : serializeMetadataFilterFiltersField(val.filters) };
}
exports.serializeMetadataFilter = serializeMetadataFilter;
function deserializeMetadataFieldFilterString(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFieldFilterString\"";
    }
    return {};
}
exports.deserializeMetadataFieldFilterString = deserializeMetadataFieldFilterString;
function serializeMetadataFieldFilterString(val) {
    return {};
}
exports.serializeMetadataFieldFilterString = serializeMetadataFieldFilterString;
function deserializeMetadataFieldFilterFloat(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFieldFilterFloat\"";
    }
    return {};
}
exports.deserializeMetadataFieldFilterFloat = deserializeMetadataFieldFilterFloat;
function serializeMetadataFieldFilterFloat(val) {
    return {};
}
exports.serializeMetadataFieldFilterFloat = serializeMetadataFieldFilterFloat;
function deserializeMetadataFieldFilterMultiSelect(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFieldFilterMultiSelect\"";
    }
    return {};
}
exports.deserializeMetadataFieldFilterMultiSelect = deserializeMetadataFieldFilterMultiSelect;
function serializeMetadataFieldFilterMultiSelect(val) {
    return {};
}
exports.serializeMetadataFieldFilterMultiSelect = serializeMetadataFieldFilterMultiSelect;
function deserializeMetadataFieldFilterFloatRange(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFieldFilterFloatRange\"";
    }
    return {};
}
exports.deserializeMetadataFieldFilterFloatRange = deserializeMetadataFieldFilterFloatRange;
function serializeMetadataFieldFilterFloatRange(val) {
    return {};
}
exports.serializeMetadataFieldFilterFloatRange = serializeMetadataFieldFilterFloatRange;
function deserializeMetadataFieldFilterDateRange(val) {
    if (!(0, json_js_1.isJson)(val, "object")) {
        throw "Expecting an object for \"MetadataFieldFilterDateRange\"";
    }
    return {};
}
exports.deserializeMetadataFieldFilterDateRange = deserializeMetadataFieldFilterDateRange;
function serializeMetadataFieldFilterDateRange(val) {
    return {};
}
exports.serializeMetadataFieldFilterDateRange = serializeMetadataFieldFilterDateRange;
//# sourceMappingURL=schemas.generated.js.map